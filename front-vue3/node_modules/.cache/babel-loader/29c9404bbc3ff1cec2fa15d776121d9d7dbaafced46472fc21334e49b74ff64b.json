{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nconst apiUrl = 'http://localhost:1452'; // Ваша базовая ссылка для изображений\n\nexport default {\n  __name: 'ProductDetails',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const product = ref({});\n    const relatedProducts = ref([]);\n    const productImageUrl = ref('');\n    onMounted(async () => {\n      const productId = route.params.id;\n\n      // Получаем данные о продукте\n      const productResponse = await fetch(`${apiUrl}/api/products/${productId}`);\n      const productData = await productResponse.json();\n      product.value = productData;\n      productImageUrl.value = `${apiUrl}/${productData.images[0]}`;\n\n      // Получаем сопутствующие товары\n      const relatedResponse = await fetch(`${apiUrl}/api/products?category=${productData.category}&excludeId=${productId}`);\n      const relatedData = await relatedResponse.json();\n\n      // Ограничиваем количество сопутствующих товаров до 4\n      relatedProducts.value = relatedData.slice(0, 4);\n    });\n\n    // Функция для перехода к продукту\n    const navigateToProduct = productId => {\n      router.push(`/products/${productId}`);\n    };\n    const __returned__ = {\n      route,\n      router,\n      product,\n      relatedProducts,\n      productImageUrl,\n      apiUrl,\n      navigateToProduct,\n      onMounted,\n      ref,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","useRoute","useRouter","apiUrl","route","router","product","relatedProducts","productImageUrl","productId","params","id","productResponse","fetch","productData","json","value","images","relatedResponse","category","relatedData","slice","navigateToProduct","push"],"sources":["C:/shopvue/front-vue3/src/components/Products/ProductDetails.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Детали продукта</h1>\r\n\r\n        <p> {{ product.name }}</p>\r\n        <!-- Цена товара -->\r\n        <p v-if=\"product.discount_price\">\r\n            <strong>Цена:</strong>\r\n            <span class=\"old-price\">{{ product.price }} руб.</span>\r\n            <span class=\"discount-price\">{{ product.discount_price }} руб.</span>\r\n        </p>\r\n        <p v-else>\r\n            <strong>Цена:</strong> {{ product.price }} руб.\r\n        </p>\r\n\r\n        <img :src=\"productImageUrl\" alt=\"Product image\" />\r\n\r\n        <div v-if=\"product.characteristics && product.characteristics.length > 0\">\r\n            <h2>Характеристики</h2>\r\n            <ul>\r\n                <li v-for=\"(char, index) in product.characteristics\" :key=\"index\">\r\n                    <strong>{{ char.characteristic }}:</strong>\r\n                    {{ char.value }} {{ char.unit_type }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-if=\"relatedProducts.length > 0\">\r\n            <h2>Сопутствующие товары</h2>\r\n            <div class=\"related-products\">\r\n                <div v-for=\"(relatedProduct) in relatedProducts\" :key=\"relatedProduct.id\" class=\"related-product\"\r\n                    @click=\"navigateToProduct(relatedProduct.id)\">\r\n                    <img :src=\"`${apiUrl}/${relatedProduct.images[0]}`\" alt=\"Related Product\">\r\n                    <p class=\"description\">{{ relatedProduct.name }}</p>\r\n                    <p class=\"price\">{{ relatedProduct.price }} руб.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"product.discount_price\">\r\n            <p><strong>Цена со скидкой:</strong> {{ product.discount_price }} руб.</p>\r\n        </div>\r\n\r\n        <p><strong>Гарантия:</strong> {{ product.guarantee }} месяцев</p>\r\n        <p><strong>Рейтинг:</strong> {{ product.rating }} ({{ product.count_review }} отзывов)</p>\r\n        <p><strong>Страна производства:</strong> {{ product.country }}</p>\r\n        <p><strong>Цвет:</strong> {{ product.color }}</p>\r\n        <p><strong>Бренд:</strong> {{ product.brand }}</p>\r\n        <p><strong>Категория:</strong> {{ product.category }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst product = ref({});\r\nconst relatedProducts = ref([]);\r\nconst productImageUrl = ref('');\r\nconst apiUrl = 'http://localhost:1452';  // Ваша базовая ссылка для изображений\r\n\r\nonMounted(async () => {\r\n    const productId = route.params.id;\r\n\r\n    // Получаем данные о продукте\r\n    const productResponse = await fetch(`${apiUrl}/api/products/${productId}`);\r\n    const productData = await productResponse.json();\r\n    product.value = productData;\r\n    productImageUrl.value = `${apiUrl}/${productData.images[0]}`;\r\n\r\n    // Получаем сопутствующие товары\r\n    const relatedResponse = await fetch(`${apiUrl}/api/products?category=${productData.category}&excludeId=${productId}`);\r\n    const relatedData = await relatedResponse.json();\r\n\r\n    // Ограничиваем количество сопутствующих товаров до 4\r\n    relatedProducts.value = relatedData.slice(0, 4);\r\n});\r\n\r\n// Функция для перехода к продукту\r\nconst navigateToProduct = (productId) => {\r\n    router.push(`/products/${productId}`);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n    font-size: 2em;\r\n    margin-bottom: 10px;\r\n}\r\n\r\np {\r\n    font-size: 1.1em;\r\n    margin: 5px 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\nul li {\r\n    font-size: 1em;\r\n    margin-bottom: 5px;\r\n}\r\n\r\nstrong {\r\n    font-weight: bold;\r\n}\r\n\r\n.related-products {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-top: 30px;\r\n}\r\n\r\n.related-product {\r\n    text-align: center;\r\n    cursor: pointer;\r\n}\r\n\r\n.related-product img {\r\n    border-radius: 5px;\r\n}\r\n\r\n.description {\r\n    font-size: 1em;\r\n    margin-top: 5px;\r\n}\r\n\r\n.price {\r\n    font-size: 1.1em;\r\n    font-weight: bold;\r\n    margin-top: 5px;\r\n}\r\n\r\n.old-price {\r\n    font-family: ABeeZee;\r\nfont-size: 32px;\r\nfont-style: italic;\r\nfont-weight: 400;\r\nline-height: 48px;\r\nletter-spacing: 0.03em;\r\ntext-align: left;\r\n\r\n}\r\n\r\n.discount-price {\r\n    font-family: Abel;\r\nfont-size: 24px;\r\nfont-weight: 400;\r\nline-height: 32px;\r\nletter-spacing: 0.03em;\r\ntext-align: left;\r\ncolor: #A0A0A0;\r\n\r\n\r\n}\r\n</style>"],"mappings":";AAqDA,SAASA,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAOhD,MAAMC,MAAM,GAAG,uBAAuB,CAAC,CAAE;;;;;;;;IALzC,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,OAAO,GAAGN,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,MAAMO,eAAe,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMQ,eAAe,GAAGR,GAAG,CAAC,EAAE,CAAC;IAG/BD,SAAS,CAAC,YAAY;MAClB,MAAMU,SAAS,GAAGL,KAAK,CAACM,MAAM,CAACC,EAAE;;MAEjC;MACA,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAC,GAAGV,MAAM,iBAAiBM,SAAS,EAAE,CAAC;MAC1E,MAAMK,WAAW,GAAG,MAAMF,eAAe,CAACG,IAAI,CAAC,CAAC;MAChDT,OAAO,CAACU,KAAK,GAAGF,WAAW;MAC3BN,eAAe,CAACQ,KAAK,GAAG,GAAGb,MAAM,IAAIW,WAAW,CAACG,MAAM,CAAC,CAAC,CAAC,EAAE;;MAE5D;MACA,MAAMC,eAAe,GAAG,MAAML,KAAK,CAAC,GAAGV,MAAM,0BAA0BW,WAAW,CAACK,QAAQ,cAAcV,SAAS,EAAE,CAAC;MACrH,MAAMW,WAAW,GAAG,MAAMF,eAAe,CAACH,IAAI,CAAC,CAAC;;MAEhD;MACAR,eAAe,CAACS,KAAK,GAAGI,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC,CAAC;;IAEF;IACA,MAAMC,iBAAiB,GAAIb,SAAS,IAAK;MACrCJ,MAAM,CAACkB,IAAI,CAAC,aAAad,SAAS,EAAE,CAAC;IACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}