{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { createStore } from 'vuex';\nconst store = createStore({\n  state: {\n    cart: []\n  },\n  mutations: {\n    addToCart(state, product) {\n      const existingProduct = state.cart.find(item => item.id === product.id);\n      if (existingProduct) {\n        existingProduct.quantity++;\n      } else {\n        state.cart.push({\n          ...product,\n          quantity: 1\n        });\n      }\n    },\n    removeFromCart(state, productId) {\n      const index = state.cart.findIndex(item => item.id === productId);\n      if (index !== -1) {\n        state.cart.splice(index, 1);\n      }\n    },\n    increaseQuantity(state, productId) {\n      const product = state.cart.find(item => item.id === productId);\n      if (product) {\n        product.quantity++;\n      }\n    },\n    decreaseQuantity(state, productId) {\n      const product = state.cart.find(item => item.id === productId);\n      if (product && product.quantity > 1) {\n        product.quantity--;\n      }\n    }\n  },\n  actions: {\n    addToCart({\n      commit\n    }, product) {\n      commit('addToCart', product);\n    },\n    removeFromCart({\n      commit\n    }, productId) {\n      commit('removeFromCart', productId);\n    },\n    increaseQuantity({\n      commit\n    }, productId) {\n      commit('increaseQuantity', productId);\n    },\n    decreaseQuantity({\n      commit\n    }, productId) {\n      commit('decreaseQuantity', productId);\n    }\n  },\n  getters: {\n    cart: state => state.cart,\n    totalPrice: state => {\n      return state.cart.reduce((total, item) => total + (item.price || item.d) * item.quantity, 0);\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","cart","mutations","addToCart","product","existingProduct","find","item","id","quantity","push","removeFromCart","productId","index","findIndex","splice","increaseQuantity","decreaseQuantity","actions","commit","getters","totalPrice","reduce","total","price","d"],"sources":["C:/shopvue/front-vue3/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\n\r\nconst store = createStore({\r\n  state: {\r\n    cart: []\r\n  },\r\n  mutations: {\r\n    addToCart(state, product) {\r\n      const existingProduct = state.cart.find(item => item.id === product.id);\r\n      if (existingProduct) {\r\n        existingProduct.quantity++;\r\n      } else {\r\n        state.cart.push({ ...product, quantity: 1 });\r\n      }\r\n    },\r\n    removeFromCart(state, productId) {\r\n      const index = state.cart.findIndex(item => item.id === productId);\r\n      if (index !== -1) {\r\n        state.cart.splice(index, 1);\r\n      }\r\n    },\r\n    increaseQuantity(state, productId) {\r\n      const product = state.cart.find(item => item.id === productId);\r\n      if (product) {\r\n        product.quantity++;\r\n      }\r\n    },\r\n    decreaseQuantity(state, productId) {\r\n      const product = state.cart.find(item => item.id === productId);\r\n      if (product && product.quantity > 1) {\r\n        product.quantity--;\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    addToCart({ commit }, product) {\r\n      commit('addToCart', product);\r\n    },\r\n    removeFromCart({ commit }, productId) {\r\n      commit('removeFromCart', productId);\r\n    },\r\n    increaseQuantity({ commit }, productId) {\r\n      commit('increaseQuantity', productId);\r\n    },\r\n    decreaseQuantity({ commit }, productId) {\r\n      commit('decreaseQuantity', productId);\r\n    }\r\n  },\r\n  getters: {\r\n    cart: (state) => state.cart,\r\n    totalPrice: (state) => {\r\n      return state.cart.reduce((total, item) => total + (item.price || item.d)  * item.quantity, 0);\r\n    }\r\n  }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":";;;;AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,KAAK,EAAE;IACLC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACTC,SAASA,CAACH,KAAK,EAAEI,OAAO,EAAE;MACxB,MAAMC,eAAe,GAAGL,KAAK,CAACC,IAAI,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACvE,IAAIH,eAAe,EAAE;QACnBA,eAAe,CAACI,QAAQ,EAAE;MAC5B,CAAC,MAAM;QACLT,KAAK,CAACC,IAAI,CAACS,IAAI,CAAC;UAAE,GAAGN,OAAO;UAAEK,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC9C;IACF,CAAC;IACDE,cAAcA,CAACX,KAAK,EAAEY,SAAS,EAAE;MAC/B,MAAMC,KAAK,GAAGb,KAAK,CAACC,IAAI,CAACa,SAAS,CAACP,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,SAAS,CAAC;MACjE,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBb,KAAK,CAACC,IAAI,CAACc,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC7B;IACF,CAAC;IACDG,gBAAgBA,CAAChB,KAAK,EAAEY,SAAS,EAAE;MACjC,MAAMR,OAAO,GAAGJ,KAAK,CAACC,IAAI,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,SAAS,CAAC;MAC9D,IAAIR,OAAO,EAAE;QACXA,OAAO,CAACK,QAAQ,EAAE;MACpB;IACF,CAAC;IACDQ,gBAAgBA,CAACjB,KAAK,EAAEY,SAAS,EAAE;MACjC,MAAMR,OAAO,GAAGJ,KAAK,CAACC,IAAI,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,SAAS,CAAC;MAC9D,IAAIR,OAAO,IAAIA,OAAO,CAACK,QAAQ,GAAG,CAAC,EAAE;QACnCL,OAAO,CAACK,QAAQ,EAAE;MACpB;IACF;EACF,CAAC;EACDS,OAAO,EAAE;IACPf,SAASA,CAAC;MAAEgB;IAAO,CAAC,EAAEf,OAAO,EAAE;MAC7Be,MAAM,CAAC,WAAW,EAAEf,OAAO,CAAC;IAC9B,CAAC;IACDO,cAAcA,CAAC;MAAEQ;IAAO,CAAC,EAAEP,SAAS,EAAE;MACpCO,MAAM,CAAC,gBAAgB,EAAEP,SAAS,CAAC;IACrC,CAAC;IACDI,gBAAgBA,CAAC;MAAEG;IAAO,CAAC,EAAEP,SAAS,EAAE;MACtCO,MAAM,CAAC,kBAAkB,EAAEP,SAAS,CAAC;IACvC,CAAC;IACDK,gBAAgBA,CAAC;MAAEE;IAAO,CAAC,EAAEP,SAAS,EAAE;MACtCO,MAAM,CAAC,kBAAkB,EAAEP,SAAS,CAAC;IACvC;EACF,CAAC;EACDQ,OAAO,EAAE;IACPnB,IAAI,EAAGD,KAAK,IAAKA,KAAK,CAACC,IAAI;IAC3BoB,UAAU,EAAGrB,KAAK,IAAK;MACrB,OAAOA,KAAK,CAACC,IAAI,CAACqB,MAAM,CAAC,CAACC,KAAK,EAAEhB,IAAI,KAAKgB,KAAK,GAAG,CAAChB,IAAI,CAACiB,KAAK,IAAIjB,IAAI,CAACkB,CAAC,IAAKlB,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC;IAC/F;EACF;AACF,CAAC,CAAC;AAEF,eAAeV,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}