{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_2 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_3 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Фильтр по брендам\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      value: brand,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedBrands = $event),\n      onChange: $event => _ctx.$emit('change', brand)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), [[_vModelCheckbox, _ctx.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, _toDisplayString(brand), 9 /* TEXT, PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$setup","brands","brand","key","type","id","value","_cache","$event","_ctx","selectedBrands","onChange","$emit","_hoisted_2","for","_toDisplayString","_hoisted_3"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Filter\\BrandFilter.vue"],"sourcesContent":["<template>\r\n    <div class=\"brand-filter\">\r\n      <h3>Фильтр по брендам</h3>\r\n      <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n        <input type=\"checkbox\" :id=\"brand\" :value=\"brand\" v-model=\"selectedBrands\" @change=\"$emit('change', brand)\" />\r\n        <label :for=\"brand\">{{ brand }}</label>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue';\r\n  const brands = ref([]);\r\n  </script>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAc;mBAD7B;mBAAA;;uBACIC,mBAAA,CAMM,OANNC,UAMM,G,0BALJC,mBAAA,CAA0B,YAAtB,mBAAiB,uB,kBACrBF,mBAAA,CAGMG,SAAA,QANZC,WAAA,CAG2BC,MAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAjBP,mBAAA,CAGM;MAHwBQ,GAAG,EAAED,KAAK;MAAER,KAAK,EAAC;wBAC9CG,mBAAA,CAA8G;MAAvGO,IAAI,EAAC,UAAU;MAAEC,EAAE,EAAEH,KAAK;MAAGI,KAAK,EAAEJ,KAAK;MAJxD,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAImEC,IAAA,CAAAC,cAAc,GAAAF,MAAA;MAAGG,QAAM,EAAAH,MAAA,IAAEC,IAAA,CAAAG,KAAK,WAAWV,KAAK;6CAJjHW,UAAA,I,kBAImEJ,IAAA,CAAAC,cAAc,E,GACzEb,mBAAA,CAAuC;MAA/BiB,GAAG,EAAEZ;IAAK,GAAAa,gBAAA,CAAKb,KAAK,wBALpCc,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}