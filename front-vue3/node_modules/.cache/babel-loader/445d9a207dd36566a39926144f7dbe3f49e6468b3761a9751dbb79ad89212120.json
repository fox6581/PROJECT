{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pagination\"\n};\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h3\", null, \"Количество товаров: \" + _toDisplayString($setup.totalProducts), 1 /* TEXT */), _createVNode($setup[\"ProductCart\"], {\n    products: $setup.paginatedProducts,\n    apiUrl: $setup.apiUrl\n  }, null, 8 /* PROPS */, [\"products\", \"apiUrl\"]), _createCommentVNode(\" Пагинация \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: $setup.prevPage,\n    disabled: $setup.currentPage === 1\n  }, \"Назад\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", null, \"Страница \" + _toDisplayString($setup.currentPage) + \" из \" + _toDisplayString($setup.totalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.nextPage,\n    disabled: $setup.currentPage === $setup.totalPages\n  }, \"Вперед\", 8 /* PROPS */, _hoisted_3)]), _createVNode($setup[\"CategoryFilter\"], {\n    categories: _ctx.categorys,\n    selectedCategories: $setup.selectedCategorys,\n    \"onUpdate:selectedCategories\": $setup.updateSelectedCategories\n  }, null, 8 /* PROPS */, [\"categories\", \"selectedCategories\"]), _createVNode($setup[\"BrandFilter\"], {\n    brands: $setup.brands,\n    selectedBrands: $setup.selectedBrands,\n    \"onUpdate:selectedBrands\": $setup.updateSelectedBrands\n  }, null, 8 /* PROPS */, [\"brands\", \"selectedBrands\"]), _createVNode($setup[\"CharacteristicFilter\"], {\n    characteristics: $setup.characteristics,\n    selectedCharacteristics: $setup.selectedCharacteristics,\n    \"onUpdate:selectedCharacteristics\": $setup.updateSelectedCharacteristics\n  }, null, 8 /* PROPS */, [\"characteristics\", \"selectedCharacteristics\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$setup","totalProducts","_createVNode","products","paginatedProducts","apiUrl","_createCommentVNode","_hoisted_1","onClick","prevPage","disabled","currentPage","_hoisted_2","totalPages","nextPage","_hoisted_3","categories","_ctx","categorys","selectedCategories","selectedCategorys","updateSelectedCategories","brands","selectedBrands","updateSelectedBrands","characteristics","selectedCharacteristics","updateSelectedCharacteristics"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Количество товаров: {{ totalProducts }}</h3>\r\n  \r\n      <ProductCart :products=\"paginatedProducts\" :apiUrl=\"apiUrl\" />\r\n  \r\n      <!-- Пагинация -->\r\n      <div class=\"pagination\">\r\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Назад</button>\r\n        <span>Страница {{ currentPage }} из {{ totalPages }}</span>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Вперед</button>\r\n      </div>\r\n  \r\n      <CategoryFilter \r\n        :categories=\"categorys\"\r\n        :selectedCategories=\"selectedCategorys\"\r\n        @update:selectedCategories=\"updateSelectedCategories\"\r\n      />\r\n  \r\n      <BrandFilter \r\n        :brands=\"brands\"\r\n        :selectedBrands=\"selectedBrands\"\r\n        @update:selectedBrands=\"updateSelectedBrands\"\r\n      />\r\n  \r\n      <CharacteristicFilter \r\n        :characteristics=\"characteristics\"\r\n        :selectedCharacteristics=\"selectedCharacteristics\"\r\n        @update:selectedCharacteristics=\"updateSelectedCharacteristics\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  import ProductCart from '../Products/ProductCart.vue';\r\n  import CategoryFilter from './CategoryFilter.vue';\r\n  import BrandFilter from './BrandFilter.vue';\r\n  import CharacteristicFilter from './CharacteristicFilter.vue';\r\n  import { API_BASE_URL } from '@/config';\r\n  \r\n  const apiUrl = API_BASE_URL;\r\n  \r\n  const currentPage = ref(1);\r\n  const productsPerPage = 10;\r\n  \r\n  const totalPages = computed(() => Math.ceil(totalProducts.value / productsPerPage));\r\n  \r\n  const totalProducts = computed(() => filteredProducts.value.length);\r\n  \r\n  const paginatedProducts = computed(() => {\r\n    const startIndex = (currentPage.value - 1) * productsPerPage;\r\n    return filteredProducts.value.slice(startIndex, startIndex + productsPerPage);\r\n  });\r\n  \r\n  const nextPage = () => {\r\n    if (currentPage.value < totalPages.value) {\r\n      currentPage.value++;\r\n    }\r\n  };\r\n  \r\n  const prevPage = () => {\r\n    if (currentPage.value > 1) {\r\n      currentPage.value--;\r\n    }\r\n  };\r\n  \r\n  const selectedCharacteristics = ref({});\r\n  const selectedCategorys = ref([]);\r\n  const selectedBrands = ref([]);\r\n  const categories = ref([]);\r\n  const products = ref([]);\r\n  const brands = ref([]);\r\n  const characteristics = ref({});\r\n  \r\n  onMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n  });\r\n  \r\n  const loadCategories = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/products');\r\n      const data = await response.json();\r\n      categories.value = data;\r\n      extractBrands(data);\r\n      extractCategorys(data);\r\n      extractCharacteristics(data);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n  };\r\n  \r\n  const loadProducts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/products');\r\n      const data = await response.json();\r\n      products.value = data;\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n  };\r\n  \r\n  const extractBrands = (categoriesData) => {\r\n    const allBrands = new Set();\r\n    categoriesData.forEach(category => {\r\n      if (category.brand) {\r\n        allBrands.add(category.brand);\r\n      }\r\n    });\r\n    brands.value = Array.from(allBrands);\r\n  };\r\n  \r\n  const extractCategorys = (categoriesData) => {\r\n    const allCategorys = new Set();\r\n    categoriesData.forEach(category => {\r\n      if (category.category) {\r\n        allCategorys.add(category.category);\r\n      }\r\n    });\r\n    categorys.value = Array.from(allCategorys);\r\n  };\r\n  \r\n  const extractCharacteristics = (categoriesData) => {\r\n    const characteristicsData = {};\r\n    categoriesData.forEach(item => {\r\n      if (item.characteristics && Array.isArray(item.characteristics)) {\r\n        item.characteristics.forEach(characteristic => {\r\n          const charName = characteristic.characteristic;\r\n          const charValue = characteristic.value;\r\n  \r\n          if (!characteristicsData[charName]) {\r\n            characteristicsData[charName] = new Set();\r\n          }\r\n          characteristicsData[charName].add(charValue);\r\n        });\r\n      }\r\n    });\r\n  \r\n    for (const charName in characteristicsData) {\r\n      characteristicsData[charName] = Array.from(characteristicsData[charName]);\r\n    }\r\n  \r\n    characteristics.value = { ...characteristicsData };\r\n  };\r\n  \r\n  const updateSelectedCategories = (updatedCategories) => {\r\n    selectedCategorys.value = updatedCategories;\r\n  };\r\n  \r\n  const updateSelectedBrands = (updatedBrands) => {\r\n    selectedBrands.value = updatedBrands;\r\n  };\r\n  \r\n  const updateSelectedCharacteristics = (updatedCharacteristics) => {\r\n    selectedCharacteristics.value = updatedCharacteristics;\r\n  };\r\n  \r\n  const filteredProducts = computed(() => {\r\n    return products.value.filter(product => {\r\n      const matchesCategory = selectedCategorys.value.length === 0 || selectedCategorys.value.includes(product.category);\r\n      const matchesBrand = selectedBrands.value.length === 0 || selectedBrands.value.includes(product.brand);\r\n  \r\n      const matchesCharacteristics = Object.entries(selectedCharacteristics.value).every(([key, values]) => {\r\n        return !values.length || values.includes(product.characteristics[key]);\r\n      });\r\n  \r\n      return matchesCategory && matchesBrand && matchesCharacteristics;\r\n    });\r\n  });\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .pagination {\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px;\r\n    margin: 0 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAOWA,KAAK,EAAC;AAAY;mBAP7B;mBAAA;;uBACIC,mBAAA,CA6BM,cA5BJC,mBAAA,CAAgD,YAA5C,sBAAoB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,aAAa,kBAExCC,YAAA,CAA8DF,MAAA;IAAhDG,QAAQ,EAAEH,MAAA,CAAAI,iBAAiB;IAAGC,MAAM,EAAEL,MAAA,CAAAK;mDAEpDC,mBAAA,eAAkB,EAClBR,mBAAA,CAIM,OAJNS,UAIM,GAHJT,mBAAA,CAAsE;IAA7DU,OAAK,EAAER,MAAA,CAAAS,QAAQ;IAAGC,QAAQ,EAAEV,MAAA,CAAAW,WAAW;KAAQ,OAAK,iBARrEC,UAAA,GASQd,mBAAA,CAA2D,cAArD,WAAS,GAAAC,gBAAA,CAAGC,MAAA,CAAAW,WAAW,IAAG,MAAI,GAAAZ,gBAAA,CAAGC,MAAA,CAAAa,UAAU,kBACjDf,mBAAA,CAAgF;IAAvEU,OAAK,EAAER,MAAA,CAAAc,QAAQ;IAAGJ,QAAQ,EAAEV,MAAA,CAAAW,WAAW,KAAKX,MAAA,CAAAa;KAAY,QAAM,iBAV/EE,UAAA,E,GAaMb,YAAA,CAIEF,MAAA;IAHCgB,UAAU,EAAEC,IAAA,CAAAC,SAAS;IACrBC,kBAAkB,EAAEnB,MAAA,CAAAoB,iBAAiB;IACrC,6BAAyB,EAAEpB,MAAA,CAAAqB;iEAG9BnB,YAAA,CAIEF,MAAA;IAHCsB,MAAM,EAAEtB,MAAA,CAAAsB,MAAM;IACdC,cAAc,EAAEvB,MAAA,CAAAuB,cAAc;IAC9B,yBAAqB,EAAEvB,MAAA,CAAAwB;yDAG1BtB,YAAA,CAIEF,MAAA;IAHCyB,eAAe,EAAEzB,MAAA,CAAAyB,eAAe;IAChCC,uBAAuB,EAAE1B,MAAA,CAAA0B,uBAAuB;IAChD,kCAA8B,EAAE1B,MAAA,CAAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}