{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref, onMounted, computed } from 'vue';\nexport default {\n  __name: 'LeftMenu',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const categories = ref([]);\n    const products = ref([]);\n    const selectedCategory = ref(null);\n    onMounted(async () => {\n      await loadCategories();\n      await loadProducts();\n    });\n\n    // Функция для загрузки категорий\n    const loadCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:1452/api/category/1');\n        if (!response.ok) {\n          throw new Error('Ошибка при загрузке категорий');\n        }\n        const data = await response.json();\n        console.log(\"Загруженные товары:\", data); // Логируем товары\n        categories.value = data; // Сохраняем категории\n      } catch (error) {\n        console.error('Ошибка при загрузке категорий:', error);\n      }\n    };\n\n    // Функция для загрузки товаров по категории\n    const loadProducts = async () => {\n      if (!selectedCategory.value) return; // Если категория не выбрана, не загружаем товары\n      try {\n        const response = await fetch(`http://localhost:1452/api/category/1`);\n        if (!response.ok) {\n          throw new Error('Ошибка при загрузке товаров');\n        }\n        const data = await response.json();\n        products.value = data; // Предполагаем, что API возвращает массив товаров в поле \"products\"\n      } catch (error) {\n        console.error('Ошибка при загрузке товаров:', error);\n      }\n    };\n\n    // Фильтруем товары по выбранной категории\n    const filteredProducts = computed(() => {\n      return selectedCategory.value ? products.value.filter(product => product.category === selectedCategory.value.name) : products.value;\n    });\n\n    // Выбираем категорию\n    const selectCategory = category => {\n      selectedCategory.value = category;\n      loadProducts(); // Загружаем товары для выбранной категории\n    };\n    const __returned__ = {\n      categories,\n      products,\n      selectedCategory,\n      loadCategories,\n      loadProducts,\n      filteredProducts,\n      selectCategory,\n      ref,\n      onMounted,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","categories","products","selectedCategory","loadCategories","loadProducts","response","fetch","ok","Error","data","json","console","log","value","error","filteredProducts","filter","product","category","name","selectCategory"],"sources":["C:/shopvue/front-vue3/src/components/Menu/LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"category-menu\">\r\n        <h3>Категории</h3>\r\n        <ul>\r\n          <li v-for=\"category in categories\" :key=\"category.id\" @click=\"selectCategory(category)\">\r\n            {{ category.brand }}\r\n            {{ category.category }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  <h1>1111111</h1>\r\n      <div class=\"product-list\">\r\n        <div v-for=\"product in filteredProducts\" :key=\"product.id\" class=\"product\">\r\n          <h4>{{ product.name }}</h4>\r\n          <ul>\r\n            <li v-for=\"(characteristic, index) in product.characteristics\" :key=\"index\">\r\n              {{ characteristic.characteristic }}: {{ characteristic.value }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  \r\n  const categories = ref([]);\r\n  const products = ref([]);\r\n  const selectedCategory = ref(null);\r\n  \r\n  onMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n  });\r\n  \r\n  // Функция для загрузки категорий\r\n  const loadCategories = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/category/1');\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка при загрузке категорий');\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Загруженные товары:\", data);  // Логируем товары\r\n      categories.value = data; // Сохраняем категории\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n  };\r\n  \r\n  // Функция для загрузки товаров по категории\r\n  const loadProducts = async () => {\r\n    if (!selectedCategory.value) return; // Если категория не выбрана, не загружаем товары\r\n    try {\r\n      const response = await fetch(`http://localhost:1452/api/category/1`);\r\n      if (!response.ok) {\r\n    \r\n        throw new Error('Ошибка при загрузке товаров');\r\n      }\r\n      const data = await response.json();\r\n\r\n      products.value = data; // Предполагаем, что API возвращает массив товаров в поле \"products\"\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n  };\r\n  \r\n  // Фильтруем товары по выбранной категории\r\n  const filteredProducts = computed(() => {\r\n    return selectedCategory.value\r\n      ? products.value.filter(product => product.category === selectedCategory.value.name)\r\n      : products.value;\r\n  });\r\n  \r\n  // Выбираем категорию\r\n  const selectCategory = (category) => {\r\n    selectedCategory.value = category;\r\n    loadProducts(); // Загружаем товары для выбранной категории\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .category-menu {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .category-menu ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .category-menu li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    background-color: #f0f0f0;\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .category-menu li:hover {\r\n    background-color: #e0e0e0;\r\n  }\r\n  \r\n  .product-list .product {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  </style>\r\n  "],"mappings":";;AA0BE,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;IAE9C,MAAMC,UAAU,GAAGH,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,gBAAgB,GAAGL,GAAG,CAAC,IAAI,CAAC;IAElCC,SAAS,CAAC,YAAY;MACpB,MAAMK,cAAc,CAAC,CAAC;MACtB,MAAMC,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC;;IAEF;IACA,MAAMD,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,IAAI,CAAC,CAAC,CAAE;QAC3CT,UAAU,CAACa,KAAK,GAAGJ,IAAI,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;;IAED;IACA,MAAMV,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACF,gBAAgB,CAACW,KAAK,EAAE,OAAO,CAAC;MACrC,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAEhB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAElCT,QAAQ,CAACY,KAAK,GAAGJ,IAAI,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;;IAED;IACA,MAAMC,gBAAgB,GAAGhB,QAAQ,CAAC,MAAM;MACtC,OAAOG,gBAAgB,CAACW,KAAK,GACzBZ,QAAQ,CAACY,KAAK,CAACG,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,QAAQ,KAAKhB,gBAAgB,CAACW,KAAK,CAACM,IAAI,CAAC,GAClFlB,QAAQ,CAACY,KAAK;IACpB,CAAC,CAAC;;IAEF;IACA,MAAMO,cAAc,GAAIF,QAAQ,IAAK;MACnChB,gBAAgB,CAACW,KAAK,GAAGK,QAAQ;MACjCd,YAAY,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}