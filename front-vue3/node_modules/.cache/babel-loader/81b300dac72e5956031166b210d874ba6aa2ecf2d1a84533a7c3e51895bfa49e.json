{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect } from \"vue\";\nimport _imports_0 from '@/assets/Arrow.png';\nimport _imports_1 from '@/assets/Filters.png';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"message-box\"\n};\nconst _hoisted_2 = {\n  class: \"mobile-filter\"\n};\nconst _hoisted_3 = {\n  class: \"price-range\"\n};\nconst _hoisted_4 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_5 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_6 = [\"for\"];\nconst _hoisted_7 = {\n  class: \"brands\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"category-checkbox\"\n};\nconst _hoisted_9 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_10 = [\"for\"];\nconst _hoisted_11 = {\n  class: \"characteristic-filter\"\n};\nconst _hoisted_12 = [\"id\", \"value\", \"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_13 = [\"for\"];\nconst _hoisted_14 = {\n  class: \"myall\"\n};\nconst _hoisted_15 = {\n  class: \"menu_left\"\n};\nconst _hoisted_16 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_17 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_18 = [\"for\"];\nconst _hoisted_19 = {\n  class: \"brands\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"category-checkbox\"\n};\nconst _hoisted_21 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_22 = [\"for\"];\nconst _hoisted_23 = {\n  class: \"characteristic-filter\"\n};\nconst _hoisted_24 = [\"id\", \"value\", \"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_25 = [\"for\"];\nconst _hoisted_26 = {\n  value: \"sortedP\"\n};\nconst _hoisted_27 = {\n  class: \"sorted\"\n};\nconst _hoisted_28 = {\n  class: \"all_product\"\n};\nconst _hoisted_29 = {\n  class: \"pagination\"\n};\nconst _hoisted_30 = [\"disabled\"];\nconst _hoisted_31 = {\n  key: 1\n};\nconst _hoisted_32 = [\"onClick\"];\nconst _hoisted_33 = {\n  key: 2\n};\nconst _hoisted_34 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_slider = _resolveComponent(\"vue-slider\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$setup.showMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"message-box_filter\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    width: \"24\",\n    height: \"24\",\n    onClick: $setup.toggleMessage\n  }), _cache[12] || (_cache[12] = _createElementVNode(\"p\", null, \" Filters\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Поля для ввода цены \"), _createElementVNode(\"label\", null, [_cache[13] || (_cache[13] = _createTextVNode(\" Цена от: \")), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.priceRange[0] = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => _ctx.updateSlider && _ctx.updateSlider(...args)),\n    min: \"0\",\n    max: \"1000\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.priceRange[0]]])]), _createElementVNode(\"label\", null, [_cache[14] || (_cache[14] = _createTextVNode(\" Цена до: \")), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.priceRange[1] = $event),\n    onInput: _cache[3] || (_cache[3] = (...args) => _ctx.updateSlider && _ctx.updateSlider(...args)),\n    min: \"0\",\n    max: \"1000\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.priceRange[1]]])]), _createCommentVNode(\" Ползунок для диапазона цен \"), _createVNode(_component_vue_slider, {\n    modelValue: _ctx.priceRange,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.priceRange = $event),\n    min: 0,\n    max: 1000,\n    interval: 1,\n    lazy: true,\n    tooltip: 'always',\n    dotSize: 16\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" Фильтр по брендам \"), _createElementVNode(\"div\", _hoisted_4, [_cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"Brand\", -1 /* HOISTED */)), _cache[16] || (_cache[16] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _createVNode($setup[\"HeaderSearch\"], {\n    placeholder: \"Search\",\n    icon: $setup.searchIcon,\n    onUpdateResults: _ctx.handleSearchResults\n  }, null, 8 /* PROPS */, [\"icon\", \"onUpdateResults\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      value: brand,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.selectedBrands = $event),\n      onChange: $event => $setup.handleBrandChange(brand)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), [[_vModelCheckbox, $setup.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, [_createElementVNode(\"p\", _hoisted_7, [_createTextVNode(_toDisplayString(brand) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString($setup.totalProducts), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Фильтр по категориям \"), _createElementVNode(\"h2\", {\n    onClick: $setup.toggleCategoryFilter\n  }, [_cache[17] || (_cache[17] = _createTextVNode(\" Категории \")), _createElementVNode(\"span\", {\n    class: _normalizeClass([{\n      'open': $setup.isCategoryFilterOpen\n    }, \"arrow\"])\n  }, null, 2 /* CLASS */)]), $setup.isCategoryFilterOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categorys, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: category,\n      value: category,\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.selectedCategorys = $event),\n      onChange: $event => $setup.handleCategorysChange(category)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9), [[_vModelCheckbox, $setup.selectedCategorys]]), _createElementVNode(\"label\", {\n      for: category\n    }, _toDisplayString(category), 9 /* TEXT, PROPS */, _hoisted_10)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Раскрывающееся меню для характеристик \"), _createElementVNode(\"div\", _hoisted_11, [_cache[19] || (_cache[19] = _createElementVNode(\"h2\", null, \"Уникальные характеристики\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"details\", null, [_createElementVNode(\"summary\", null, _toDisplayString(characteristic), 1 /* TEXT */), _cache[18] || (_cache[18] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value,\n        class: \"brand-checkbox\"\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: `${characteristic}-${value}`,\n        value: value,\n        \"onUpdate:modelValue\": $event => $setup.selectedCharacteristics[characteristic] = $event,\n        onChange: $event => $setup.handleCharacteristicChange(characteristic, value)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_12), [[_vModelCheckbox, $setup.selectedCharacteristics[characteristic]]]), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_13)]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createCommentVNode(\" Фильтр по брендам \"), _createElementVNode(\"div\", _hoisted_16, [_cache[20] || (_cache[20] = _createElementVNode(\"h3\", null, \"Brand\", -1 /* HOISTED */)), _cache[21] || (_cache[21] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _createVNode($setup[\"HeaderSearch\"], {\n    placeholder: \"Search\",\n    icon: $setup.searchIcon,\n    onUpdateResults: _ctx.handleSearchResults\n  }, null, 8 /* PROPS */, [\"icon\", \"onUpdateResults\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      value: brand,\n      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.selectedBrands = $event),\n      onChange: $event => $setup.handleBrandChange(brand)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_17), [[_vModelCheckbox, $setup.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, [_createElementVNode(\"p\", _hoisted_19, [_createTextVNode(_toDisplayString(brand) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString($setup.totalProducts), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_18)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Фильтр по категориям \"), _createElementVNode(\"h2\", {\n    onClick: $setup.toggleCategoryFilter\n  }, [_cache[22] || (_cache[22] = _createTextVNode(\" Категории \")), _createElementVNode(\"span\", {\n    class: _normalizeClass([{\n      'open': $setup.isCategoryFilterOpen\n    }, \"arrow\"])\n  }, null, 2 /* CLASS */)]), $setup.isCategoryFilterOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categorys, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: category,\n      value: category,\n      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.selectedCategorys = $event),\n      onChange: $event => $setup.handleCategorysChange(category)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_21), [[_vModelCheckbox, $setup.selectedCategorys]]), _createElementVNode(\"label\", {\n      for: category\n    }, _toDisplayString(category), 9 /* TEXT, PROPS */, _hoisted_22)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Раскрывающееся меню для характеристик \"), _createElementVNode(\"div\", _hoisted_23, [_cache[24] || (_cache[24] = _createElementVNode(\"h2\", null, \"Уникальные характеристики\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"details\", null, [_createElementVNode(\"summary\", null, _toDisplayString(characteristic), 1 /* TEXT */), _cache[23] || (_cache[23] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value,\n        class: \"brand-checkbox\"\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: `${characteristic}-${value}`,\n        value: value,\n        \"onUpdate:modelValue\": $event => $setup.selectedCharacteristics[characteristic] = $event,\n        onChange: $event => $setup.handleCharacteristicChange(characteristic, value)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_24), [[_vModelCheckbox, $setup.selectedCharacteristics[characteristic]]]), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_25)]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"data\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", null, [_createElementVNode(\"h3\", null, [_cache[25] || (_cache[25] = _createTextVNode(\"Selected Products: \")), _createElementVNode(\"span\", null, _toDisplayString($setup.totalProducts), 1 /* TEXT */)])]), _createElementVNode(\"div\", null, [_createCommentVNode(\" <label for=\\\"sortBy\\\">Сортировать по:</label> \"), _withDirectives(_createElementVNode(\"select\", {\n    id: \"sortBy\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.sortOption = $event)\n  }, _cache[26] || (_cache[26] = [_createElementVNode(\"option\", {\n    value: \"rating\"\n  }, \"By rating\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"price\"\n  }, \"price\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"deliveryDate\"\n  }, \"Дата поставки\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $setup.sortOption]]), _createCommentVNode(\" <button @click=\\\"toggleSortOrder\\\">Сортировать по {{ sortOrder === 'asc' ? 'возрастанию' : 'убыванию'\\r\\n                        }}</button> \")]), _createElementVNode(\"div\", {\n    class: \"mobile\"\n  }, [_createElementVNode(\"div\", {\n    class: \"filter-container\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_1,\n    alt: \"Filter Icon\",\n    class: \"filter-icon\",\n    onClick: $setup.toggleMessage\n  }), _cache[27] || (_cache[27] = _createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Фильтр\"\n  }, null, -1 /* HOISTED */))])])]), _createElementVNode(\"div\", _hoisted_28, [_createVNode($setup[\"ProductCart\"], {\n    products: $setup.paginatedProducts,\n    apiUrl: $setup.apiUrl\n  }, null, 8 /* PROPS */, [\"products\", \"apiUrl\"]), _createElementVNode(\"div\", _hoisted_29, [_createCommentVNode(\" Кнопка назад \"), _createElementVNode(\"button\", {\n    onClick: $setup.prevPage,\n    disabled: $setup.currentPage === 1\n  }, \"<\", 8 /* PROPS */, _hoisted_30), _createCommentVNode(\" Первая страница \"), $setup.currentPage >= 3 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[10] || (_cache[10] = $event => $setup.changePage(1))\n  }, \"1\")) : _createCommentVNode(\"v-if\", true), $setup.currentPage >= 3 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \"...\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Страницы около текущей \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pagesToShow, page => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: page,\n      class: _normalizeClass({\n        active: $setup.currentPage === page\n      }),\n      onClick: $event => $setup.changePage(page)\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_32);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Троеточие, если необходимо \"), $setup.currentPage < $setup.totalPages - 3 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_33, \"...\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Последняя страница \"), $setup.currentPage < $setup.totalPages - 3 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 3,\n    onClick: _cache[11] || (_cache[11] = $event => $setup.changePage($setup.totalPages))\n  }, _toDisplayString($setup.totalPages), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Текущая страница \"), _createCommentVNode(\" <span>Страница {{ currentPage }} из {{ totalPages }}</span> \"), _createCommentVNode(\" Кнопка вперед \"), _createElementVNode(\"button\", {\n    onClick: $setup.nextPage,\n    disabled: $setup.currentPage === $setup.totalPages\n  }, \">\", 8 /* PROPS */, _hoisted_34)])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","key","class","value","_createElementBlock","_Fragment","$setup","showMessage","_hoisted_1","_createElementVNode","src","width","height","onClick","toggleMessage","_hoisted_2","_hoisted_3","_createCommentVNode","_createTextVNode","type","_cache","$event","_ctx","priceRange","onInput","args","updateSlider","min","max","_createVNode","_component_vue_slider","modelValue","interval","lazy","tooltip","dotSize","_hoisted_4","placeholder","icon","searchIcon","onUpdateResults","handleSearchResults","_renderList","brands","brand","id","selectedBrands","onChange","handleBrandChange","_hoisted_5","for","_hoisted_7","_toDisplayString","totalProducts","_hoisted_6","toggleCategoryFilter","_normalizeClass","isCategoryFilterOpen","_hoisted_8","categorys","category","selectedCategorys","handleCategorysChange","_hoisted_9","_hoisted_10","_hoisted_11","characteristics","values","characteristic","selectedCharacteristics","handleCharacteristicChange","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_19","_hoisted_18","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","sortOption","alt","_hoisted_28","products","paginatedProducts","apiUrl","_hoisted_29","prevPage","disabled","currentPage","_hoisted_30","changePage","_hoisted_31","pagesToShow","page","active","_hoisted_32","totalPages","_hoisted_33","nextPage","_hoisted_34"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"showMessage\" class=\"message-box\">\r\n     <div class=\"message-box_filter\">\r\n        <img src=\"@/assets/Arrow.png\" width=\"24\" height=\"24\" @click=\"toggleMessage\" />\r\n        <p>  Filters</p>\r\n</div>\r\n\r\n\r\n        <div class=\"mobile-filter\">\r\n     <div class=\"price-range\">\r\n    <!-- Поля для ввода цены -->\r\n    <label>\r\n      Цена от:\r\n      <input type=\"number\" v-model=\"priceRange[0]\" @input=\"updateSlider\" min=\"0\" max=\"1000\" />\r\n    </label>\r\n    <label>\r\n      Цена до:\r\n      <input type=\"number\" v-model=\"priceRange[1]\" @input=\"updateSlider\" min=\"0\" max=\"1000\" />\r\n    </label>\r\n\r\n    <!-- Ползунок для диапазона цен -->\r\n    <vue-slider\r\n      v-model=\"priceRange\"\r\n      :min=\"0\"\r\n      :max=\"1000\"\r\n      :interval=\"1\"\r\n      :lazy=\"true\"\r\n      :tooltip=\"'always'\"\r\n      :dotSize=\"16\"\r\n    />\r\n  </div>\r\n               <!-- Фильтр по брендам -->\r\n               <div class=\"brand-filter\">\r\n                <h3>Brand</h3>\r\n                <hr>\r\n                <HeaderSearch placeholder=\"Search\" :icon=\"searchIcon\" @updateResults=\"handleSearchResults\" />\r\n                <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n                    <input type=\"checkbox\" :id=\"brand\" :value=\"brand\" v-model=\"selectedBrands\"\r\n                        @change=\"handleBrandChange(brand)\" />\r\n                    <label :for=\"brand\">\r\n                        <p class=\"brands\">{{ brand }} <span>{{ totalProducts }}</span></p>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Фильтр по категориям -->\r\n            <h2 @click=\"toggleCategoryFilter\">\r\n                Категории\r\n                <span :class=\"{ 'open': isCategoryFilterOpen }\" class=\"arrow\"></span>\r\n            </h2>\r\n            <div v-if=\"isCategoryFilterOpen\" class=\"category-checkbox\">\r\n                <div v-for=\"category in categorys\" :key=\"category\">\r\n                    <input type=\"checkbox\" :id=\"category\" :value=\"category\" v-model=\"selectedCategorys\"\r\n                        @change=\"handleCategorysChange(category)\" />\r\n                    <label :for=\"category\">{{ category }}</label>\r\n                </div>\r\n            </div>\r\n            <!-- Раскрывающееся меню для характеристик -->\r\n            <div class=\"characteristic-filter\">\r\n                <h2>Уникальные характеристики</h2>\r\n\r\n                <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n                    <details>\r\n                        <summary>{{ characteristic }}</summary>\r\n                        <hr>\r\n                        <div v-for=\"value in values\" :key=\"value\" class=\"brand-checkbox\">\r\n                            <input type=\"checkbox\" :id=\"`${characteristic}-${value}`\" :value=\"value\"\r\n                                v-model=\"selectedCharacteristics[characteristic]\"\r\n                                @change=\"handleCharacteristicChange(characteristic, value)\" />\r\n                            <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  \r\n       \r\n    </div>\r\n    <div class=\"myall\">\r\n\r\n        <div class=\"menu_left\">\r\n\r\n            <!-- Фильтр по брендам -->\r\n            <div class=\"brand-filter\">\r\n                <h3>Brand</h3>\r\n                <hr>\r\n                <HeaderSearch placeholder=\"Search\" :icon=\"searchIcon\" @updateResults=\"handleSearchResults\" />\r\n                <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n                    <input type=\"checkbox\" :id=\"brand\" :value=\"brand\" v-model=\"selectedBrands\"\r\n                        @change=\"handleBrandChange(brand)\" />\r\n                    <label :for=\"brand\">\r\n                        <p class=\"brands\">{{ brand }} <span>{{ totalProducts }}</span></p>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Фильтр по категориям -->\r\n            <h2 @click=\"toggleCategoryFilter\">\r\n                Категории\r\n                <span :class=\"{ 'open': isCategoryFilterOpen }\" class=\"arrow\"></span>\r\n            </h2>\r\n            <div v-if=\"isCategoryFilterOpen\" class=\"category-checkbox\">\r\n                <div v-for=\"category in categorys\" :key=\"category\">\r\n                    <input type=\"checkbox\" :id=\"category\" :value=\"category\" v-model=\"selectedCategorys\"\r\n                        @change=\"handleCategorysChange(category)\" />\r\n                    <label :for=\"category\">{{ category }}</label>\r\n                </div>\r\n            </div>\r\n            <!-- Раскрывающееся меню для характеристик -->\r\n            <div class=\"characteristic-filter\">\r\n                <h2>Уникальные характеристики</h2>\r\n\r\n                <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n                    <details>\r\n                        <summary>{{ characteristic }}</summary>\r\n                        <hr>\r\n                        <div v-for=\"value in values\" :key=\"value\" class=\"brand-checkbox\">\r\n                            <input type=\"checkbox\" :id=\"`${characteristic}-${value}`\" :value=\"value\"\r\n                                v-model=\"selectedCharacteristics[characteristic]\"\r\n                                @change=\"handleCharacteristicChange(characteristic, value)\" />\r\n                            <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <data value=\"sortedP\">\r\n            <div class=\"sorted\">\r\n                <div>\r\n                    <h3>Selected Products: <span>{{ totalProducts }}</span></h3>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <!-- <label for=\"sortBy\">Сортировать по:</label> -->\r\n                    <select id=\"sortBy\" v-model=\"sortOption\">\r\n                        <option value=\"rating\">By rating</option>\r\n                        <option value=\"price\">price</option>\r\n                        <option value=\"deliveryDate\">Дата поставки</option>\r\n                    </select>\r\n\r\n\r\n                    <!-- <button @click=\"toggleSortOrder\">Сортировать по {{ sortOrder === 'asc' ? 'возрастанию' : 'убыванию'\r\n                        }}</button> -->\r\n                </div>\r\n\r\n                <div class=\"mobile\">\r\n\r\n                    <div class=\"filter-container\">\r\n                        <img src=\"@/assets/Filters.png\" alt=\"Filter Icon\" class=\"filter-icon\" @click=\"toggleMessage\" />\r\n                        <input type=\"text\" placeholder=\"Фильтр\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"all_product\">\r\n                <ProductCart :products=\"paginatedProducts\" :apiUrl=\"apiUrl\" />\r\n                <div class=\"pagination\">\r\n                    <!-- Кнопка назад -->\r\n\r\n                    <button @click=\"prevPage\" :disabled=\"currentPage === 1\">&lt;</button>\r\n\r\n                    <!-- Первая страница -->\r\n                    <button v-if=\"currentPage >= 3\" @click=\"changePage(1)\">1</button>\r\n                    <span v-if=\"currentPage >= 3\">...</span>\r\n\r\n                    <!-- Страницы около текущей -->\r\n                    <button v-for=\"page in pagesToShow\" :key=\"page\" :class=\"{ active: currentPage === page }\"\r\n                        @click=\"changePage(page)\">\r\n                        {{ page }}\r\n                    </button>\r\n\r\n                    <!-- Троеточие, если необходимо -->\r\n                    <span v-if=\"currentPage < totalPages - 3\">...</span>\r\n\r\n                    <!-- Последняя страница -->\r\n                    <button v-if=\"currentPage < totalPages - 3\" @click=\"changePage(totalPages)\">\r\n                        {{ totalPages }}\r\n                    </button>\r\n\r\n                    <!-- Текущая страница -->\r\n                    <!-- <span>Страница {{ currentPage }} из {{ totalPages }}</span> -->\r\n\r\n                    <!-- Кнопка вперед -->\r\n                    <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">&gt;</button>\r\n                </div>\r\n            </div>\r\n        </data>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, watch } from 'vue';\r\nimport ProductCart from '../Products/ProductCart.vue';\r\nimport HeaderSearch from '../Search/HeaderSearch.vue';\r\n\r\nconst searchIcon = require('@/assets/Search.png');\r\nconst categories = ref([]);\r\nconst products = ref([]);\r\nconst brands = ref([]);\r\nconst categorys = ref([]);\r\n\r\n// Состояние для управления видимостью фильтра\r\nconst isCategoryFilterOpen = ref(false);\r\n\r\n\r\n\r\nconst toggleCategoryFilter = () => {\r\n    isCategoryFilterOpen.value = !isCategoryFilterOpen.value;\r\n};\r\n\r\n\r\n\r\nimport { API_BASE_URL } from '@/config';\r\n\r\nconst showMessage = ref(false);\r\n\r\nconst toggleMessage = () => {\r\n    showMessage.value = !showMessage.value; // Переключение видимости блока\r\n};\r\n\r\n\r\n// сортировка\r\n\r\n\r\nconst sortOption = ref('rating');  // По умолчанию сортируем по рейтингу\r\nconst sortOrder = ref('asc');  // По умолчанию сортировка по возрастанию\r\n\r\n// Данные товаров\r\n\r\n\r\n// Функция для изменения порядка сортировки\r\nwatch(sortOption, () => {\r\n    sortedProducts.value;  // Обновляется автоматически при изменении sortOption\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Храним товары и базовый URL для API\r\n\r\nconst apiUrl = API_BASE_URL;\r\n\r\n// Переменные для управления пагинацией\r\n// Пагинация\r\nconst currentPage = ref(1);\r\nconst productsPerPage = 12; // Количество товаров на странице\r\n\r\nconst totalPages = computed(() => {\r\n    return Math.ceil(filteredProducts.value.length / productsPerPage);\r\n});\r\n\r\nconst totalProducts = computed(() => {\r\n    return filteredProducts.value.length;\r\n});\r\n\r\n\r\n\r\nconst pagesToShow = computed(() => {\r\n    const pages = [];\r\n    const range = 1; // Показать 3 страницы вокруг текущей\r\n    const start = Math.max(1, currentPage.value - range);\r\n    const end = Math.min(totalPages.value, currentPage.value + range);\r\n\r\n    // Добавляем страницы в диапазон\r\n    for (let i = start; i <= end; i++) {\r\n        pages.push(i);\r\n    }\r\n    return pages;\r\n});\r\n\r\n// конец пагинации\r\nconst filteredProducts = computed(() => {\r\n    console.log('начало работы фильтрации');\r\n\r\n    // Если не выбраны ни бренды, ни характеристики, ни категории, возвращаем все товары\r\n    if (selectedBrands.value.length === 0 && Object.keys(selectedCharacteristics.value).length === 0 && selectedCategorys.value.length === 0) {\r\n        return products.value;\r\n    }\r\n\r\n    return products.value.filter(product => {\r\n        // Фильтрация по брендам\r\n        const matchesBrand = selectedBrands.value.length === 0 || selectedBrands.value.includes(product.brand);\r\n        const matchesCategory = selectedCategorys.value.length === 0 || selectedCategorys.value.includes(product.category);\r\n\r\n        // Фильтрация по характеристикам\r\n        const matchesCharacteristics = Object.keys(selectedCharacteristics.value).every(characteristic => {\r\n            // Если характеристика не выбрана, она считается совпавшей\r\n            if (!selectedCharacteristics.value[characteristic] || selectedCharacteristics.value[characteristic].length === 0) {\r\n                return true;\r\n            }\r\n\r\n            // Преобразуем значение в массив, если это не массив\r\n            const selectedValues = Array.isArray(selectedCharacteristics.value[characteristic])\r\n                ? selectedCharacteristics.value[characteristic]\r\n                : [selectedCharacteristics.value[characteristic]];\r\n\r\n            // Получаем значения характеристики для товара\r\n            const productValues = product.characteristics\r\n                ? product.characteristics\r\n                    .filter(item => item.characteristic === characteristic)\r\n                    .map(item => item.value)\r\n                : [];\r\n\r\n            // Проверка, что хотя бы одно из выбранных значений характеристики совпадает с товарами\r\n            return selectedValues.some(value => productValues.includes(value));\r\n        });\r\n\r\n        return matchesBrand && matchesCategory && matchesCharacteristics;\r\n    });\r\n});\r\n\r\nconst sortedProducts = computed(() => {\r\n    return [...filteredProducts.value].sort((a, b) => {\r\n        let comparison = 0;\r\n\r\n        // Сортируем по рейтингу\r\n        if (sortOption.value === 'rating') {\r\n            comparison = a.rating - b.rating;\r\n        }\r\n        // Сортируем по цене\r\n        else if (sortOption.value === 'price') {\r\n            comparison = a.price - b.price;\r\n        }\r\n        // Сортируем по дате поставки\r\n        else if (sortOption.value === 'deliveryDate') {\r\n            comparison = new Date(a.deliveryDate) - new Date(b.deliveryDate);\r\n        }\r\n\r\n        // Если порядок сортировки 'desc', меняем знак\r\n        return sortOrder.value === 'asc' ? comparison : -comparison;\r\n    });\r\n});\r\n\r\nconst paginatedProducts = computed(() => {\r\n    const startIndex = (currentPage.value - 1) * productsPerPage;\r\n    return sortedProducts.value.slice(startIndex, startIndex + productsPerPage);\r\n});\r\n\r\n\r\n\r\n// Методы для управления страницами\r\nconst nextPage = () => {\r\n    if (currentPage.value < totalPages.value) {\r\n        currentPage.value++;\r\n    }\r\n};\r\nconst changePage = (page) => {\r\n    // Устанавливаем текущую страницу\r\n    currentPage.value = page;\r\n};\r\n\r\nconst prevPage = () => {\r\n    if (currentPage.value > 1) {\r\n        currentPage.value--;\r\n    }\r\n};\r\n\r\n\r\nconst selectedCharacteristics = ref({});  // Для хранения выбранных характеристик\r\nconst characteristics = ref({});  // Уникальные характеристики\r\n\r\nconst selectedBrands = ref([]);\r\n\r\nconst handleBrandChange = (brand) => {\r\n    // Если бренд не был добавлен в selectedBrands, добавляем его\r\n    if (!selectedBrands.value[brand]) {\r\n        selectedBrands.value[brand] = true;\r\n    } else {\r\n        selectedBrands.value[brand] = !selectedBrands.value[brand];\r\n    }\r\n\r\n    // Логируем обновленные данные для отладки\r\n    console.log('selectedBrands.value', selectedBrands.value);\r\n};\r\nconst extractBrands = (categoriesData) => {\r\n    const allBrands = new Set();\r\n\r\n    categoriesData.forEach(category => {\r\n        if (category.brand) {\r\n            allBrands.add(category.brand);\r\n        }\r\n    });\r\n\r\n    brands.value = Array.from(allBrands);\r\n};\r\n\r\n\r\n\r\nconst selectedCategorys = ref([]);\r\n\r\n\r\n\r\n\r\nconst handleCategorysChange = (category) => {\r\n\r\n    if (!Array.isArray(selectedCategorys.value[category])) {\r\n        selectedCategorys.value[category] = true;\r\n    }\r\n    // Если бренд не был добавлен в selectedBrands, добавляем его\r\n\r\n    else {\r\n        selectedCategorys.value[category] = !selectedCategorys.value[category];\r\n    }\r\n\r\n    // Логируем обновленные данные для отладки\r\n    console.log('selectedBrands.value', selectedCategorys.value);\r\n};\r\nconst extractCategorys = (categoriesData) => {\r\n    const allCategorys = new Set();\r\n\r\n    categoriesData.forEach(category => {\r\n        if (category.category) {\r\n            allCategorys.add(category.category);\r\n        }\r\n    });\r\n\r\n    categorys.value = Array.from(allCategorys);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst handleCharacteristicChange = (characteristic, value) => {\r\n    // Если характеристика еще не существует в selectedCharacteristics, создаем массив\r\n    if (!Array.isArray(selectedCharacteristics.value[characteristic])) {\r\n        selectedCharacteristics.value[characteristic] = [value];\r\n    }\r\n\r\n    // Принудительное обновление реактивности (необязательно в случае, если массив был изменен)\r\n    selectedCharacteristics.value = { ...selectedCharacteristics.value };\r\n\r\n    // Выводим обновленные данные для отладки\r\n    console.log('selectedCharacteristics.value', selectedCharacteristics.value);\r\n};\r\n\r\n\r\nonMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n});\r\n\r\n// Функция для загрузки категорий\r\nconst loadCategories = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке категорий');\r\n        }\r\n        const data = await response.json();\r\n        categories.value = data;\r\n\r\n        extractBrands(data);\r\n        extractCategorys(data);\r\n        extractCharacteristics(data);\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n};\r\n\r\n// Функция для загрузки товаров\r\nconst loadProducts = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке товаров');\r\n        }\r\n        const data = await response.json();\r\n        products.value = data;\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n};\r\n\r\n// Извлекаем бренды из категорий\r\n\r\n// Извлекаем уникальные характеристики\r\nconst extractCharacteristics = (categoriesData) => {\r\n    const characteristicsData = {};\r\n\r\n    categoriesData.forEach(item => {\r\n        if (item.characteristics && Array.isArray(item.characteristics)) {\r\n            item.characteristics.forEach(characteristic => {\r\n                const charName = characteristic.characteristic;\r\n                const charValue = characteristic.value;\r\n\r\n                if (!characteristicsData[charName]) {\r\n                    characteristicsData[charName] = new Set();\r\n                }\r\n                characteristicsData[charName].add(charValue);\r\n            });\r\n        }\r\n    });\r\n\r\n    for (const charName in characteristicsData) {\r\n        characteristicsData[charName] = Array.from(characteristicsData[charName]);\r\n    }\r\n\r\n    characteristics.value = { ...characteristicsData };\r\n};\r\n\r\n// Фильтрация товаров по выбранным брендам и характеристикам\r\n\r\n\r\n\r\n\r\n// пагинация \r\n\r\n</script>\r\n\r\n<style scoped>\r\n.filter-container {\r\n    display: none;\r\n}\r\n\r\n.myall {\r\n    display: flex;\r\n    column-gap: 20px;\r\n    margin: 0 auto;\r\n\r\n}\r\n\r\n.sorted {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    h3 {\r\n        font-family: ABeeZee;\r\n        font-size: 16px;\r\n        font-style: italic;\r\n        font-weight: 400;\r\n        line-height: 16px;\r\n        letter-spacing: 0.03em;\r\n        text-align: left;\r\n        color: #6C6C6C;\r\n\r\n        span {\r\n            font-family: ABeeZee;\r\n            font-size: 20px;\r\n            font-style: normal;\r\n            font-weight: 400;\r\n            line-height: 16px;\r\n            letter-spacing: 0.03em;\r\n            text-align: center;\r\n            color: #000000;\r\n\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nh2 {\r\n    font-family: ABeeZee;\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    letter-spacing: 0.03em;\r\n    text-align: left;\r\n    color: #000;\r\n\r\n}\r\n\r\n.brand-checkbox {\r\n    display: flex;\r\n\r\n}\r\n\r\n.brands,\r\n.category-checkbox {\r\n    font-family: ABeeZee;\r\n    font-size: 15px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    text-align: left;\r\n    color: #000;\r\n\r\n    span {\r\n        font-family: Abel;\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n        line-height: 24px;\r\n        text-align: left;\r\n        color: #929292;\r\n    }\r\n\r\n\r\n}\r\n\r\nselect {\r\n    width: 256px;\r\n\r\n    padding: 8px 16px 8px 16px;\r\n    gap: 0px;\r\n    border-radius: 8px;\r\n    font-family: Abel;\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    line-height: 16px;\r\n    letter-spacing: -0.005em;\r\n    text-align: left;\r\n    color: #000;\r\n\r\n    option {\r\n        font-family: Abel;\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n        line-height: 16px;\r\n        letter-spacing: -0.005em;\r\n        text-align: left;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n.pagination button {\r\n    padding: 5px 10px;\r\n    margin: 0 5px;\r\n    border: 1px solid #ccc;\r\n    background: #F6F6F6;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n\r\n    font-family: ABeeZee;\r\n    font-size: 16px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    letter-spacing: 0.03em;\r\n    text-align: center;\r\n\r\n}\r\n\r\n.pagination button.active {\r\n    background: #000000;\r\n    color: #fff;\r\n\r\n}\r\n\r\n.pagination button:disabled {\r\n    cursor: not-allowed;\r\n    background-color: #f0f0f0;\r\n    border-color: #ddd;\r\n}\r\n\r\n.pagination span {\r\n    margin: 0 5px;\r\n}\r\n\r\n\r\n.all {\r\n    flex-wrap: wrap;\r\n    width: auto;\r\n    /* Добавляем перенос */\r\n\r\n    .container {\r\n        width: 236px !important;\r\n    }\r\n}\r\n\r\n\r\n\r\n.category-menu {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.category-menu ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.category-menu li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    background-color: #f0f0f0;\r\n    margin: 5px 0;\r\n}\r\n\r\n.category-menu li:hover {\r\n    background-color: #e0e0e0;\r\n}\r\n\r\n.brand-filter,\r\n.characteristic-filter {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.brand-checkbox,\r\n.characteristic-filter div {\r\n    margin: 5px 0;\r\n}\r\n\r\n.product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.product-list li {\r\n    margin: 10px 0;\r\n}\r\n\r\n/* Добавляем стили для раскрывающегося меню */\r\ndetails summary {\r\n    cursor: pointer;\r\n    font-family: ABeeZee;\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    letter-spacing: 0.03em;\r\n    text-align: left;\r\n    color: #000;\r\n}\r\n\r\ndetails div {\r\n    margin-left: 20px;\r\n}\r\n\r\n\r\n.arrow {\r\n    display: inline-block;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 5px solid transparent;\r\n    border-right: 5px solid transparent;\r\n    border-top: 5px solid #000;\r\n    /* Черная стрелка, направленная вниз */\r\n    transition: transform 0.3s ease-in-out;\r\n    /* Плавное изменение направления */\r\n}\r\n\r\n/* Когда фильтр открыт, стрелка разворачивается вверх */\r\n.arrow.open {\r\n    transform: rotate(180deg);\r\n    /* Поворот стрелки на 180 градусов */\r\n}\r\n\r\n@media(width<780px) {\r\n    .menu_left {\r\n        display: none;\r\n    }\r\n\r\n    #sortBy {\r\n        width: 164px;\r\n        font-family: Abel;\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n        line-height: 16px;\r\n        letter-spacing: -0.005em;\r\n        text-align: left;\r\n        text-underline-position: from-font;\r\n        -webkit-text-decoration-skip-ink: none;\r\n        text-decoration-skip-ink: none;\r\n        border: 0.5px solid #D4D4D4;\r\n        height: 56px;\r\n        padding: 16px;\r\n\r\n    }\r\n\r\n    h3 {\r\n        display: none;\r\n    }\r\n\r\n    .sorted {\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap: 20px;\r\n        justify-content: center;\r\n    }\r\n\r\n    .filter-container {\r\n        display: block;\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n    }\r\n\r\n    .filter-icon {\r\n        position: absolute;\r\n        right: 8px;\r\n        /* Иконка будет справа */\r\n        width: 16px;\r\n        height: 16px;\r\n    }\r\n\r\n    .filter-container input {\r\n        padding-right: 30px;\r\n        /* Отступ справа, чтобы не перекрывать текстом иконку */\r\n        width: 164px;\r\n        font-family: Abel;\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n        line-height: 16px;\r\n        letter-spacing: -0.005em;\r\n        text-align: left;\r\n        text-underline-position: from-font;\r\n        text-decoration-skip-ink: none;\r\n        border: 0.5px solid #D4D4D4;\r\n\r\n        height: 56px;\r\n\r\n        padding: 16px;\r\n        gap: 0px;\r\n        border-radius: 8px;\r\n\r\n        justify: space-between;\r\n        opacity: 0px;\r\n\r\n    }\r\n\r\n    /* Стили для блока с сообщением */\r\n    .message-box {\r\n        margin-top: 10px;\r\n        background-color: #ffffff;\r\n        padding: 10px;\r\n        border: 1px solid #ccc;\r\n        height: 100%;\r\n        position: relative;\r\n        z-index: 100;\r\n    }\r\n\r\n    .message-box_filter{\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap:15px;\r\n        p{\r\n            font-family: Abel;\r\nfont-size: 24px;\r\nfont-weight: 400;\r\nline-height: 32px;\r\nletter-spacing: 0.01em;\r\ntext-align: left;\r\ntext-underline-position: from-font;\r\ntext-decoration-skip-ink: none;\r\npadding-right: 10px;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}