{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport axios from 'axios';\n\n// Состояние для хранения данных\n\nexport default {\n  __name: 'LeftMenu',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const categories = ref([]);\n    const products = ref([]);\n    const selectedCategory = ref(null);\n\n    // Загружаем данные при монтировании компонента\n    onMounted(async () => {\n      await loadCategories();\n      await loadProducts();\n    });\n\n    // Функция для загрузки категорий\n    const loadCategories = async () => {\n      try {\n        const response = await axios.get('http://localhost:1452/api/categories'); // Замените URL на правильный для категорий\n        categories.value = response.data; // Сохраняем категории\n      } catch (error) {\n        console.error('Ошибка при загрузке категорий:', error);\n      }\n    };\n\n    // Функция для загрузки товаров по категории\n    const loadProducts = async () => {\n      if (!selectedCategory.value) return; // Если категория не выбрана, не загружаем товары\n      try {\n        const response = await axios.get(`http://localhost:1452/api/category/${selectedCategory.value.id}`); // URL для получения товаров по категории\n        products.value = response.data.products; // Предполагаем, что API возвращает массив товаров в поле \"products\"\n      } catch (error) {\n        console.error('Ошибка при загрузке товаров:', error);\n      }\n    };\n\n    // Фильтруем товары по выбранной категории\n    const filteredProducts = computed(() => {\n      return selectedCategory.value ? products.value.filter(product => product.category === selectedCategory.value.name) : products.value;\n    });\n\n    // Выбираем категорию\n    const selectCategory = category => {\n      selectedCategory.value = category;\n      loadProducts(); // Загружаем товары для выбранной категории\n    };\n    const __returned__ = {\n      categories,\n      products,\n      selectedCategory,\n      loadCategories,\n      loadProducts,\n      filteredProducts,\n      selectCategory,\n      ref,\n      onMounted,\n      computed,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","axios","categories","products","selectedCategory","loadCategories","loadProducts","response","get","value","data","error","console","id","filteredProducts","filter","product","category","name","selectCategory"],"sources":["C:/shopvue/front-vue3/src/components/Menu/LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"category-menu\">\r\n        <h3>Категории</h3>\r\n        <ul>\r\n          <li v-for=\"category in categories\" :key=\"category.id\" @click=\"selectCategory(category)\">\r\n            {{ category.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  \r\n      <div class=\"product-list\">\r\n        <div v-for=\"product in filteredProducts\" :key=\"product.id\" class=\"product\">\r\n          <h4>{{ product.name }}</h4>\r\n          <ul>\r\n            <li v-for=\"(characteristic, index) in product.characteristics\" :key=\"index\">\r\n              {{ characteristic.characteristic }}: {{ characteristic.value }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n  // Состояние для хранения данных\r\n  const categories = ref([]);\r\n  const products = ref([]);\r\n  const selectedCategory = ref(null);\r\n  \r\n  // Загружаем данные при монтировании компонента\r\n  onMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n  });\r\n  \r\n  // Функция для загрузки категорий\r\n  const loadCategories = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:1452/api/categories'); // Замените URL на правильный для категорий\r\n      categories.value = response.data; // Сохраняем категории\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n  };\r\n  \r\n  // Функция для загрузки товаров по категории\r\n  const loadProducts = async () => {\r\n    if (!selectedCategory.value) return; // Если категория не выбрана, не загружаем товары\r\n    try {\r\n      const response = await axios.get(`http://localhost:1452/api/category/${selectedCategory.value.id}`); // URL для получения товаров по категории\r\n      products.value = response.data.products; // Предполагаем, что API возвращает массив товаров в поле \"products\"\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n  };\r\n  \r\n  // Фильтруем товары по выбранной категории\r\n  const filteredProducts = computed(() => {\r\n    return selectedCategory.value\r\n      ? products.value.filter(product => product.category === selectedCategory.value.name)\r\n      : products.value;\r\n  });\r\n  \r\n  // Выбираем категорию\r\n  const selectCategory = (category) => {\r\n    selectedCategory.value = category;\r\n    loadProducts(); // Загружаем товары для выбранной категории\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .category-menu {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .category-menu ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .category-menu li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    background-color: #f0f0f0;\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .category-menu li:hover {\r\n    background-color: #e0e0e0;\r\n  }\r\n  \r\n  .product-list .product {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  </style>"],"mappings":";;AAyBE,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,UAAU,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,gBAAgB,GAAGN,GAAG,CAAC,IAAI,CAAC;;IAElC;IACAC,SAAS,CAAC,YAAY;MACpB,MAAMM,cAAc,CAAC,CAAC;MACtB,MAAMC,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC;;IAEF;IACA,MAAMD,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,sCAAsC,CAAC,CAAC,CAAC;QAC1EN,UAAU,CAACO,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;;IAED;IACA,MAAML,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACF,gBAAgB,CAACK,KAAK,EAAE,OAAO,CAAC;MACrC,IAAI;QACF,MAAMF,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,sCAAsCJ,gBAAgB,CAACK,KAAK,CAACI,EAAE,EAAE,CAAC,CAAC,CAAC;QACrGV,QAAQ,CAACM,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACP,QAAQ,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;;IAED;IACA,MAAMG,gBAAgB,GAAGd,QAAQ,CAAC,MAAM;MACtC,OAAOI,gBAAgB,CAACK,KAAK,GACzBN,QAAQ,CAACM,KAAK,CAACM,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,QAAQ,KAAKb,gBAAgB,CAACK,KAAK,CAACS,IAAI,CAAC,GAClFf,QAAQ,CAACM,KAAK;IACpB,CAAC,CAAC;;IAEF;IACA,MAAMU,cAAc,GAAIF,QAAQ,IAAK;MACnCb,gBAAgB,CAACK,KAAK,GAAGQ,QAAQ;MACjCX,YAAY,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}