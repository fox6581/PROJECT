{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"characteristic-filter\"\n};\nconst _hoisted_2 = [\"id\", \"value\", \"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_3 = [\"for\"];\nconst _hoisted_4 = {\n  class: \"category-menu\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_7 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = {\n  class: \"product-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Фильтрация характеристик \"), _createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Уникальные характеристики\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(characteristic), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: `${characteristic}-${value}`,\n        value: value,\n        \"onUpdate:modelValue\": $event => $setup.selectedCharacteristics[characteristic] = $event,\n        onChange: $event => $setup.handleCharacteristicChange(characteristic, value)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), [[_vModelCheckbox, $setup.selectedCharacteristics[characteristic]]]), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_3)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Меню категорий \"), _createElementVNode(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Категории\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: category.id,\n      onClick: $event => $setup.selectCategory(category)\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Фильтр по брендам \"), _createElementVNode(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Фильтр по брендам\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      value: brand,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedBrands = $event),\n      onChange: $event => $setup.handleBrandChange(brand)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), [[_vModelCheckbox, $setup.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, _toDisplayString(brand), 9 /* TEXT, PROPS */, _hoisted_8)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Список товаров с фильтрацией \"), _createElementVNode(\"div\", _hoisted_9, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Товары\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredProducts, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, _toDisplayString(product.name) + \" - \" + _toDisplayString(product.brand), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createCommentVNode","_createElementVNode","_hoisted_1","_Fragment","_renderList","$setup","characteristics","values","characteristic","key","_toDisplayString","value","type","id","$event","selectedCharacteristics","onChange","handleCharacteristicChange","_hoisted_2","for","_hoisted_3","_hoisted_4","categories","category","onClick","selectCategory","name","_hoisted_5","_hoisted_6","brands","brand","_cache","selectedBrands","handleBrandChange","_hoisted_7","_hoisted_8","_hoisted_9","filteredProducts","product"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <!-- Фильтрация характеристик -->\r\n      <div class=\"characteristic-filter\">\r\n        <h2>Уникальные характеристики</h2>\r\n        <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n          <h3>{{ characteristic }}</h3>\r\n          <div v-for=\"value in values\" :key=\"value\">\r\n            <input\r\n              type=\"checkbox\"\r\n              :id=\"`${characteristic}-${value}`\"\r\n              :value=\"value\"\r\n              v-model=\"selectedCharacteristics[characteristic]\"\r\n              @change=\"handleCharacteristicChange(characteristic, value)\"\r\n            />\r\n            <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Меню категорий -->\r\n      <div class=\"category-menu\">\r\n        <h3>Категории</h3>\r\n        <ul>\r\n          <li v-for=\"category in categories\" :key=\"category.id\" @click=\"selectCategory(category)\">\r\n            {{ category.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  \r\n      <!-- Фильтр по брендам -->\r\n      <div class=\"brand-filter\">\r\n        <h3>Фильтр по брендам</h3>\r\n        <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            :id=\"brand\"\r\n            :value=\"brand\"\r\n            v-model=\"selectedBrands\"\r\n            @change=\"handleBrandChange(brand)\"\r\n          />\r\n          <label :for=\"brand\">{{ brand }}</label>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Список товаров с фильтрацией -->\r\n      <div class=\"product-list\">\r\n        <h3>Товары</h3>\r\n        <ul>\r\n          <li v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n            {{ product.name }} - {{ product.brand }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  \r\n  const categories = ref([]);\r\n  const products = ref([]);\r\n  const brands = ref([]);\r\n  const selectedBrands = ref([]); // Для фильтрации по брендам\r\n  const selectedCharacteristics = ref({}); // Для хранения выбранных характеристик\r\n  const characteristics = ref({}); // Уникальные характеристики\r\n  \r\n  // Загрузка данных\r\n  onMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n  });\r\n  \r\n  // Функция для загрузки категорий\r\n  const loadCategories = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/products');\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка при загрузке категорий');\r\n      }\r\n      const data = await response.json();\r\n      categories.value = data;\r\n  \r\n      extractBrands(data);\r\n      extractCharacteristics(data);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n  };\r\n  \r\n  // Функция для загрузки товаров\r\n  const loadProducts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/products');\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка при загрузке товаров');\r\n      }\r\n      const data = await response.json();\r\n      products.value = data;\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n  };\r\n  \r\n  // Извлекаем бренды из категорий\r\n  const extractBrands = (categoriesData) => {\r\n    const allBrands = new Set();\r\n    categoriesData.forEach((category) => {\r\n      if (category.brand) {\r\n        allBrands.add(category.brand);\r\n      }\r\n    });\r\n    brands.value = Array.from(allBrands);\r\n  };\r\n  \r\n  // Извлекаем уникальные характеристики\r\n  const extractCharacteristics = (categoriesData) => {\r\n    const characteristicsData = {};\r\n  \r\n    categoriesData.forEach((item) => {\r\n      if (item.characteristics && Array.isArray(item.characteristics)) {\r\n        item.characteristics.forEach((characteristic) => {\r\n          const charName = characteristic.characteristic;\r\n          const charValue = characteristic.value;\r\n  \r\n          if (!characteristicsData[charName]) {\r\n            characteristicsData[charName] = new Set();\r\n          }\r\n          characteristicsData[charName].add(charValue);\r\n        });\r\n      }\r\n    });\r\n  \r\n    for (const charName in characteristicsData) {\r\n      characteristicsData[charName] = Array.from(characteristicsData[charName]);\r\n    }\r\n  \r\n    characteristics.value = { ...characteristicsData };\r\n  };\r\n  \r\n  // Фильтрация товаров\r\n  const filteredProducts = computed(() => {\r\n    return products.value.filter((product) => {\r\n      // Фильтрация по бренду\r\n      const matchesBrand =\r\n        selectedBrands.value.length === 0 ||\r\n        selectedBrands.value.includes(product.brand);\r\n  \r\n      // Фильтрация по характеристикам\r\n      const matchesCharacteristics = Object.keys(selectedCharacteristics.value).every(\r\n        (characteristic) => {\r\n          if (!selectedCharacteristics.value[characteristic]) return true;\r\n  \r\n          const selectedValues = selectedCharacteristics.value[characteristic];\r\n          const productValues = product.characteristics\r\n            ? product.characteristics\r\n                .filter((item) => item.characteristic === characteristic)\r\n                .map((item) => item.value)\r\n            : [];\r\n  \r\n          return selectedValues.some((value) => productValues.includes(value));\r\n        }\r\n      );\r\n  \r\n      return matchesBrand && matchesCharacteristics;\r\n    });\r\n  });\r\n  \r\n  // Функция для выбора категории\r\n  const selectCategory = (category) => {\r\n    console.log('Выбрана категория:', category);\r\n  };\r\n  \r\n  // Обработка изменения в фильтре по характеристикам\r\n  const handleCharacteristicChange = (characteristic, value) => {\r\n    if (!Array.isArray(selectedCharacteristics.value[characteristic])) {\r\n      selectedCharacteristics.value[characteristic] = [];\r\n    }\r\n  \r\n    const index = selectedCharacteristics.value[characteristic].indexOf(value);\r\n    if (index === -1) {\r\n      selectedCharacteristics.value[characteristic].push(value);\r\n    } else {\r\n      selectedCharacteristics.value[characteristic].splice(index, 1);\r\n    }\r\n  \r\n    console.log('selectedCharacteristics.value', selectedCharacteristics.value);\r\n  };\r\n  \r\n  // Обработка изменения в фильтре по брендам\r\n  const handleBrandChange = (brand) => {\r\n    if (!selectedBrands.value.includes(brand)) {\r\n      selectedBrands.value.push(brand);\r\n    } else {\r\n      const index = selectedBrands.value.indexOf(brand);\r\n      if (index !== -1) {\r\n        selectedBrands.value.splice(index, 1);\r\n      }\r\n    }\r\n  \r\n    console.log('selectedBrands.value', selectedBrands.value);\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .category-menu {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .category-menu ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .category-menu li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    background-color: #f0f0f0;\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .category-menu li:hover {\r\n    background-color: #e0e0e0;\r\n  }\r\n  \r\n  .brand-filter,\r\n  .characteristic-filter {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .brand-checkbox,\r\n  .characteristic-filter div {\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .product-list li {\r\n    margin: 10px 0;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAGWA,KAAK,EAAC;AAAuB;mBAHxC;mBAAA;;EAqBWA,KAAK,EAAC;AAAe;mBArBhC;;EA+BWA,KAAK,EAAC;AAAc;mBA/B/B;mBAAA;;EA8CWA,KAAK,EAAC;AAAc;;uBA7C3BC,mBAAA,CAqDM,cApDJC,mBAAA,8BAAiC,EACjCC,mBAAA,CAeM,OAfNC,UAeM,G,0BAdJD,mBAAA,CAAkC,YAA9B,2BAAyB,uB,kBAC7BF,mBAAA,CAYMI,SAAA,QAjBdC,WAAA,CAKgDC,MAAA,CAAAC,eAAe,EAL/D,CAKqBC,MAAM,EAAEC,cAAc;yBAAnCT,mBAAA,CAYM;MAZoDU,GAAG,EAAED;IAAc,IAC3EP,mBAAA,CAA6B,YAAAS,gBAAA,CAAtBF,cAAc,mB,kBACrBT,mBAAA,CASMI,SAAA,QAhBhBC,WAAA,CAO+BG,MAAM,EAAfI,KAAK;2BAAjBZ,mBAAA,CASM;QATwBU,GAAG,EAAEE;MAAK,I,gBACtCV,mBAAA,CAME;QALAW,IAAI,EAAC,UAAU;QACdC,EAAE,KAAKL,cAAc,IAAIG,KAAK;QAC9BA,KAAK,EAAEA,KAAK;QAX3B,uBAAAG,MAAA,IAYuBT,MAAA,CAAAU,uBAAuB,CAACP,cAAc,IAAAM,MAAA;QAC9CE,QAAM,EAAAF,MAAA,IAAET,MAAA,CAAAY,0BAA0B,CAACT,cAAc,EAAEG,KAAK;+CAbvEO,UAAA,I,kBAYuBb,MAAA,CAAAU,uBAAuB,CAACP,cAAc,G,GAGjDP,mBAAA,CAA8D;QAAtDkB,GAAG,KAAKX,cAAc,IAAIG,KAAK;0BAAOA,KAAK,wBAf/DS,UAAA,E;;oCAoBMpB,mBAAA,oBAAuB,EACvBC,mBAAA,CAOM,OAPNoB,UAOM,G,0BANJpB,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKI,SAAA,QA1BfC,WAAA,CAwBiCC,MAAA,CAAAiB,UAAU,EAAtBC,QAAQ;yBAAnBxB,mBAAA,CAEK;MAF+BU,GAAG,EAAEc,QAAQ,CAACV,EAAE;MAAGW,OAAK,EAAAV,MAAA,IAAET,MAAA,CAAAoB,cAAc,CAACF,QAAQ;wBAChFA,QAAQ,CAACG,IAAI,wBAzB5BC,UAAA;sCA8BM3B,mBAAA,uBAA0B,EAC1BC,mBAAA,CAYM,OAZN2B,UAYM,G,0BAXJ3B,mBAAA,CAA0B,YAAtB,mBAAiB,uB,kBACrBF,mBAAA,CASMI,SAAA,QA1CdC,WAAA,CAiC6BC,MAAA,CAAAwB,MAAM,EAAfC,KAAK;yBAAjB/B,mBAAA,CASM;MATwBU,GAAG,EAAEqB,KAAK;MAAEhC,KAAK,EAAC;wBAC9CG,mBAAA,CAME;MALAW,IAAI,EAAC,UAAU;MACdC,EAAE,EAAEiB,KAAK;MACTnB,KAAK,EAAEmB,KAAK;MArCzB,uBAAAC,MAAA,QAAAA,MAAA,MAAAjB,MAAA,IAsCqBT,MAAA,CAAA2B,cAAc,GAAAlB,MAAA;MACtBE,QAAM,EAAAF,MAAA,IAAET,MAAA,CAAA4B,iBAAiB,CAACH,KAAK;6CAvC5CI,UAAA,I,kBAsCqB7B,MAAA,CAAA2B,cAAc,E,GAGzB/B,mBAAA,CAAuC;MAA/BkB,GAAG,EAAEW;IAAK,GAAApB,gBAAA,CAAKoB,KAAK,wBAzCtCK,UAAA,E;oCA6CMnC,mBAAA,kCAAqC,EACrCC,mBAAA,CAOM,OAPNmC,UAOM,G,0BANJnC,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKI,SAAA,QAnDfC,WAAA,CAiDgCC,MAAA,CAAAgC,gBAAgB,EAA3BC,OAAO;yBAAlBvC,mBAAA,CAEK;MAFoCU,GAAG,EAAE6B,OAAO,CAACzB;wBACjDyB,OAAO,CAACZ,IAAI,IAAG,KAAG,GAAAhB,gBAAA,CAAG4B,OAAO,CAACR,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}