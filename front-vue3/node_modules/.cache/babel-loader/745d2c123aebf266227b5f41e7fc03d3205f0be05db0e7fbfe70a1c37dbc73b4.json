{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport ShowButton from '../Buttons/ShowButton.vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'ProductCart',\n  props: {\n    product: {\n      type: Object,\n      required: true\n    },\n    apiUrl: {\n      type: String,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const store = useStore();\n    const isLiked = product => store.state.likedProducts.some(item => item.id === product.id);\n    const toggleLike = product => {\n      store.commit('toggleLike', product);\n    };\n    let isAddingToCart = false;\n    const addToCart = product => {\n      if (isAddingToCart) return;\n      isAddingToCart = true;\n      store.commit('addToCart', product);\n      setTimeout(() => {\n        isAddingToCart = false;\n      }, 100);\n    };\n    const __returned__ = {\n      props,\n      store,\n      isLiked,\n      toggleLike,\n      get isAddingToCart() {\n        return isAddingToCart;\n      },\n      set isAddingToCart(v) {\n        isAddingToCart = v;\n      },\n      addToCart,\n      ShowButton,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ShowButton","useStore","props","__props","store","isLiked","product","state","likedProducts","some","item","id","toggleLike","commit","isAddingToCart","addToCart","setTimeout"],"sources":["C:/shopvue/front-vue3/src/components/Products/ProductCart.vue"],"sourcesContent":["<template>\r\n    <div class=\"all\">\r\n      <div class=\"container\">\r\n        <div class=\"header-icons_like\" @click=\"toggleLike(product)\" :class=\"{ liked: isLiked(product) }\">\r\n          <img :src=\"isLiked(product) ? require('@/assets/redLike.png') : require('@/assets/Like.png')\" width=\"32\"\r\n              height=\"32\" alt=\"Like\">\r\n        </div>\r\n  \r\n        <div class=\"all_block\">\r\n          <img :src=\"`${apiUrl}/${product.images[0]}`\" alt=\"\" width=\"160\" height=\"160\">\r\n          <p class=\"description\">{{ product.name }}</p>\r\n          <p class=\"price\">{{ product.price }}</p>\r\n  \r\n          <ShowButton backgroundColor=\"#000\" titleColor=\"#fff\" buttonTitle=\"Buy Now\"\r\n              @click=\"addToCart(product)\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { defineProps } from 'vue';\r\n  import ShowButton from '../Buttons/ShowButton.vue';\r\n  import { useStore } from 'vuex';\r\n  \r\n  const props = defineProps({\r\n    product: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    apiUrl: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  });\r\n  \r\n  const store = useStore();\r\n  \r\n  const isLiked = (product) => store.state.likedProducts.some(item => item.id === product.id);\r\n  \r\n  const toggleLike = (product) => {\r\n    store.commit('toggleLike', product);\r\n  };\r\n  \r\n  let isAddingToCart = false;\r\n  \r\n  const addToCart = (product) => {\r\n    if (isAddingToCart) return;\r\n    isAddingToCart = true;\r\n    store.commit('addToCart', product);\r\n    setTimeout(() => {\r\n      isAddingToCart = false;\r\n    }, 100);\r\n  };\r\n  </script>\r\n  "],"mappings":";;AAsBE,OAAOA,UAAU,MAAM,2BAA2B;AAClD,SAASC,QAAQ,QAAQ,MAAM;;;;;;;;;;;;;;;;;IAE/B,MAAMC,KAAK,GAAGC,OASZ;IAEF,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IAExB,MAAMI,OAAO,GAAIC,OAAO,IAAKF,KAAK,CAACG,KAAK,CAACC,aAAa,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IAE3F,MAAMC,UAAU,GAAIN,OAAO,IAAK;MAC9BF,KAAK,CAACS,MAAM,CAAC,YAAY,EAAEP,OAAO,CAAC;IACrC,CAAC;IAED,IAAIQ,cAAc,GAAG,KAAK;IAE1B,MAAMC,SAAS,GAAIT,OAAO,IAAK;MAC7B,IAAIQ,cAAc,EAAE;MACpBA,cAAc,GAAG,IAAI;MACrBV,KAAK,CAACS,MAAM,CAAC,WAAW,EAAEP,OAAO,CAAC;MAClCU,UAAU,CAAC,MAAM;QACfF,cAAc,GAAG,KAAK;MACxB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}