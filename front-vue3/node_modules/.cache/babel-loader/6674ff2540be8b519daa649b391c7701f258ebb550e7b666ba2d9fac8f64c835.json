{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h3\", null, \"Количество товаров: \" + _toDisplayString($setup.totalProducts), 1 /* TEXT */), _createVNode($setup[\"ProductCart\"], {\n    products: $setup.paginatedProducts,\n    apiUrl: $setup.apiUrl\n  }, null, 8 /* PROPS */, [\"products\", \"apiUrl\"]), _createVNode($setup[\"ProductPagination\"], {\n    currentPage: _ctx.currentPage,\n    totalPages: _ctx.totalPages\n  }, null, 8 /* PROPS */, [\"currentPage\", \"totalPages\"]), _createVNode($setup[\"ProductFilter\"], {\n    brands: _ctx.brands,\n    categories: _ctx.categories,\n    characteristics: _ctx.characteristics\n  }, null, 8 /* PROPS */, [\"brands\", \"categories\", \"characteristics\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$setup","totalProducts","_createVNode","products","paginatedProducts","apiUrl","currentPage","_ctx","totalPages","brands","categories","characteristics"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Количество товаров: {{ totalProducts }}</h3>\r\n      <ProductCart :products=\"paginatedProducts\" :apiUrl=\"apiUrl\" />\r\n      <ProductPagination :currentPage=\"currentPage\" :totalPages=\"totalPages\" />\r\n      <ProductFilter :brands=\"brands\" :categories=\"categories\" :characteristics=\"characteristics\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n\r\n  import ProductCart from '../Products/ProductCart.vue';\r\n  import ProductPagination from '../Products/ProductPagination.vue';\r\n  import ProductFilter from '../Filter/ProductFilter.vue';\r\n  import { ref, computed } from 'vue'; // Добавляем импорт для ref и computed\r\nimport { API_BASE_URL } from '@/config'; // Добавляем импорт для API_BASE_URL\r\n\r\n  const apiUrl = API_BASE_URL;\r\n  const paginatedProducts = ref([]);\r\n  const totalProducts = computed(() => paginatedProducts.value.length);\r\n  </script>\r\n  "],"mappings":";;uBACIA,mBAAA,CAKM,cAJJC,mBAAA,CAAgD,YAA5C,sBAAoB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,aAAa,kBACxCC,YAAA,CAA8DF,MAAA;IAAhDG,QAAQ,EAAEH,MAAA,CAAAI,iBAAiB;IAAGC,MAAM,EAAEL,MAAA,CAAAK;mDACpDH,YAAA,CAAyEF,MAAA;IAArDM,WAAW,EAAEC,IAAA,CAAAD,WAAW;IAAGE,UAAU,EAAED,IAAA,CAAAC;0DAC3DN,YAAA,CAA8FF,MAAA;IAA9ES,MAAM,EAAEF,IAAA,CAAAE,MAAM;IAAGC,UAAU,EAAEH,IAAA,CAAAG,UAAU;IAAGC,eAAe,EAAEJ,IAAA,CAAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}