{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, vModelRadio as _vModelRadio } from \"vue\";\nconst _hoisted_1 = {\n  class: \"category-menu\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_4 = [\"id\", \"value\"];\nconst _hoisted_5 = [\"for\"];\nconst _hoisted_6 = {\n  class: \"characteristic-filter\"\n};\nconst _hoisted_7 = [\"id\", \"onUpdate:modelValue\", \"value\"];\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = {\n  class: \"product-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Меню категорий \"), _createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Категории\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: category.id,\n      onClick: $event => $setup.selectCategory(category)\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Фильтр по брендам \"), _createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Фильтр по брендам\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedBrands = $event),\n      value: brand\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelCheckbox, _ctx.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, _toDisplayString(brand), 9 /* TEXT, PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Фильтр по характеристикам \"), _createElementVNode(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Уникальные характеристики\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(characteristic), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"radio\",\n        id: `${characteristic}-${value}`,\n        \"onUpdate:modelValue\": $event => $setup.selectedCharacteristics[characteristic] = $event,\n        value: value\n      }, null, 8 /* PROPS */, _hoisted_7), [[_vModelRadio, $setup.selectedCharacteristics[characteristic]]]), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_8)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Список товаров с фильтрацией \"), _createElementVNode(\"div\", _hoisted_9, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Товары\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredProducts, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, _toDisplayString(product.name) + \" - \" + _toDisplayString(product.brand), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createCommentVNode","_createElementVNode","_hoisted_1","_Fragment","_renderList","$setup","categories","category","key","id","onClick","$event","selectCategory","name","_hoisted_2","_hoisted_3","brands","brand","type","_cache","_ctx","selectedBrands","value","_hoisted_4","for","_toDisplayString","_hoisted_5","_hoisted_6","characteristics","values","characteristic","selectedCharacteristics","_hoisted_7","_hoisted_8","_hoisted_9","filteredProducts","product"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- Меню категорий -->\r\n        <div class=\"category-menu\">\r\n            <h3>Категории</h3>\r\n            <ul>\r\n                <li v-for=\"category in categories\" :key=\"category.id\" @click=\"selectCategory(category)\">\r\n                    {{ category.name }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <!-- Фильтр по брендам -->\r\n        <div class=\"brand-filter\">\r\n            <h3>Фильтр по брендам</h3>\r\n            <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n                <input type=\"checkbox\" :id=\"brand\" v-model=\"selectedBrands\" :value=\"brand\" />\r\n                <label :for=\"brand\">{{ brand }}</label>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Фильтр по характеристикам -->\r\n        <div class=\"characteristic-filter\">\r\n            <h2>Уникальные характеристики</h2>\r\n            <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n                <h3>{{ characteristic }}</h3>\r\n                <div v-for=\"value in values\" :key=\"value\">\r\n                    <input type=\"radio\" :id=\"`${characteristic}-${value}`\"\r\n                        v-model=\"selectedCharacteristics[characteristic]\" :value=\"value\" />\r\n                    <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Список товаров с фильтрацией -->\r\n        <div class=\"product-list\">\r\n            <h3>Товары</h3>\r\n            <ul>\r\n                <li v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n                    {{ product.name }} - {{ product.brand }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\n\r\nconst categories = ref([]);\r\nconst products = ref([]);\r\nconst brands = ref([]);\r\nconst selectedBrand = ref(null);  // Для одного выбранного бренда\r\n\r\nconst selectedCharacteristics = ref({});  // Для хранения выбранных характеристик\r\nconst characteristics = ref({});  // Уникальные характеристики\r\n\r\nonMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n});\r\n\r\n// Функция для загрузки категорий\r\nconst loadCategories = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке категорий');\r\n        }\r\n        const data = await response.json();\r\n        categories.value = data;\r\n\r\n        extractBrands(data);\r\n        extractCharacteristics(data);\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n};\r\n\r\n// Функция для загрузки товаров\r\nconst loadProducts = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке товаров');\r\n        }\r\n        const data = await response.json();\r\n        products.value = data;\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n};\r\n\r\n// Извлекаем бренды из категорий\r\nconst extractBrands = (categoriesData) => {\r\n    const allBrands = new Set();\r\n\r\n    categoriesData.forEach(category => {\r\n        if (category.brand) {\r\n            allBrands.add(category.brand);\r\n        }\r\n    });\r\n\r\n    brands.value = Array.from(allBrands);\r\n};\r\n\r\n// Извлекаем уникальные характеристики\r\nconst extractCharacteristics = (categoriesData) => {\r\n    const characteristicsData = {};\r\n\r\n    categoriesData.forEach(item => {\r\n        if (item.characteristics && Array.isArray(item.characteristics)) {\r\n            item.characteristics.forEach(characteristic => {\r\n                const charName = characteristic.characteristic;\r\n                const charValue = characteristic.value;\r\n\r\n                if (!characteristicsData[charName]) {\r\n                    characteristicsData[charName] = new Set();\r\n                }\r\n                characteristicsData[charName].add(charValue);\r\n            });\r\n        }\r\n    });\r\n\r\n    for (const charName in characteristicsData) {\r\n        characteristicsData[charName] = Array.from(characteristicsData[charName]);\r\n    }\r\n\r\n    characteristics.value = { ...characteristicsData };\r\n};\r\n\r\n// Фильтрация товаров по выбранным брендам и характеристикам\r\nconst filteredProducts = computed(() => {\r\n    return products.value.filter(product => {\r\n        const matchesBrand = !selectedBrand.value || selectedBrand.value === product.brand;\r\n\r\n        const matchesCharacteristics = Object.keys(selectedCharacteristics.value).every(characteristic => {\r\n            if (!selectedCharacteristics.value[characteristic]) return true;\r\n            const productValues = product.characteristics\r\n                ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value)\r\n                : [];\r\n            return selectedCharacteristics.value[characteristic] === productValues[0];\r\n        });\r\n\r\n        return matchesBrand && matchesCharacteristics;\r\n    });\r\n});\r\n\r\n\r\n// Функция для выбора категории\r\nconst selectCategory = (category) => {\r\n    console.log('Выбрана категория:', category);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.category-menu {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.category-menu ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.category-menu li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    background-color: #f0f0f0;\r\n    margin: 5px 0;\r\n}\r\n\r\n.category-menu li:hover {\r\n    background-color: #e0e0e0;\r\n}\r\n\r\n.brand-filter,\r\n.characteristic-filter {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.brand-checkbox,\r\n.characteristic-filter div {\r\n    margin: 5px 0;\r\n}\r\n\r\n.product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.product-list li {\r\n    margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":";;EAGaA,KAAK,EAAC;AAAe;mBAHlC;;EAaaA,KAAK,EAAC;AAAc;mBAbjC;mBAAA;;EAsBaA,KAAK,EAAC;AAAuB;mBAtB1C;mBAAA;;EAmCaA,KAAK,EAAC;AAAc;;uBAlC7BC,mBAAA,CA0CM,cAzCFC,mBAAA,oBAAuB,EACvBC,mBAAA,CAOM,OAPNC,UAOM,G,0BANFD,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAIK,c,kBAHDF,mBAAA,CAEKI,SAAA,QARrBC,WAAA,CAMuCC,MAAA,CAAAC,UAAU,EAAtBC,QAAQ;yBAAnBR,mBAAA,CAEK;MAF+BS,GAAG,EAAED,QAAQ,CAACE,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,cAAc,CAACL,QAAQ;wBAC9EA,QAAQ,CAACM,IAAI,wBAPpCC,UAAA;sCAYQd,mBAAA,uBAA0B,EAC1BC,mBAAA,CAMM,OANNc,UAMM,G,0BALFd,mBAAA,CAA0B,YAAtB,mBAAiB,uB,kBACrBF,mBAAA,CAGMI,SAAA,QAlBlBC,WAAA,CAeiCC,MAAA,CAAAW,MAAM,EAAfC,KAAK;yBAAjBlB,mBAAA,CAGM;MAHwBS,GAAG,EAAES,KAAK;MAAEnB,KAAK,EAAC;wBAC5CG,mBAAA,CAA6E;MAAtEiB,IAAI,EAAC,UAAU;MAAET,EAAE,EAAEQ,KAAK;MAhBjD,uBAAAE,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAgB4DS,IAAA,CAAAC,cAAc,GAAAV,MAAA;MAAGW,KAAK,EAAEL;4BAhBpFM,UAAA,I,kBAgB4DH,IAAA,CAAAC,cAAc,E,GAC1DpB,mBAAA,CAAuC;MAA/BuB,GAAG,EAAEP;IAAK,GAAAQ,gBAAA,CAAKR,KAAK,wBAjB5CS,UAAA,E;oCAqBQ1B,mBAAA,+BAAkC,EAClCC,mBAAA,CAUM,OAVN0B,UAUM,G,0BATF1B,mBAAA,CAAkC,YAA9B,2BAAyB,uB,kBAC7BF,mBAAA,CAOMI,SAAA,QA/BlBC,WAAA,CAwBoDC,MAAA,CAAAuB,eAAe,EAxBnE,CAwByBC,MAAM,EAAEC,cAAc;yBAAnC/B,mBAAA,CAOM;MAPoDS,GAAG,EAAEsB;IAAc,IACzE7B,mBAAA,CAA6B,YAAAwB,gBAAA,CAAtBK,cAAc,mB,kBACrB/B,mBAAA,CAIMI,SAAA,QA9BtBC,WAAA,CA0BqCyB,MAAM,EAAfP,KAAK;2BAAjBvB,mBAAA,CAIM;QAJwBS,GAAG,EAAEc;MAAK,I,gBACpCrB,mBAAA,CACuE;QADhEiB,IAAI,EAAC,OAAO;QAAET,EAAE,KAAKqB,cAAc,IAAIR,KAAK;QA3BvE,uBAAAX,MAAA,IA4BiCN,MAAA,CAAA0B,uBAAuB,CAACD,cAAc,IAAAnB,MAAA;QAAIW,KAAK,EAAEA;8BA5BlFU,UAAA,I,eA4BiC3B,MAAA,CAAA0B,uBAAuB,CAACD,cAAc,G,GACnD7B,mBAAA,CAA8D;QAAtDuB,GAAG,KAAKM,cAAc,IAAIR,KAAK;0BAAOA,KAAK,wBA7BvEW,UAAA,E;;oCAkCQjC,mBAAA,kCAAqC,EACrCC,mBAAA,CAOM,OAPNiC,UAOM,G,0BANFjC,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIK,c,kBAHDF,mBAAA,CAEKI,SAAA,QAxCrBC,WAAA,CAsCsCC,MAAA,CAAA8B,gBAAgB,EAA3BC,OAAO;yBAAlBrC,mBAAA,CAEK;MAFoCS,GAAG,EAAE4B,OAAO,CAAC3B;wBAC/C2B,OAAO,CAACvB,IAAI,IAAG,KAAG,GAAAY,gBAAA,CAAGW,OAAO,CAACnB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}