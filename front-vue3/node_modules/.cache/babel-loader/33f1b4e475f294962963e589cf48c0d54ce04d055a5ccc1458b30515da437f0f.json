{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"id\", \"value\", \"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_2 = [\"for\"];\nconst _hoisted_3 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_4 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_5 = [\"for\"];\nconst _hoisted_6 = {\n  class: \"product-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(characteristic), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: `${characteristic}-${value}`,\n        value: value,\n        \"onUpdate:modelValue\": $event => $setup.selectedCharacteristics[characteristic] = $event,\n        onChange: $event => $setup.handleCharacteristicChange(characteristic, value)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1), [[_vModelCheckbox, $setup.selectedCharacteristics[characteristic]]]), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_2)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Фильтр по брендам\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      value: brand,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedBrands = $event),\n      onChange: $event => $setup.handleBrandChange(brand)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelCheckbox, $setup.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, _toDisplayString(brand), 9 /* TEXT, PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Товары\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredProducts, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, _toDisplayString(product.name) + \" - \" + _toDisplayString(product.brand), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$setup","characteristics","values","characteristic","key","_createElementVNode","_toDisplayString","value","type","id","$event","selectedCharacteristics","onChange","handleCharacteristicChange","_hoisted_1","for","_hoisted_2","_hoisted_3","brands","brand","_cache","selectedBrands","handleBrandChange","_hoisted_4","_hoisted_5","_hoisted_6","filteredProducts","product","name"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n        <h3>{{ characteristic }}</h3>\r\n        <div v-for=\"value in values\" :key=\"value\">\r\n          <input type=\"checkbox\" \r\n                 :id=\"`${characteristic}-${value}`\" \r\n                 :value=\"value\"\r\n                 v-model=\"selectedCharacteristics[characteristic]\"\r\n                 @change=\"handleCharacteristicChange(characteristic, value)\" />\r\n          <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"brand-filter\">\r\n        <h3>Фильтр по брендам</h3>\r\n        <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n          <input type=\"checkbox\" \r\n                 :id=\"brand\" \r\n                 :value=\"brand\" \r\n                 v-model=\"selectedBrands\"\r\n                 @change=\"handleBrandChange(brand)\" />\r\n          <label :for=\"brand\">{{ brand }}</label>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"product-list\">\r\n        <h3>Товары</h3>\r\n        <ul>\r\n          <li v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n            {{ product.name }} - {{ product.brand }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  \r\n  const categories = ref([]);\r\n  const products = ref([]);\r\n  const brands = ref([]);\r\n  const selectedBrands = ref([]); // Массив для выбранных брендов\r\n  const selectedCharacteristics = ref({});  // Для хранения выбранных характеристик\r\n  const characteristics = ref({});  // Уникальные характеристики\r\n  \r\n  // Обработчик изменения бренда\r\n  const handleBrandChange = (brand) => {\r\n    if (selectedBrands.value.includes(brand)) {\r\n      selectedBrands.value = selectedBrands.value.filter(item => item !== brand);\r\n    } else {\r\n      selectedBrands.value.push(brand);\r\n    }\r\n  };\r\n  \r\n  // Обработчик изменения характеристик\r\n  const handleCharacteristicChange = (characteristic, value) => {\r\n    if (!selectedCharacteristics.value[characteristic]) {\r\n      selectedCharacteristics.value[characteristic] = [];\r\n    }\r\n  \r\n    const selectedValues = selectedCharacteristics.value[characteristic];\r\n    const valueIndex = selectedValues.indexOf(value);\r\n  \r\n    if (valueIndex === -1) {\r\n      selectedValues.push(value); // Добавляем значение\r\n    } else {\r\n      selectedValues.splice(valueIndex, 1); // Убираем значение\r\n    }\r\n  };\r\n  \r\n  onMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n  });\r\n  \r\n  const loadCategories = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/products');\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка при загрузке категорий');\r\n      }\r\n      const data = await response.json();\r\n      categories.value = data;\r\n  \r\n      extractBrands(data);\r\n      extractCharacteristics(data);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n  };\r\n  \r\n  const loadProducts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/products');\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка при загрузке товаров');\r\n      }\r\n      const data = await response.json();\r\n      products.value = data;\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n  };\r\n  \r\n  const extractBrands = (categoriesData) => {\r\n    const allBrands = new Set();\r\n    categoriesData.forEach(category => {\r\n      if (category.brand) {\r\n        allBrands.add(category.brand);\r\n      }\r\n    });\r\n    brands.value = Array.from(allBrands);\r\n  };\r\n  \r\n  const extractCharacteristics = (categoriesData) => {\r\n    const characteristicsData = {};\r\n    categoriesData.forEach(item => {\r\n      if (item.characteristics && Array.isArray(item.characteristics)) {\r\n        item.characteristics.forEach(characteristic => {\r\n          const charName = characteristic.characteristic;\r\n          const charValue = characteristic.value;\r\n  \r\n          if (!characteristicsData[charName]) {\r\n            characteristicsData[charName] = new Set();\r\n          }\r\n          characteristicsData[charName].add(charValue);\r\n        });\r\n      }\r\n    });\r\n  \r\n    for (const charName in characteristicsData) {\r\n      characteristicsData[charName] = Array.from(characteristicsData[charName]);\r\n    }\r\n  \r\n    characteristics.value = { ...characteristicsData };\r\n  };\r\n  \r\n  const filteredProducts = computed(() => {\r\n    return products.value.filter(product => {\r\n      const matchesBrand = selectedBrands.value.length === 0 || selectedBrands.value.includes(product.brand);\r\n  \r\n      const matchesCharacteristics = Object.keys(selectedCharacteristics.value).every(characteristic => {\r\n        const selectedValues = selectedCharacteristics.value[characteristic];\r\n        if (!Array.isArray(selectedValues)) return true;\r\n  \r\n        const productValues = product.characteristics\r\n          ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value)\r\n          : [];\r\n  \r\n        return selectedValues.some(value => productValues.includes(value));\r\n      });\r\n  \r\n      return matchesBrand && matchesCharacteristics;\r\n    });\r\n  });\r\n  \r\n  const selectCategory = (category) => {\r\n    console.log('Выбрана категория:', category);\r\n  };\r\n  </script>\r\n  "],"mappings":";mBAAA;mBAAA;;EAcWA,KAAK,EAAC;AAAc;mBAd/B;mBAAA;;EA0BWA,KAAK,EAAC;AAAc;;uBAzB3BC,mBAAA,CAiCM,e,kBAhCJA,mBAAA,CAUMC,SAAA,QAZZC,WAAA,CAE8CC,MAAA,CAAAC,eAAe,EAF7D,CAEmBC,MAAM,EAAEC,cAAc;yBAAnCN,mBAAA,CAUM;MAVoDO,GAAG,EAAED;IAAc,IAC3EE,mBAAA,CAA6B,YAAAC,gBAAA,CAAtBH,cAAc,mB,kBACrBN,mBAAA,CAOMC,SAAA,QAXdC,WAAA,CAI6BG,MAAM,EAAfK,KAAK;2BAAjBV,mBAAA,CAOM;QAPwBO,GAAG,EAAEG;MAAK,I,gBACtCF,mBAAA,CAIqE;QAJ9DG,IAAI,EAAC,UAAU;QACdC,EAAE,KAAKN,cAAc,IAAII,KAAK;QAC9BA,KAAK,EAAEA,KAAK;QAP9B,uBAAAG,MAAA,IAQ0BV,MAAA,CAAAW,uBAAuB,CAACR,cAAc,IAAAO,MAAA;QAC9CE,QAAM,EAAAF,MAAA,IAAEV,MAAA,CAAAa,0BAA0B,CAACV,cAAc,EAAEI,KAAK;+CAT1EO,UAAA,I,kBAQ0Bd,MAAA,CAAAW,uBAAuB,CAACR,cAAc,G,GAEtDE,mBAAA,CAA8D;QAAtDU,GAAG,KAAKZ,cAAc,IAAII,KAAK;0BAAOA,KAAK,wBAV7DS,UAAA,E;;kCAcMX,mBAAA,CAUM,OAVNY,UAUM,G,0BATJZ,mBAAA,CAA0B,YAAtB,mBAAiB,uB,kBACrBR,mBAAA,CAOMC,SAAA,QAvBdC,WAAA,CAgB6BC,MAAA,CAAAkB,MAAM,EAAfC,KAAK;yBAAjBtB,mBAAA,CAOM;MAPwBO,GAAG,EAAEe,KAAK;MAAEvB,KAAK,EAAC;wBAC9CS,mBAAA,CAI4C;MAJrCG,IAAI,EAAC,UAAU;MACdC,EAAE,EAAEU,KAAK;MACTZ,KAAK,EAAEY,KAAK;MAnB9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAV,MAAA,IAoB0BV,MAAA,CAAAqB,cAAc,GAAAX,MAAA;MACtBE,QAAM,EAAAF,MAAA,IAAEV,MAAA,CAAAsB,iBAAiB,CAACH,KAAK;6CArBjDI,UAAA,I,kBAoB0BvB,MAAA,CAAAqB,cAAc,E,GAE9BhB,mBAAA,CAAuC;MAA/BU,GAAG,EAAEI;IAAK,GAAAb,gBAAA,CAAKa,KAAK,wBAtBtCK,UAAA,E;oCA0BMnB,mBAAA,CAOM,OAPNoB,UAOM,G,0BANJpB,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIK,c,kBAHHR,mBAAA,CAEKC,SAAA,QA/BfC,WAAA,CA6BgCC,MAAA,CAAA0B,gBAAgB,EAA3BC,OAAO;yBAAlB9B,mBAAA,CAEK;MAFoCO,GAAG,EAAEuB,OAAO,CAAClB;wBACjDkB,OAAO,CAACC,IAAI,IAAG,KAAG,GAAAtB,gBAAA,CAAGqB,OAAO,CAACR,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}