{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h3\", null, \"Количество товаров: \" + _toDisplayString($setup.totalProducts), 1 /* TEXT */), _createVNode($setup[\"ProductCart\"], {\n    products: $setup.paginatedProducts,\n    apiUrl: $setup.apiUrl\n  }, null, 8 /* PROPS */, [\"products\", \"apiUrl\"]), _createVNode($setup[\"ProductPagination\"], {\n    currentPage: $setup.currentPage,\n    totalPages: $setup.totalPages\n  }, null, 8 /* PROPS */, [\"currentPage\", \"totalPages\"]), _createVNode($setup[\"ProductFilter\"], {\n    brands: $setup.brands,\n    categories: $setup.categories,\n    characteristics: $setup.characteristics\n  }, null, 8 /* PROPS */, [\"brands\", \"categories\", \"characteristics\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$setup","totalProducts","_createVNode","products","paginatedProducts","apiUrl","currentPage","totalPages","brands","categories","characteristics"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Количество товаров: {{ totalProducts }}</h3>\r\n      <ProductCart :products=\"paginatedProducts\" :apiUrl=\"apiUrl\" />\r\n      <ProductPagination :currentPage=\"currentPage\" :totalPages=\"totalPages\" />\r\n      <ProductFilter :brands=\"brands\" :categories=\"categories\" :characteristics=\"characteristics\" />\r\n    </div>\r\n  </template>\r\n  \r\n<script setup>\r\nimport ProductCart from '../Products/ProductCart.vue';\r\nimport ProductPagination from '../Products/ProductPagination.vue';\r\nimport ProductFilter from '../Filter/ProductFilter.vue';\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { API_BASE_URL } from '@/config';\r\n\r\nconst apiUrl = API_BASE_URL;\r\nconst paginatedProducts = ref([]);\r\nconst currentPage = ref(1);\r\nconst productsPerPage = 10; // Задаем количество товаров на странице\r\n\r\n// Инициализируем бренды, категории и характеристики для фильтра\r\nconst brands = ref([]);\r\nconst categories = ref([]);\r\nconst characteristics = ref([]);\r\n\r\n// Загружаем данные\r\nconst loadProducts = async () => {\r\n  try {\r\n    const response = await fetch(`${apiUrl}/products`);\r\n    const data = await response.json();\r\n    paginatedProducts.value = data;\r\n  } catch (error) {\r\n    console.error('Ошибка загрузки данных:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  loadProducts();\r\n});\r\n\r\nconst totalProducts = computed(() => paginatedProducts.value.length);\r\nconst totalPages = computed(() => Math.ceil(totalProducts.value / productsPerPage));\r\n</script>\r\n\r\n  "],"mappings":";;uBACIA,mBAAA,CAKM,cAJJC,mBAAA,CAAgD,YAA5C,sBAAoB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,aAAa,kBACxCC,YAAA,CAA8DF,MAAA;IAAhDG,QAAQ,EAAEH,MAAA,CAAAI,iBAAiB;IAAGC,MAAM,EAAEL,MAAA,CAAAK;mDACpDH,YAAA,CAAyEF,MAAA;IAArDM,WAAW,EAAEN,MAAA,CAAAM,WAAW;IAAGC,UAAU,EAAEP,MAAA,CAAAO;0DAC3DL,YAAA,CAA8FF,MAAA;IAA9EQ,MAAM,EAAER,MAAA,CAAAQ,MAAM;IAAGC,UAAU,EAAET,MAAA,CAAAS,UAAU;IAAGC,eAAe,EAAEV,MAAA,CAAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}