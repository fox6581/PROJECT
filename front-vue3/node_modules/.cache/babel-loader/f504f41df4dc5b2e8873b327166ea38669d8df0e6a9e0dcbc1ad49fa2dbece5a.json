{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\n//   import ShowButton from '../Buttons/ShowButton.vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'FavoriteProduct',\n  props: {\n    products: {\n      type: Array,\n      required: true\n    },\n    apiUrl: {\n      type: String,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const store = useStore();\n\n    // Функция для добавления товара в корзину\n    //   const addToCart = (product) => {\n    //     store.commit('addToCart', product);\n    //   };\n\n    // Функция для проверки, находится ли товар в списке понравившихся\n    const isLiked = product => {\n      return store.state.likedProducts.some(item => item.id === product.id);\n    };\n\n    // Функция для добавления или удаления товара из понравившихся\n    const toggleLike = product => {\n      store.commit('toggleLike', product);\n    };\n    const __returned__ = {\n      props,\n      store,\n      isLiked,\n      toggleLike,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useStore","props","__props","store","isLiked","product","state","likedProducts","some","item","id","toggleLike","commit"],"sources":["C:/shopvue/front-vue3/src/components/Favorite/FavoriteProduct.vue"],"sourcesContent":["<template>\r\n    <div class=\"all\">\r\n        <div v-for=\"product in props.products\" :key=\"product.id\">\r\n            <hr>\r\n        <div \r\n          class=\"header-icons_like\" \r\n          @click=\"toggleLike(product)\" \r\n          :class=\"{ liked: isLiked(product) }\"\r\n        >\r\n          <img \r\n            :src=\"isLiked(product) ? require('@/assets/redLike.png') : require('@/assets/Like.png')\" \r\n            width=\"32\" \r\n            height=\"32\" \r\n            alt=\"Like\"\r\n          />\r\n        </div>\r\n  \r\n        <div class=\"all_block\">\r\n          <img :src=\"`${apiUrl}/${product.images[0]}`\" alt=\"\" width=\"160\" height=\"160\">\r\n          <p class=\"description\">{{ product.name }}</p>\r\n          <p class=\"price\">{{ product.price }}</p>\r\n  \r\n          <!-- <ShowButton \r\n            backgroundColor=\"#000\" \r\n            titleColor=\"#fff\" \r\n            buttonTitle=\"Buy Now\" \r\n            @click=\"addToCart(product)\" \r\n          /> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { defineProps } from 'vue';\r\n//   import ShowButton from '../Buttons/ShowButton.vue';\r\n  import { useStore } from 'vuex';\r\n  \r\n  \r\n  const props = defineProps({\r\n    products: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    apiUrl: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  });\r\n\r\n  const store = useStore();\r\n  \r\n  // Функция для добавления товара в корзину\r\n//   const addToCart = (product) => {\r\n//     store.commit('addToCart', product);\r\n//   };\r\n  \r\n  // Функция для проверки, находится ли товар в списке понравившихся\r\n  const isLiked = (product) => {\r\n    return store.state.likedProducts.some(item => item.id === product.id);\r\n  };\r\n  \r\n  // Функция для добавления или удаления товара из понравившихся\r\n  const toggleLike = (product) => {\r\n    store.commit('toggleLike', product);\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\nhr{\r\n    border: 0.5px solid #A3A3A3\r\n}\r\n</style>\r\n  "],"mappings":";;AAmCA;AACE,SAASA,QAAQ,QAAQ,MAAM;;;;;;;;;;;;;;;;;IAG/B,MAAMC,KAAK,GAAGC,OASZ;IAEF,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;;IAExB;IACF;IACA;IACA;;IAEE;IACA,MAAMI,OAAO,GAAIC,OAAO,IAAK;MAC3B,OAAOF,KAAK,CAACG,KAAK,CAACC,aAAa,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IACvE,CAAC;;IAED;IACA,MAAMC,UAAU,GAAIN,OAAO,IAAK;MAC9BF,KAAK,CAACS,MAAM,CAAC,YAAY,EAAEP,OAAO,CAAC;IACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}