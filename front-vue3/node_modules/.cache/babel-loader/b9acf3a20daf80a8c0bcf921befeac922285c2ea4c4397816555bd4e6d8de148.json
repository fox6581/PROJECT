{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nexport default {\n  data() {\n    return {\n      selectedBrands: [],\n      // Массив для выбранных брендов\n      selectedCharacteristics: {},\n      // Объект для выбранных характеристик\n      brands: ['Brand 1', 'Brand 2', 'Brand 3'],\n      // Пример списка брендов\n      characteristics: {\n        'Processor': ['Intel', 'AMD', 'Apple'],\n        'RAM': ['4GB', '8GB', '16GB']\n      },\n      // Пример списка характеристик\n      products: [{\n        id: 1,\n        name: 'Product 1',\n        brand: 'Brand 1',\n        characteristics: [{\n          characteristic: 'Processor',\n          value: 'Intel'\n        }, {\n          characteristic: 'RAM',\n          value: '8GB'\n        }]\n      }, {\n        id: 2,\n        name: 'Product 2',\n        brand: 'Brand 2',\n        characteristics: [{\n          characteristic: 'Processor',\n          value: 'AMD'\n        }, {\n          characteristic: 'RAM',\n          value: '16GB'\n        }]\n      }\n      // Добавьте товары\n      ]\n    };\n  },\n  computed: {\n    filteredProducts() {\n      return this.products.filter(product => {\n        const matchesBrand = this.selectedBrands.length === 0 || this.selectedBrands.includes(product.brand);\n        const matchesCharacteristics = Object.keys(this.selectedCharacteristics).every(characteristic => {\n          const selectedValues = this.selectedCharacteristics[characteristic];\n          if (!Array.isArray(selectedValues)) return true;\n          const productValues = product.characteristics ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value) : [];\n          return selectedValues.some(value => productValues.includes(value));\n        });\n        return matchesBrand && matchesCharacteristics;\n      });\n    }\n  },\n  methods: {\n    handleCharacteristicChange(characteristic, value) {\n      if (!Array.isArray(this.selectedCharacteristics[characteristic])) {\n        this.selectedCharacteristics[characteristic] = [];\n      }\n      const selectedValues = this.selectedCharacteristics[characteristic];\n      const index = selectedValues.indexOf(value);\n      if (index === -1) {\n        selectedValues.push(value);\n      } else {\n        selectedValues.splice(index, 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","selectedBrands","selectedCharacteristics","brands","characteristics","products","id","name","brand","characteristic","value","computed","filteredProducts","filter","product","matchesBrand","length","includes","matchesCharacteristics","Object","keys","every","selectedValues","Array","isArray","productValues","item","map","some","methods","handleCharacteristicChange","index","indexOf","push","splice"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Brands</h3>\r\n      <div v-for=\"brand in brands\" :key=\"brand\">\r\n          <input\r\n              type=\"checkbox\"\r\n              :id=\"brand\"\r\n              :value=\"brand\"\r\n              v-model=\"selectedBrands\"\r\n          />\r\n          <label :for=\"brand\">{{ brand }}</label>\r\n      </div>\r\n  \r\n      <h3>Characteristics</h3>\r\n      <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n          <h4>{{ characteristic }}</h4>\r\n          <div v-for=\"value in values\" :key=\"value\">\r\n              <input \r\n                  type=\"checkbox\" \r\n                  :id=\"`${characteristic}-${value}`\" \r\n                  :value=\"value\"\r\n                  v-model=\"selectedCharacteristics[characteristic]\"\r\n                  @change=\"handleCharacteristicChange(characteristic, value)\" />\r\n              <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n          </div>\r\n      </div>\r\n  \r\n      <h3>Filtered Products</h3>\r\n      <div v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n          <p>{{ product.name }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedBrands: [],  // Массив для выбранных брендов\r\n        selectedCharacteristics: {},  // Объект для выбранных характеристик\r\n        brands: ['Brand 1', 'Brand 2', 'Brand 3'],  // Пример списка брендов\r\n        characteristics: {\r\n          'Processor': ['Intel', 'AMD', 'Apple'],\r\n          'RAM': ['4GB', '8GB', '16GB'],\r\n        },  // Пример списка характеристик\r\n        products: [\r\n          { id: 1, name: 'Product 1', brand: 'Brand 1', characteristics: [{ characteristic: 'Processor', value: 'Intel' }, { characteristic: 'RAM', value: '8GB' }] },\r\n          { id: 2, name: 'Product 2', brand: 'Brand 2', characteristics: [{ characteristic: 'Processor', value: 'AMD' }, { characteristic: 'RAM', value: '16GB' }] },\r\n          // Добавьте товары\r\n        ],\r\n      };\r\n    },\r\n    computed: {\r\n      filteredProducts() {\r\n        return this.products.filter(product => {\r\n          const matchesBrand = this.selectedBrands.length === 0 || this.selectedBrands.includes(product.brand);\r\n          const matchesCharacteristics = Object.keys(this.selectedCharacteristics).every(characteristic => {\r\n            const selectedValues = this.selectedCharacteristics[characteristic];\r\n            if (!Array.isArray(selectedValues)) return true;\r\n  \r\n            const productValues = product.characteristics\r\n              ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value)\r\n              : [];\r\n  \r\n            return selectedValues.some(value => productValues.includes(value));\r\n          });\r\n  \r\n          return matchesBrand && matchesCharacteristics;\r\n        });\r\n      }\r\n    },\r\n    methods: {\r\n      handleCharacteristicChange(characteristic, value) {\r\n        if (!Array.isArray(this.selectedCharacteristics[characteristic])) {\r\n          this.selectedCharacteristics[characteristic] = [];\r\n        }\r\n  \r\n        const selectedValues = this.selectedCharacteristics[characteristic];\r\n        const index = selectedValues.indexOf(value);\r\n  \r\n        if (index === -1) {\r\n          selectedValues.push(value);\r\n        } else {\r\n          selectedValues.splice(index, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;;;;;AAmCE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAAG;MACrBC,uBAAuB,EAAE,CAAC,CAAC;MAAG;MAC9BC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MAAG;MAC5CC,eAAe,EAAE;QACf,WAAW,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC;QACtC,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM;MAC9B,CAAC;MAAG;MACJC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE,SAAS;QAAEJ,eAAe,EAAE,CAAC;UAAEK,cAAc,EAAE,WAAW;UAAEC,KAAK,EAAE;QAAQ,CAAC,EAAE;UAAED,cAAc,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAM,CAAC;MAAE,CAAC,EAC3J;QAAEJ,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE,SAAS;QAAEJ,eAAe,EAAE,CAAC;UAAEK,cAAc,EAAE,WAAW;UAAEC,KAAK,EAAE;QAAM,CAAC,EAAE;UAAED,cAAc,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAO,CAAC;MAAE;MACzJ;MAAA;IAEJ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACP,QAAQ,CAACQ,MAAM,CAACC,OAAM,IAAK;QACrC,MAAMC,YAAW,GAAI,IAAI,CAACd,cAAc,CAACe,MAAK,KAAM,KAAK,IAAI,CAACf,cAAc,CAACgB,QAAQ,CAACH,OAAO,CAACN,KAAK,CAAC;QACpG,MAAMU,sBAAqB,GAAIC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAClB,uBAAuB,CAAC,CAACmB,KAAK,CAACZ,cAAa,IAAK;UAC/F,MAAMa,cAAa,GAAI,IAAI,CAACpB,uBAAuB,CAACO,cAAc,CAAC;UACnE,IAAI,CAACc,KAAK,CAACC,OAAO,CAACF,cAAc,CAAC,EAAE,OAAO,IAAI;UAE/C,MAAMG,aAAY,GAAIX,OAAO,CAACV,eAAc,GACxCU,OAAO,CAACV,eAAe,CAACS,MAAM,CAACa,IAAG,IAAKA,IAAI,CAACjB,cAAa,KAAMA,cAAc,CAAC,CAACkB,GAAG,CAACD,IAAG,IAAKA,IAAI,CAAChB,KAAK,IACrG,EAAE;UAEN,OAAOY,cAAc,CAACM,IAAI,CAAClB,KAAI,IAAKe,aAAa,CAACR,QAAQ,CAACP,KAAK,CAAC,CAAC;QACpE,CAAC,CAAC;QAEF,OAAOK,YAAW,IAAKG,sBAAsB;MAC/C,CAAC,CAAC;IACJ;EACF,CAAC;EACDW,OAAO,EAAE;IACPC,0BAA0BA,CAACrB,cAAc,EAAEC,KAAK,EAAE;MAChD,IAAI,CAACa,KAAK,CAACC,OAAO,CAAC,IAAI,CAACtB,uBAAuB,CAACO,cAAc,CAAC,CAAC,EAAE;QAChE,IAAI,CAACP,uBAAuB,CAACO,cAAc,IAAI,EAAE;MACnD;MAEA,MAAMa,cAAa,GAAI,IAAI,CAACpB,uBAAuB,CAACO,cAAc,CAAC;MACnE,MAAMsB,KAAI,GAAIT,cAAc,CAACU,OAAO,CAACtB,KAAK,CAAC;MAE3C,IAAIqB,KAAI,KAAM,CAAC,CAAC,EAAE;QAChBT,cAAc,CAACW,IAAI,CAACvB,KAAK,CAAC;MAC5B,OAAO;QACLY,cAAc,CAACY,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MACjC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}