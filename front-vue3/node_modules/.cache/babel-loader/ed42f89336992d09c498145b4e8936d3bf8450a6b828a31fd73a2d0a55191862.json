{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted, computed } from 'vue';\nexport default {\n  __name: 'LeftMenu',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const categories = ref([]);\n    const products = ref([]);\n    const brands = ref([]);\n    const selectedBrands = ref([]);\n    const selectedCharacteristics = ref({});\n    const characteristics = ref({});\n    const selectedCategory = ref(null); // Для выбранной категории\n\n    // Загрузка данных\n    onMounted(async () => {\n      await loadCategories();\n      await loadProducts();\n    });\n\n    // Загрузка категорий\n    const loadCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:1452/api/products');\n        if (!response.ok) {\n          throw new Error('Ошибка при загрузке категорий');\n        }\n        const data = await response.json();\n        categories.value = data;\n        extractBrands(data);\n        extractCharacteristics(data);\n      } catch (error) {\n        console.error('Ошибка при загрузке категорий:', error);\n      }\n    };\n\n    // Загрузка товаров\n    const loadProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:1452/api/products');\n        if (!response.ok) {\n          throw new Error('Ошибка при загрузке товаров');\n        }\n        const data = await response.json();\n        products.value = data;\n      } catch (error) {\n        console.error('Ошибка при загрузке товаров:', error);\n      }\n    };\n\n    // Извлечение брендов\n    const extractBrands = categoriesData => {\n      const allBrands = new Set();\n      categoriesData.forEach(category => {\n        if (category.brand) {\n          allBrands.add(category.brand);\n        }\n      });\n      brands.value = Array.from(allBrands);\n    };\n\n    // Извлечение характеристик\n    const extractCharacteristics = categoriesData => {\n      const characteristicsData = {};\n      categoriesData.forEach(item => {\n        if (item.characteristics && Array.isArray(item.characteristics)) {\n          item.characteristics.forEach(characteristic => {\n            const charName = characteristic.characteristic;\n            const charValue = characteristic.value;\n            if (!characteristicsData[charName]) {\n              characteristicsData[charName] = new Set();\n            }\n            characteristicsData[charName].add(charValue);\n          });\n        }\n      });\n      for (const charName in characteristicsData) {\n        characteristicsData[charName] = Array.from(characteristicsData[charName]);\n      }\n      characteristics.value = {\n        ...characteristicsData\n      };\n    };\n\n    // Фильтрация товаров\n    const filteredProducts = computed(() => {\n      return products.value.filter(product => {\n        // Фильтрация по выбранной категории\n        const matchesCategory = selectedCategory.value ? product.categoryId === selectedCategory.value.id : true;\n\n        // Фильтрация по бренду\n        const matchesBrand = selectedBrands.value.length === 0 || selectedBrands.value.includes(product.brand);\n\n        // Фильтрация по характеристикам\n        const matchesCharacteristics = Object.keys(selectedCharacteristics.value).every(characteristic => {\n          if (!selectedCharacteristics.value[characteristic]) return true;\n          const productValues = product.characteristics ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value) : [];\n          return selectedCharacteristics.value[characteristic].every(value => productValues.includes(value));\n        });\n        return matchesCategory && matchesBrand && matchesCharacteristics;\n      });\n    });\n\n    // Выбор категории\n    const selectCategory = category => {\n      selectedCategory.value = category;\n    };\n\n    // Обработчик изменения бренда\n    const handleBrandChange = brand => {\n      const index = selectedBrands.value.indexOf(brand);\n      if (index === -1) {\n        selectedBrands.value.push(brand);\n      } else {\n        selectedBrands.value.splice(index, 1);\n      }\n    };\n\n    // Обработчик изменения характеристики\n    const handleCharacteristicChange = (characteristic, value) => {\n      if (!Array.isArray(selectedCharacteristics.value[characteristic])) {\n        selectedCharacteristics.value[characteristic] = [];\n      }\n      const index = selectedCharacteristics.value[characteristic].indexOf(value);\n      if (index === -1) {\n        selectedCharacteristics.value[characteristic].push(value);\n      } else {\n        selectedCharacteristics.value[characteristic].splice(index, 1);\n      }\n    };\n    const __returned__ = {\n      categories,\n      products,\n      brands,\n      selectedBrands,\n      selectedCharacteristics,\n      characteristics,\n      selectedCategory,\n      loadCategories,\n      loadProducts,\n      extractBrands,\n      extractCharacteristics,\n      filteredProducts,\n      selectCategory,\n      handleBrandChange,\n      handleCharacteristicChange,\n      ref,\n      onMounted,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","categories","products","brands","selectedBrands","selectedCharacteristics","characteristics","selectedCategory","loadCategories","loadProducts","response","fetch","ok","Error","data","json","value","extractBrands","extractCharacteristics","error","console","categoriesData","allBrands","Set","forEach","category","brand","add","Array","from","characteristicsData","item","isArray","characteristic","charName","charValue","filteredProducts","filter","product","matchesCategory","categoryId","id","matchesBrand","length","includes","matchesCharacteristics","Object","keys","every","productValues","map","selectCategory","handleBrandChange","index","indexOf","push","splice","handleCharacteristicChange"],"sources":["C:/shopvue/front-vue3/src/components/Menu/LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"characteristic-filter\">\r\n            <h2>Уникальные характеристики</h2>\r\n            <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n                <h3>{{ characteristic }}</h3>\r\n                <div v-for=\"value in values\" :key=\"value\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        :id=\"`${characteristic}-${value}`\"\r\n                        :value=\"value\"\r\n                        v-model=\"selectedCharacteristics[characteristic]\"\r\n                        @change=\"handleCharacteristicChange(characteristic, value)\"\r\n                    />\r\n                    <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Меню категорий -->\r\n        <div class=\"category-menu\">\r\n            <h3>Категории</h3>\r\n            <ul>\r\n                <li v-for=\"category in categories\" :key=\"category.id\" @click=\"selectCategory(category)\">\r\n                    {{ category.name }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <!-- Фильтр по брендам -->\r\n        <div class=\"brand-filter\">\r\n            <h3>Фильтр по брендам</h3>\r\n            <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    :id=\"brand\" \r\n                    :value=\"brand\" \r\n                    v-model=\"selectedBrands\" \r\n                    @change=\"handleBrandChange(brand)\"\r\n                />\r\n                <label :for=\"brand\">{{ brand }}</label>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Список товаров с фильтрацией -->\r\n        <div class=\"product-list\">\r\n            <h3>Товары</h3>\r\n            <ul>\r\n                <li v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n                    {{ product.name }} - {{ product.brand }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\n\r\nconst categories = ref([]);\r\nconst products = ref([]);\r\nconst brands = ref([]);\r\nconst selectedBrands = ref([]);\r\nconst selectedCharacteristics = ref({});\r\nconst characteristics = ref({});\r\n\r\nconst selectedCategory = ref(null); // Для выбранной категории\r\n\r\n// Загрузка данных\r\nonMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n});\r\n\r\n// Загрузка категорий\r\nconst loadCategories = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке категорий');\r\n        }\r\n        const data = await response.json();\r\n        categories.value = data;\r\n        extractBrands(data);\r\n        extractCharacteristics(data);\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n};\r\n\r\n// Загрузка товаров\r\nconst loadProducts = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке товаров');\r\n        }\r\n        const data = await response.json();\r\n        products.value = data;\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n};\r\n\r\n// Извлечение брендов\r\nconst extractBrands = (categoriesData) => {\r\n    const allBrands = new Set();\r\n    categoriesData.forEach(category => {\r\n        if (category.brand) {\r\n            allBrands.add(category.brand);\r\n        }\r\n    });\r\n    brands.value = Array.from(allBrands);\r\n};\r\n\r\n// Извлечение характеристик\r\nconst extractCharacteristics = (categoriesData) => {\r\n    const characteristicsData = {};\r\n    categoriesData.forEach(item => {\r\n        if (item.characteristics && Array.isArray(item.characteristics)) {\r\n            item.characteristics.forEach(characteristic => {\r\n                const charName = characteristic.characteristic;\r\n                const charValue = characteristic.value;\r\n\r\n                if (!characteristicsData[charName]) {\r\n                    characteristicsData[charName] = new Set();\r\n                }\r\n                characteristicsData[charName].add(charValue);\r\n            });\r\n        }\r\n    });\r\n\r\n    for (const charName in characteristicsData) {\r\n        characteristicsData[charName] = Array.from(characteristicsData[charName]);\r\n    }\r\n    characteristics.value = { ...characteristicsData };\r\n};\r\n\r\n// Фильтрация товаров\r\nconst filteredProducts = computed(() => {\r\n    return products.value.filter(product => {\r\n        // Фильтрация по выбранной категории\r\n        const matchesCategory = selectedCategory.value ? product.categoryId === selectedCategory.value.id : true;\r\n\r\n        // Фильтрация по бренду\r\n        const matchesBrand = selectedBrands.value.length === 0 || selectedBrands.value.includes(product.brand);\r\n\r\n        // Фильтрация по характеристикам\r\n        const matchesCharacteristics = Object.keys(selectedCharacteristics.value).every(characteristic => {\r\n            if (!selectedCharacteristics.value[characteristic]) return true;\r\n            const productValues = product.characteristics\r\n                ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value)\r\n                : [];\r\n            return selectedCharacteristics.value[characteristic].every(value => productValues.includes(value));\r\n        });\r\n\r\n        return matchesCategory && matchesBrand && matchesCharacteristics;\r\n    });\r\n});\r\n\r\n// Выбор категории\r\nconst selectCategory = (category) => {\r\n    selectedCategory.value = category;\r\n};\r\n\r\n// Обработчик изменения бренда\r\nconst handleBrandChange = (brand) => {\r\n    const index = selectedBrands.value.indexOf(brand);\r\n    if (index === -1) {\r\n        selectedBrands.value.push(brand);\r\n    } else {\r\n        selectedBrands.value.splice(index, 1);\r\n    }\r\n};\r\n\r\n// Обработчик изменения характеристики\r\nconst handleCharacteristicChange = (characteristic, value) => {\r\n    if (!Array.isArray(selectedCharacteristics.value[characteristic])) {\r\n        selectedCharacteristics.value[characteristic] = [];\r\n    }\r\n\r\n    const index = selectedCharacteristics.value[characteristic].indexOf(value);\r\n    if (index === -1) {\r\n        selectedCharacteristics.value[characteristic].push(value);\r\n    } else {\r\n        selectedCharacteristics.value[characteristic].splice(index, 1);\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.category-menu {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.category-menu ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.category-menu li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    background-color: #f0f0f0;\r\n    margin: 5px 0;\r\n}\r\n\r\n.category-menu li:hover {\r\n    background-color: #e0e0e0;\r\n}\r\n\r\n.brand-filter,\r\n.characteristic-filter {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.brand-checkbox,\r\n.characteristic-filter div {\r\n    margin: 5px 0;\r\n}\r\n\r\n.product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.product-list li {\r\n    margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}