{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"all\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"all_block\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"description\"\n};\nconst _hoisted_7 = {\n  class: \"price\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"container\",\n      key: product.id\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"header-icons_like\", {\n        liked: $setup.isLiked(product)\n      }]),\n      onClick: $event => $setup.toggleLike(product)\n    }, [_createElementVNode(\"img\", {\n      src: $setup.isLiked(product) ? require('@/assets/redLike.png') : require('@/assets/Like.png'),\n      width: \"32\",\n      height: \"32\",\n      alt: \"Like\"\n    }, null, 8 /* PROPS */, _hoisted_3), _createCommentVNode(\" <img src=\\\"@/assets/Like.png\\\" width=\\\"32\\\" height=\\\"32\\\" alt=\\\"\\\"> \")], 10 /* CLASS, PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n      src: `${$props.apiUrl}/${product.images[0]}`,\n      alt: \"\",\n      width: \"160\",\n      height: \"160\"\n    }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(product.price), 1 /* TEXT */), _createVNode($setup[\"ShowButton\"], {\n      backgroundColor: \"#000\",\n      titleColor: \"#fff\",\n      buttonTitle: \"Buy Now\",\n      onClick: $event => $setup.addToCart(product)\n    }, null, 8 /* PROPS */, [\"onClick\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","products","product","key","id","_createElementVNode","_normalizeClass","liked","$setup","isLiked","onClick","$event","toggleLike","src","require","width","height","alt","_hoisted_3","_createCommentVNode","_hoisted_2","_hoisted_4","apiUrl","images","_hoisted_5","_hoisted_6","_toDisplayString","name","_hoisted_7","price","_createVNode","backgroundColor","titleColor","buttonTitle","addToCart"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Products\\ProductCart.vue"],"sourcesContent":["<template>\r\n    <div class=\"all\">\r\n        <div class=\"container\" v-for=\"product in products\" :key=\"product.id\">\r\n            <div class=\"header-icons_like\" @click=\"toggleLike(product)\" :class=\"{ liked: isLiked(product) }\">\r\n\r\n                <img :src=\"isLiked(product) ? require('@/assets/redLike.png') : require('@/assets/Like.png')\" width=\"32\"\r\n                    height=\"32\" alt=\"Like\">\r\n                <!-- <img src=\"@/assets/Like.png\" width=\"32\" height=\"32\" alt=\"\"> -->\r\n            </div>\r\n\r\n            <div class=\"all_block\">\r\n                <img :src=\"`${apiUrl}/${product.images[0]}`\" alt=\"\" width=\"160\" height=\"160\">\r\n                <p class=\"description\">{{ product.name }}</p>\r\n                <p class=\"price\">{{ product.price }}</p>\r\n\r\n                <ShowButton backgroundColor=\"#000\" titleColor=\"#fff\" buttonTitle=\"Buy Now\"\r\n                    @click=\"addToCart(product)\" />\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n<script setup>\r\n\r\nimport { defineProps } from 'vue';\r\nimport ShowButton from '../Buttons/ShowButton.vue';\r\nimport { useStore } from 'vuex'; // Используем store\r\n\r\n\r\n\r\nconst props = defineProps({\r\n    products: {\r\n        type: Object,\r\n        required: true\r\n    },\r\n    apiUrl: {\r\n        type: String,\r\n        required: true\r\n    }\r\n});\r\n\r\nconst isLiked = (product) => {\r\n    return store.state.likedProducts.some(item => item.id === product.id);\r\n};\r\n\r\n// Переключение товара между понравившимися и обычным состоянием\r\nconst toggleLike = (product) => {\r\n    store.commit('toggleLike', product);\r\n};\r\n\r\n\r\nconst store = useStore(); // Инициализация store\r\n\r\nlet isAddingToCart = false;\r\n\r\nconst addToCart = (product) => {\r\n    if (isAddingToCart) return; // Блокирует повторные вызовы\r\n    isAddingToCart = true;\r\n\r\n    store.commit('addToCart', product);\r\n\r\n    // Сбрасываем флаг после небольшой задержки\r\n    setTimeout(() => {\r\n        isAddingToCart = false;\r\n    }, 100);\r\n};\r\nconsole.log(props)\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.all {\r\n    width: 1120px;\r\n    display: flex;\r\n    gap: 10px;\r\n    margin: 0 auto;\r\n    padding: 20px 0;\r\n}\r\n\r\n.container {\r\n    width: 2;\r\n    min-width: 200px;\r\n    padding: 24px 16px;\r\n    gap: 16px;\r\n    border-radius: 9px;\r\n    background: #F6F6F6;\r\n    display: block;\r\n}\r\n\r\n.header-icons_like {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding: 8px;\r\n    cursor: pointer;\r\n}\r\n\r\n.all_block {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 8px;\r\n}\r\n\r\np.description {\r\n    font-family: ABeeZee;\r\n    font-size: 16px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    padding: 10px 0;\r\n}\r\n\r\np.price {\r\n    font-family: Abel;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    letter-spacing: 0.03em;\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.liked {\r\n    filter: grayscale(0) brightness(1.5);\r\n    /* Добавьте стиль для изменения цвета значка */\r\n}\r\n</style>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAK;mBADpB;mBAAA;;EAUiBA,KAAK,EAAC;AAAW;mBAVlC;;EAYmBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAO;;uBAZ5BC,mBAAA,CAmBM,OAnBNC,UAmBM,I,kBAlBFD,mBAAA,CAiBME,SAAA,QAnBdC,WAAA,CAEiDC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAArCN,mBAAA,CAiBM;MAjBDD,KAAK,EAAC,WAAW;MAA8BQ,GAAG,EAAED,OAAO,CAACE;QAC7DC,mBAAA,CAKM;MALDV,KAAK,EAHtBW,eAAA,EAGuB,mBAAmB;QAAAC,KAAA,EAA+CC,MAAA,CAAAC,OAAO,CAACP,OAAO;MAAA;MAA5DQ,OAAK,EAAAC,MAAA,IAAEH,MAAA,CAAAI,UAAU,CAACV,OAAO;QAErDG,mBAAA,CAC2B;MADrBQ,GAAG,EAAEL,MAAA,CAAAC,OAAO,CAACP,OAAO,IAAIY,OAAO,2BAA2BA,OAAO;MAAuBC,KAAK,EAAC,IAAI;MACpGC,MAAM,EAAC,IAAI;MAACC,GAAG,EAAC;4BANpCC,UAAA,GAOgBC,mBAAA,yEAAoE,C,yBAPpFC,UAAA,GAUYf,mBAAA,CAQM,OARNgB,UAQM,GAPFhB,mBAAA,CAA6E;MAAvEQ,GAAG,KAAKb,MAAA,CAAAsB,MAAM,IAAIpB,OAAO,CAACqB,MAAM;MAAON,GAAG,EAAC,EAAE;MAACF,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;4BAXvFQ,UAAA,GAYgBnB,mBAAA,CAA6C,KAA7CoB,UAA6C,EAAAC,gBAAA,CAAnBxB,OAAO,CAACyB,IAAI,kBACtCtB,mBAAA,CAAwC,KAAxCuB,UAAwC,EAAAF,gBAAA,CAApBxB,OAAO,CAAC2B,KAAK,kBAEjCC,YAAA,CACkCtB,MAAA;MADtBuB,eAAe,EAAC,MAAM;MAACC,UAAU,EAAC,MAAM;MAACC,WAAW,EAAC,SAAS;MACrEvB,OAAK,EAAAC,MAAA,IAAEH,MAAA,CAAA0B,SAAS,CAAChC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}