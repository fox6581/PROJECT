{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { onMounted, ref, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport ShowButton from '../Buttons/ShowButton.vue';\nimport { useStore } from 'vuex'; // Используем store\nimport ProductCart from './ProductCart.vue'; // Компонент для отображения сопутствующих товаров\nconst apiUrl = 'http://localhost:1452'; // Ваша базовая ссылка для изображений\n\nexport default {\n  __name: 'ProductDetails',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const products = ref([]);\n    const route = useRoute();\n    const router = useRouter();\n    const product = ref({});\n    const relatedProducts = ref([]);\n    const productImageUrl = ref('');\n    const store = useStore(); // Инициализация store\n    let isAddingToCart = false;\n    onMounted(async () => {\n      const productId = route.params.id;\n\n      // Получаем данные о продукте\n      const productResponse = await fetch(`${apiUrl}/api/products/${productId}`);\n      const productData = await productResponse.json();\n      product.value = productData;\n      productImageUrl.value = `${apiUrl}/${productData.images[0]}`;\n\n      // Получаем сопутствующие товары\n      const relatedResponse = await fetch(`${apiUrl}/api/products?category=${productData.category}&excludeId=${productId}`);\n      const relatedData = await relatedResponse.json();\n\n      // Ограничиваем количество сопутствующих товаров до 4\n      relatedProducts.value = relatedData.slice(0, 4);\n    });\n\n    // Функция для перехода к продукту\n    const navigateToProduct = productId => {\n      router.push(`/products/${productId}`);\n    };\n\n    // Функция добавления товара в корзину\n    const addToCart = product => {\n      if (isAddingToCart) return; // Блокирует повторные вызовы\n      isAddingToCart = true;\n      store.commit('addToCart', product);\n\n      // Сбрасываем флаг после небольшой задержки\n      setTimeout(() => {\n        isAddingToCart = false;\n      }, 100);\n    };\n\n    // Храним продукты со скидкой 50% и более\n    const discountedProducts = computed(() => {\n      return products.value.filter(product => {\n        if (product.discount_price && product.price) {\n          const discount = (product.price - product.discount_price) / product.price * 100;\n          return discount >= 20; // Скидка 50% или более\n        }\n        return false; // Нет скидки или цена не указана\n      });\n    });\n    const __returned__ = {\n      products,\n      route,\n      router,\n      product,\n      relatedProducts,\n      productImageUrl,\n      apiUrl,\n      store,\n      get isAddingToCart() {\n        return isAddingToCart;\n      },\n      set isAddingToCart(v) {\n        isAddingToCart = v;\n      },\n      navigateToProduct,\n      addToCart,\n      discountedProducts,\n      onMounted,\n      ref,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      ShowButton,\n      get useStore() {\n        return useStore;\n      },\n      ProductCart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","computed","useRoute","useRouter","ShowButton","useStore","ProductCart","apiUrl","products","route","router","product","relatedProducts","productImageUrl","store","isAddingToCart","productId","params","id","productResponse","fetch","productData","json","value","images","relatedResponse","category","relatedData","slice","navigateToProduct","push","addToCart","commit","setTimeout","discountedProducts","filter","discount_price","price","discount"],"sources":["C:/shopvue/front-vue3/src/components/Products/ProductDetails.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Детали продукта</h1>\r\n\r\n        <p> {{ product.name }}</p>\r\n\r\n        <!-- Цена товара -->\r\n        <p v-if=\"product.discount_price\">\r\n            <strong>Цена:</strong>\r\n            <!-- Старая цена -->\r\n            <span class=\"old-price\">{{ product.price }} руб.</span>\r\n            <!-- Цена со скидкой -->\r\n            <span class=\"discount-price\">{{ product.discount_price }} руб.</span>\r\n        </p>\r\n        <p v-else>\r\n            <strong>Цена:</strong> {{ product.price }} руб.\r\n        </p>\r\n\r\n        <img :src=\"productImageUrl\" alt=\"Product image\" />\r\n\r\n        <div v-if=\"product.characteristics && product.characteristics.length > 0\">\r\n            <h2>Характеристики</h2>\r\n            <ul>\r\n                <li v-for=\"(char, index) in product.characteristics\" :key=\"index\">\r\n                    <strong>{{ char.characteristic }}:</strong>\r\n                    {{ char.value }} {{ char.unit_type }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <!-- Кнопка добавления в корзину -->\r\n        <ShowButton\r\n            backgroundColor=\"#000\"\r\n            titleColor=\"#fff\"\r\n            buttonTitle=\"Buy Now\"\r\n            @click=\"addToCart(product)\"\r\n        />\r\n   <ProductCart :product=\"discountedProducts\" :apiUrl=\"apiUrl\" />\r\n\r\n   \r\n        <div v-if=\"relatedProducts.length > 0\">\r\n            <h2>Сопутствующие товары</h2>\r\n            <div class=\"related-products\">\r\n                <div v-for=\"(relatedProduct) in relatedProducts\" :key=\"relatedProduct.id\" class=\"related-product\" @click=\"navigateToProduct(relatedProduct.id)\">\r\n                    <!-- Передаем product, а не relatedProduct -->\r\n                 \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"product.discount_price\">\r\n            <p><strong>Цена со скидкой:</strong> {{ product.discount_price }} руб.</p>\r\n        </div>\r\n\r\n        <p><strong>Гарантия:</strong> {{ product.guarantee }} месяцев</p>\r\n        <p><strong>Рейтинг:</strong> {{ product.rating }} ({{ product.count_review }} отзывов)</p>\r\n        <p><strong>Страна производства:</strong> {{ product.country }}</p>\r\n        <p><strong>Цвет:</strong> {{ product.color }}</p>\r\n        <p><strong>Бренд:</strong> {{ product.brand }}</p>\r\n        <p><strong>Категория:</strong> {{ product.category }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref, computed} from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nimport ShowButton from '../Buttons/ShowButton.vue';\r\nimport { useStore } from 'vuex'; // Используем store\r\nimport ProductCart from './ProductCart.vue'; // Компонент для отображения сопутствующих товаров\r\nconst products = ref([]);\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst product = ref({});\r\nconst relatedProducts = ref([]);\r\nconst productImageUrl = ref('');\r\nconst apiUrl = 'http://localhost:1452';  // Ваша базовая ссылка для изображений\r\n\r\nconst store = useStore(); // Инициализация store\r\nlet isAddingToCart = false;\r\n\r\nonMounted(async () => {\r\n    const productId = route.params.id;\r\n\r\n    // Получаем данные о продукте\r\n    const productResponse = await fetch(`${apiUrl}/api/products/${productId}`);\r\n    const productData = await productResponse.json();\r\n    product.value = productData;\r\n    productImageUrl.value = `${apiUrl}/${productData.images[0]}`;\r\n\r\n    // Получаем сопутствующие товары\r\n    const relatedResponse = await fetch(`${apiUrl}/api/products?category=${productData.category}&excludeId=${productId}`);\r\n    const relatedData = await relatedResponse.json();\r\n\r\n    // Ограничиваем количество сопутствующих товаров до 4\r\n    relatedProducts.value = relatedData.slice(0, 4);\r\n});\r\n\r\n// Функция для перехода к продукту\r\nconst navigateToProduct = (productId) => {\r\n    router.push(`/products/${productId}`);\r\n};\r\n\r\n// Функция добавления товара в корзину\r\nconst addToCart = (product) => {\r\n    if (isAddingToCart) return; // Блокирует повторные вызовы\r\n    isAddingToCart = true;\r\n\r\n    store.commit('addToCart', product);\r\n\r\n    // Сбрасываем флаг после небольшой задержки\r\n    setTimeout(() => {\r\n        isAddingToCart = false;\r\n    }, 100);\r\n};\r\n\r\n  // Храним продукты со скидкой 50% и более\r\n  const discountedProducts = computed(() => {\r\n    return products.value.filter(product => {\r\n      if (product.discount_price && product.price) {\r\n        const discount = (product.price - product.discount_price) / product.price * 100;\r\n        return discount >= 20;  // Скидка 50% или более\r\n      }\r\n      return false;  // Нет скидки или цена не указана\r\n    });\r\n  });\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n    font-size: 2em;\r\n    margin-bottom: 10px;\r\n}\r\n\r\np {\r\n    font-size: 1.1em;\r\n    margin: 5px 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\nul li {\r\n    font-size: 1em;\r\n    margin-bottom: 5px;\r\n}\r\n\r\nstrong {\r\n    font-weight: bold;\r\n}\r\n\r\n.related-products {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-top: 30px;\r\n}\r\n\r\n.related-product {\r\n    text-align: center;\r\n    cursor: pointer;\r\n}\r\n\r\n.related-product img {\r\n    border-radius: 5px;\r\n}\r\n\r\n.description {\r\n    font-size: 1em;\r\n    margin-top: 5px;\r\n}\r\n\r\n.price {\r\n    font-size: 1.1em;\r\n    font-weight: bold;\r\n    margin-top: 5px;\r\n}\r\n\r\n.old-price {\r\n    font-family: ABeeZee;\r\n    font-size: 32px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 48px;\r\n    letter-spacing: 0.03em;\r\n    text-align: left;\r\n    color: #000;\r\n}\r\n\r\n.discount-price {\r\n    font-family: Abel;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    line-height: 32px;\r\n    letter-spacing: 0.03em;\r\n    text-align: left;\r\n    color: #A0A0A0;\r\n    text-decoration: line-through;\r\n}\r\n</style>\r\n"],"mappings":";;;AAgEA,SAASA,SAAS,EAAEC,GAAG,EAAEC,QAAQ,QAAO,KAAK;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAEhD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,SAASC,QAAQ,QAAQ,MAAM,CAAC,CAAC;AACjC,OAAOC,WAAW,MAAM,mBAAmB,CAAC,CAAC;AAO7C,MAAMC,MAAM,GAAG,uBAAuB,CAAC,CAAE;;;;;;;;IANzC,MAAMC,QAAQ,GAAGR,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMS,KAAK,GAAGP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,MAAM,GAAGP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,OAAO,GAAGX,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,MAAMY,eAAe,GAAGZ,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMa,eAAe,GAAGb,GAAG,CAAC,EAAE,CAAC;IAG/B,MAAMc,KAAK,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAIU,cAAc,GAAG,KAAK;IAE1BhB,SAAS,CAAC,YAAY;MAClB,MAAMiB,SAAS,GAAGP,KAAK,CAACQ,MAAM,CAACC,EAAE;;MAEjC;MACA,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAC,GAAGb,MAAM,iBAAiBS,SAAS,EAAE,CAAC;MAC1E,MAAMK,WAAW,GAAG,MAAMF,eAAe,CAACG,IAAI,CAAC,CAAC;MAChDX,OAAO,CAACY,KAAK,GAAGF,WAAW;MAC3BR,eAAe,CAACU,KAAK,GAAG,GAAGhB,MAAM,IAAIc,WAAW,CAACG,MAAM,CAAC,CAAC,CAAC,EAAE;;MAE5D;MACA,MAAMC,eAAe,GAAG,MAAML,KAAK,CAAC,GAAGb,MAAM,0BAA0Bc,WAAW,CAACK,QAAQ,cAAcV,SAAS,EAAE,CAAC;MACrH,MAAMW,WAAW,GAAG,MAAMF,eAAe,CAACH,IAAI,CAAC,CAAC;;MAEhD;MACAV,eAAe,CAACW,KAAK,GAAGI,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC,CAAC;;IAEF;IACA,MAAMC,iBAAiB,GAAIb,SAAS,IAAK;MACrCN,MAAM,CAACoB,IAAI,CAAC,aAAad,SAAS,EAAE,CAAC;IACzC,CAAC;;IAED;IACA,MAAMe,SAAS,GAAIpB,OAAO,IAAK;MAC3B,IAAII,cAAc,EAAE,OAAO,CAAC;MAC5BA,cAAc,GAAG,IAAI;MAErBD,KAAK,CAACkB,MAAM,CAAC,WAAW,EAAErB,OAAO,CAAC;;MAElC;MACAsB,UAAU,CAAC,MAAM;QACblB,cAAc,GAAG,KAAK;MAC1B,CAAC,EAAE,GAAG,CAAC;IACX,CAAC;;IAEC;IACA,MAAMmB,kBAAkB,GAAGjC,QAAQ,CAAC,MAAM;MACxC,OAAOO,QAAQ,CAACe,KAAK,CAACY,MAAM,CAACxB,OAAO,IAAI;QACtC,IAAIA,OAAO,CAACyB,cAAc,IAAIzB,OAAO,CAAC0B,KAAK,EAAE;UAC3C,MAAMC,QAAQ,GAAG,CAAC3B,OAAO,CAAC0B,KAAK,GAAG1B,OAAO,CAACyB,cAAc,IAAIzB,OAAO,CAAC0B,KAAK,GAAG,GAAG;UAC/E,OAAOC,QAAQ,IAAI,EAAE,CAAC,CAAE;QAC1B;QACA,OAAO,KAAK,CAAC,CAAE;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}