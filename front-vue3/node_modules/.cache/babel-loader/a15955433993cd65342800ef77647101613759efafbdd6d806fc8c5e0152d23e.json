{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_2 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Категории\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: category,\n      value: category,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedCategories = $event),\n      onChange: $event => _ctx.$emit('change', category)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1), [[_vModelCheckbox, _ctx.selectedCategories]]), _createElementVNode(\"label\", {\n      for: category\n    }, _toDisplayString(category), 9 /* TEXT, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$setup","categories","category","key","class","type","id","value","_cache","$event","_ctx","selectedCategories","onChange","$emit","_hoisted_1","for","_toDisplayString","_hoisted_2"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Filter\\CategoryFilter.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Категории</h3>\r\n      <div v-for=\"category in categories\" :key=\"category\" class=\"brand-checkbox\">\r\n        <input type=\"checkbox\" :id=\"category\" :value=\"category\" v-model=\"selectedCategories\" @change=\"$emit('change', category)\" />\r\n        <label :for=\"category\">{{ category }}</label>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue';\r\n  const categories = ref([]);\r\n  </script>\r\n  "],"mappings":";mBAAA;mBAAA;;uBACIA,mBAAA,CAMM,c,0BALJC,mBAAA,CAAkB,YAAd,WAAS,uB,kBACbD,mBAAA,CAGME,SAAA,QANZC,WAAA,CAG8BC,MAAA,CAAAC,UAAU,EAAtBC,QAAQ;yBAApBN,mBAAA,CAGM;MAH+BO,GAAG,EAAED,QAAQ;MAAEE,KAAK,EAAC;wBACxDP,mBAAA,CAA2H;MAApHQ,IAAI,EAAC,UAAU;MAAEC,EAAE,EAAEJ,QAAQ;MAAGK,KAAK,EAAEL,QAAQ;MAJ9D,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIyEC,IAAA,CAAAC,kBAAkB,GAAAF,MAAA;MAAGG,QAAM,EAAAH,MAAA,IAAEC,IAAA,CAAAG,KAAK,WAAWX,QAAQ;6CAJ9HY,UAAA,I,kBAIyEJ,IAAA,CAAAC,kBAAkB,E,GACnFd,mBAAA,CAA6C;MAArCkB,GAAG,EAAEb;IAAQ,GAAAc,gBAAA,CAAKd,QAAQ,wBAL1Ce,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}