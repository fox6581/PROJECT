{"ast":null,"code":"import { ref } from 'vue';\nimport ShowButton from '../Buttons/ShowButton.vue';\nimport { useStore } from 'vuex'; // Используем store\nimport ProductCart from './ProductCart.vue';\nconst apiUrl = 'http://localhost:1452';\nexport default {\n  __name: 'ProductDetails',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const product = ref({});\n    const relatedProducts = ref([]); // Сопутствующие товары\n    const productImageUrl = ref('');\n    const store = useStore();\n    let isAddingToCart = false;\n\n    // onMounted(async () => {\n    //     const productId = params.id;\n\n    //     // Получаем данные о продукте\n    //     const productResponse = await fetch(`${apiUrl}/api/products/${productId}`);\n    //     const productData = await productResponse.json();\n    //     product.value = productData;\n    //     productImageUrl.value = `${apiUrl}/${productData.images[0]}`;\n\n    //     // Получаем сопутствующие товары\n    //     const relatedResponse = await fetch(`${apiUrl}/api/products?category=${productData.category}&excludeId=${productId}`);\n    //     const relatedData = await relatedResponse.json();\n    //     relatedProducts.value = relatedData.slice(0, 4);\n    //     console.log('relatedProducts.value', relatedProducts.value)\n    // });\n\n    // Функция для перехода к продукту\n\n    // Функция добавления товара в корзину\n    const addToCart = product => {\n      if (isAddingToCart) return;\n      isAddingToCart = true;\n      store.commit('addToCart', product);\n      setTimeout(() => {\n        isAddingToCart = false;\n      }, 100);\n    };\n    const __returned__ = {\n      product,\n      relatedProducts,\n      productImageUrl,\n      apiUrl,\n      store,\n      get isAddingToCart() {\n        return isAddingToCart;\n      },\n      set isAddingToCart(v) {\n        isAddingToCart = v;\n      },\n      addToCart,\n      ref,\n      ShowButton,\n      get useStore() {\n        return useStore;\n      },\n      ProductCart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","ShowButton","useStore","ProductCart","apiUrl","product","relatedProducts","productImageUrl","store","isAddingToCart","addToCart","commit","setTimeout"],"sources":["C:/shopvue/front-vue3/src/components/Products/ProductDetails.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Детали продукта</h1>\r\n\r\n        <p>{{ product.name }}</p>\r\n\r\n        <p v-if=\"product.discount_price\">\r\n            <strong>Цена:</strong>\r\n            <span class=\"old-price\">{{ product.price }} руб.</span>\r\n            <span class=\"discount-price\">{{ product.discount_price }} руб.</span>\r\n        </p>\r\n        <p v-else>\r\n            <strong>Цена:</strong> {{ product.price }} руб.\r\n        </p>\r\n\r\n        <img :src=\"productImageUrl\" alt=\"Product image\" />\r\n\r\n        <div v-if=\"product.characteristics && product.characteristics.length > 0\">\r\n            <h2>Характеристики</h2>\r\n            <ul>\r\n                <li v-for=\"(char, index) in product.characteristics\" :key=\"index\">\r\n                    <strong>{{ char.characteristic }}:</strong>\r\n                    {{ char.value }} {{ char.unit_type }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <ShowButton backgroundColor=\"#000\" titleColor=\"#fff\" buttonTitle=\"Buy Now\" @click=\"addToCart(product)\" />\r\n\r\n\r\n        <!-- <div v-if=\"relatedProducts.length > 0\">\r\n            <h2>Сопутствующие товары</h2>\r\n            <div class=\"related-products\">\r\n                <div v-for=\"relatedProduct in relatedProducts\" :key=\"relatedProduct.id\" class=\"related-product\"\r\n                    @click=\"navigateToProduct(relatedProduct.id)\">\r\n                    <img :src=\"`${apiUrl}/${relatedProduct.image}`\" alt=\"related product\" />\r\n                    <p>{{ relatedProduct.name }}</p>\r\n                </div>\r\n            </div>\r\n        </div> -->\r\n\r\n        <p><strong>Гарантия:</strong> {{ product.guarantee }} месяцев</p>\r\n        <p><strong>Рейтинг:</strong> {{ product.rating }} ({{ product.count_review }} отзывов)</p>\r\n        <p><strong>Страна производства:</strong> {{ product.country }}</p>\r\n        <p><strong>Цвет:</strong> {{ product.color }}</p>\r\n        <p><strong>Бренд:</strong> {{ product.brand }}</p>\r\n        <p><strong>Категория:</strong> {{ product.category }}</p>\r\n    </div>\r\n<p>Related Products</p>\r\n    <div v-if=\"relatedProducts.length > 0\">\r\n        <ProductCart :products=\"relatedProducts\" :apiUrl=\"apiUrl\"  />\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {  ref } from 'vue';\r\n\r\n\r\nimport ShowButton from '../Buttons/ShowButton.vue';\r\nimport { useStore } from 'vuex'; // Используем store\r\nimport ProductCart from './ProductCart.vue';\r\n\r\n\r\n\r\nconst product = ref({});\r\nconst relatedProducts = ref([]); // Сопутствующие товары\r\nconst productImageUrl = ref('');\r\nconst apiUrl = 'http://localhost:1452';\r\n\r\nconst store = useStore();\r\nlet isAddingToCart = false;\r\n\r\n// onMounted(async () => {\r\n//     const productId = params.id;\r\n\r\n//     // Получаем данные о продукте\r\n//     const productResponse = await fetch(`${apiUrl}/api/products/${productId}`);\r\n//     const productData = await productResponse.json();\r\n//     product.value = productData;\r\n//     productImageUrl.value = `${apiUrl}/${productData.images[0]}`;\r\n\r\n//     // Получаем сопутствующие товары\r\n//     const relatedResponse = await fetch(`${apiUrl}/api/products?category=${productData.category}&excludeId=${productId}`);\r\n//     const relatedData = await relatedResponse.json();\r\n//     relatedProducts.value = relatedData.slice(0, 4);\r\n//     console.log('relatedProducts.value', relatedProducts.value)\r\n// });\r\n\r\n// Функция для перехода к продукту\r\n\r\n\r\n// Функция добавления товара в корзину\r\nconst addToCart = (product) => {\r\n    if (isAddingToCart) return;\r\n    isAddingToCart = true;\r\n\r\n    store.commit('addToCart', product);\r\n\r\n    setTimeout(() => {\r\n        isAddingToCart = false;\r\n    }, 100);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Добавьте стили */\r\n.related-products {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-top: 30px;\r\n}\r\n\r\n.related-product {\r\n    text-align: center;\r\n    cursor: pointer;\r\n}\r\n\r\n.related-product img {\r\n    border-radius: 5px;\r\n}\r\n\r\n.related-product p {\r\n    font-size: 1.2em;\r\n}\r\n</style>"],"mappings":"AAwDA,SAAUA,GAAG,QAAQ,KAAK;AAG1B,OAAOC,UAAU,MAAM,2BAA2B;AAClD,SAASC,QAAQ,QAAQ,MAAM,CAAC,CAAC;AACjC,OAAOC,WAAW,MAAM,mBAAmB;AAO3C,MAAMC,MAAM,GAAG,uBAAuB;;;;;;;IAHtC,MAAMC,OAAO,GAAGL,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,MAAMM,eAAe,GAAGN,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,MAAMO,eAAe,GAAGP,GAAG,CAAC,EAAE,CAAC;IAG/B,MAAMQ,KAAK,GAAGN,QAAQ,CAAC,CAAC;IACxB,IAAIO,cAAc,GAAG,KAAK;;IAE1B;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAGA;IACA,MAAMC,SAAS,GAAIL,OAAO,IAAK;MAC3B,IAAII,cAAc,EAAE;MACpBA,cAAc,GAAG,IAAI;MAErBD,KAAK,CAACG,MAAM,CAAC,WAAW,EAAEN,OAAO,CAAC;MAElCO,UAAU,CAAC,MAAM;QACbH,cAAc,GAAG,KAAK;MAC1B,CAAC,EAAE,GAAG,CAAC;IACX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}