{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect } from \"vue\";\nimport _imports_0 from '@/assets/Arrow.png';\nimport _imports_1 from '@/assets/Filters.png';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"message-box\"\n};\nconst _hoisted_2 = {\n  class: \"message-box_filter\"\n};\nconst _hoisted_3 = {\n  class: \"mobile-filter\"\n};\nconst _hoisted_4 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_5 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_6 = [\"for\"];\nconst _hoisted_7 = {\n  class: \"brands\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"category-checkbox\"\n};\nconst _hoisted_9 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_10 = [\"for\"];\nconst _hoisted_11 = {\n  class: \"characteristic-filter\"\n};\nconst _hoisted_12 = [\"id\", \"value\", \"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_13 = [\"for\"];\nconst _hoisted_14 = {\n  class: \"myall\"\n};\nconst _hoisted_15 = {\n  class: \"menu_left\"\n};\nconst _hoisted_16 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_17 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_18 = [\"for\"];\nconst _hoisted_19 = {\n  class: \"brands\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"category-checkbox\"\n};\nconst _hoisted_21 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_22 = [\"for\"];\nconst _hoisted_23 = {\n  class: \"characteristic-filter\"\n};\nconst _hoisted_24 = [\"id\", \"value\", \"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_25 = [\"for\"];\nconst _hoisted_26 = {\n  value: \"sortedP\"\n};\nconst _hoisted_27 = {\n  class: \"sorted\"\n};\nconst _hoisted_28 = {\n  class: \"mobile\"\n};\nconst _hoisted_29 = {\n  class: \"filter-container\"\n};\nconst _hoisted_30 = {\n  class: \"all_product\"\n};\nconst _hoisted_31 = {\n  class: \"pagination\"\n};\nconst _hoisted_32 = [\"disabled\"];\nconst _hoisted_33 = {\n  key: 1\n};\nconst _hoisted_34 = [\"onClick\"];\nconst _hoisted_35 = {\n  key: 2\n};\nconst _hoisted_36 = [\"disabled\"];\nexport function render(_ctx, _cache) {\n  const _component_MenuPrice = _resolveComponent(\"MenuPrice\");\n  const _component_HeaderSearch = _resolveComponent(\"HeaderSearch\");\n  const _component_ProductCart = _resolveComponent(\"ProductCart\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_ctx.showMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    width: \"24\",\n    height: \"24\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggleMessage && _ctx.toggleMessage(...args))\n  }), _cache[13] || (_cache[13] = _createElementVNode(\"p\", null, \" Filters\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_MenuPrice, {\n    \"onUpdate:filter\": _ctx.updateFilter,\n    initialMinValue: 100,\n    initialMaxValue: 1000\n  }, null, 8 /* PROPS */, [\"onUpdate:filter\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, [_createCommentVNode(\" Отображение товара \"), _createElementVNode(\"p\", null, _toDisplayString(item.name) + \" - \" + _toDisplayString(item.price) + \" руб.\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Фильтр по брендам \"), _createElementVNode(\"div\", _hoisted_4, [_cache[14] || (_cache[14] = _createElementVNode(\"h3\", null, \"Brand\", -1 /* HOISTED */)), _cache[15] || (_cache[15] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _createVNode(_component_HeaderSearch, {\n    placeholder: \"Search\",\n    icon: _ctx.searchIcon,\n    onUpdateResults: _ctx.handleSearchResults\n  }, null, 8 /* PROPS */, [\"icon\", \"onUpdateResults\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      value: brand,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectedBrands = $event),\n      onChange: $event => _ctx.handleBrandChange(brand)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), [[_vModelCheckbox, _ctx.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, [_createElementVNode(\"p\", _hoisted_7, [_createTextVNode(_toDisplayString(brand) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(_ctx.totalProducts), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Фильтр по категориям \"), _createElementVNode(\"h2\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.toggleCategoryFilter && _ctx.toggleCategoryFilter(...args))\n  }, [_cache[16] || (_cache[16] = _createTextVNode(\" Категории \")), _createElementVNode(\"span\", {\n    class: _normalizeClass([{\n      'open': _ctx.isCategoryFilterOpen\n    }, \"arrow\"])\n  }, null, 2 /* CLASS */)]), _ctx.isCategoryFilterOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.categorys, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: category,\n      value: category,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.selectedCategorys = $event),\n      onChange: $event => _ctx.handleCategorysChange(category)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9), [[_vModelCheckbox, _ctx.selectedCategorys]]), _createElementVNode(\"label\", {\n      for: category\n    }, _toDisplayString(category), 9 /* TEXT, PROPS */, _hoisted_10)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Раскрывающееся меню для характеристик \"), _createElementVNode(\"div\", _hoisted_11, [_cache[18] || (_cache[18] = _createElementVNode(\"h2\", null, \"Уникальные характеристики\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"details\", null, [_createElementVNode(\"summary\", null, _toDisplayString(characteristic), 1 /* TEXT */), _cache[17] || (_cache[17] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value,\n        class: \"brand-checkbox\"\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: `${characteristic}-${value}`,\n        value: value,\n        \"onUpdate:modelValue\": $event => _ctx.selectedCharacteristics[characteristic] = $event,\n        onChange: $event => _ctx.handleCharacteristicChange(characteristic, value)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_12), [[_vModelCheckbox, _ctx.selectedCharacteristics[characteristic]]]), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_13)]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_MenuPrice, {\n    \"onUpdate:filter\": _ctx.updateFilter,\n    initialMinValue: 100,\n    initialMaxValue: 1000\n  }, null, 8 /* PROPS */, [\"onUpdate:filter\"]), _createCommentVNode(\" Фильтр по брендам \"), _createElementVNode(\"div\", _hoisted_16, [_cache[19] || (_cache[19] = _createElementVNode(\"h3\", null, \"Brand\", -1 /* HOISTED */)), _cache[20] || (_cache[20] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _createVNode(_component_HeaderSearch, {\n    placeholder: \"Search\",\n    icon: _ctx.searchIcon,\n    onUpdateResults: _ctx.handleSearchResults\n  }, null, 8 /* PROPS */, [\"icon\", \"onUpdateResults\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      value: brand,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.selectedBrands = $event),\n      onChange: $event => _ctx.handleBrandChange(brand)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_17), [[_vModelCheckbox, _ctx.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, [_createElementVNode(\"p\", _hoisted_19, [_createTextVNode(_toDisplayString(brand) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(_ctx.totalProducts), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_18)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Фильтр по категориям \"), _createElementVNode(\"h2\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.toggleCategoryFilter && _ctx.toggleCategoryFilter(...args))\n  }, [_cache[21] || (_cache[21] = _createTextVNode(\" Категории \")), _createElementVNode(\"span\", {\n    class: _normalizeClass([{\n      'open': _ctx.isCategoryFilterOpen\n    }, \"arrow\"])\n  }, null, 2 /* CLASS */)]), _ctx.isCategoryFilterOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.categorys, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: category,\n      value: category,\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.selectedCategorys = $event),\n      onChange: $event => _ctx.handleCategorysChange(category)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_21), [[_vModelCheckbox, _ctx.selectedCategorys]]), _createElementVNode(\"label\", {\n      for: category\n    }, _toDisplayString(category), 9 /* TEXT, PROPS */, _hoisted_22)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Раскрывающееся меню для характеристик \"), _createElementVNode(\"div\", _hoisted_23, [_cache[23] || (_cache[23] = _createElementVNode(\"h2\", null, \"Уникальные характеристики\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"details\", null, [_createElementVNode(\"summary\", null, _toDisplayString(characteristic), 1 /* TEXT */), _cache[22] || (_cache[22] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value,\n        class: \"brand-checkbox\"\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: `${characteristic}-${value}`,\n        value: value,\n        \"onUpdate:modelValue\": $event => _ctx.selectedCharacteristics[characteristic] = $event,\n        onChange: $event => _ctx.handleCharacteristicChange(characteristic, value)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_24), [[_vModelCheckbox, _ctx.selectedCharacteristics[characteristic]]]), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_25)]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"data\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", null, [_createElementVNode(\"h3\", null, [_cache[24] || (_cache[24] = _createTextVNode(\"Selected Products: \")), _createElementVNode(\"span\", null, _toDisplayString(_ctx.totalProducts), 1 /* TEXT */)])]), _createElementVNode(\"div\", null, [_createCommentVNode(\" <label for=\\\"sortBy\\\">Сортировать по:</label> \"), _withDirectives(_createElementVNode(\"select\", {\n    id: \"sortBy\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.sortOption = $event)\n  }, _cache[25] || (_cache[25] = [_createElementVNode(\"option\", {\n    value: \"rating\"\n  }, \"By rating\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"price\"\n  }, \"price\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"deliveryDate\"\n  }, \"Дата поставки\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.sortOption]]), _createCommentVNode(\" <button @click=\\\"toggleSortOrder\\\">Сортировать по {{ sortOrder === 'asc' ? 'возрастанию' : 'убыванию'\\r\\n                        }}</button> \")]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"img\", {\n    src: _imports_1,\n    alt: \"Filter Icon\",\n    class: \"filter-icon\",\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.toggleMessage && _ctx.toggleMessage(...args))\n  }), _cache[26] || (_cache[26] = _createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Фильтр\"\n  }, null, -1 /* HOISTED */))])])]), _createElementVNode(\"div\", _hoisted_30, [_createVNode(_component_ProductCart, {\n    products: _ctx.paginatedProducts,\n    apiUrl: _ctx.apiUrl\n  }, null, 8 /* PROPS */, [\"products\", \"apiUrl\"]), _createElementVNode(\"div\", _hoisted_31, [_createCommentVNode(\" Кнопка назад \"), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.prevPage && _ctx.prevPage(...args)),\n    disabled: _ctx.currentPage === 1\n  }, \"<\", 8 /* PROPS */, _hoisted_32), _createCommentVNode(\" Первая страница \"), _ctx.currentPage >= 3 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[10] || (_cache[10] = $event => _ctx.changePage(1))\n  }, \"1\")) : _createCommentVNode(\"v-if\", true), _ctx.currentPage >= 3 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_33, \"...\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Страницы около текущей \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.pagesToShow, page => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: page,\n      class: _normalizeClass({\n        active: _ctx.currentPage === page\n      }),\n      onClick: $event => _ctx.changePage(page)\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_34);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Троеточие, если необходимо \"), _ctx.currentPage < _ctx.totalPages - 3 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_35, \"...\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Последняя страница \"), _ctx.currentPage < _ctx.totalPages - 3 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 3,\n    onClick: _cache[11] || (_cache[11] = $event => _ctx.changePage(_ctx.totalPages))\n  }, _toDisplayString(_ctx.totalPages), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Текущая страница \"), _createCommentVNode(\" <span>Страница {{ currentPage }} из {{ totalPages }}</span> \"), _createCommentVNode(\" Кнопка вперед \"), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => _ctx.nextPage && _ctx.nextPage(...args)),\n    disabled: _ctx.currentPage === _ctx.totalPages\n  }, \">\", 8 /* PROPS */, _hoisted_36)])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","key","class","value","_createElementBlock","_Fragment","_ctx","showMessage","_hoisted_1","_createElementVNode","_hoisted_2","src","width","height","onClick","_cache","args","toggleMessage","_hoisted_3","_createVNode","_component_MenuPrice","updateFilter","initialMinValue","initialMaxValue","_renderList","filteredItems","item","id","_createCommentVNode","_toDisplayString","name","price","_hoisted_4","_component_HeaderSearch","placeholder","icon","searchIcon","onUpdateResults","handleSearchResults","brands","brand","type","$event","selectedBrands","onChange","handleBrandChange","_hoisted_5","for","_hoisted_7","_createTextVNode","totalProducts","_hoisted_6","toggleCategoryFilter","_normalizeClass","isCategoryFilterOpen","_hoisted_8","categorys","category","selectedCategorys","handleCategorysChange","_hoisted_9","_hoisted_10","_hoisted_11","characteristics","values","characteristic","selectedCharacteristics","handleCharacteristicChange","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_19","_hoisted_18","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","sortOption","_hoisted_28","_hoisted_29","alt","_hoisted_30","_component_ProductCart","products","paginatedProducts","apiUrl","_hoisted_31","prevPage","disabled","currentPage","_hoisted_32","changePage","_hoisted_33","pagesToShow","page","active","_hoisted_34","totalPages","_hoisted_35","nextPage","_hoisted_36"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"showMessage\" class=\"message-box\">\r\n     <div class=\"message-box_filter\">\r\n        <img src=\"@/assets/Arrow.png\" width=\"24\" height=\"24\" @click=\"toggleMessage\" />\r\n        <p>  Filters</p>\r\n</div>\r\n\r\n\r\n        <div class=\"mobile-filter\">\r\n            <MenuPrice @update:filter=\"updateFilter\" :initialMinValue=\"100\" :initialMaxValue=\"1000\"/>\r\n            <div v-for=\"item in filteredItems\" :key=\"item.id\">\r\n      <!-- Отображение товара -->\r\n      <p>{{ item.name }} - {{ item.price }} руб.</p>\r\n    </div>\r\n               <!-- Фильтр по брендам -->\r\n               <div class=\"brand-filter\">\r\n                <h3>Brand</h3>\r\n                <hr>\r\n                <HeaderSearch placeholder=\"Search\" :icon=\"searchIcon\" @updateResults=\"handleSearchResults\" />\r\n                <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n                    <input type=\"checkbox\" :id=\"brand\" :value=\"brand\" v-model=\"selectedBrands\"\r\n                        @change=\"handleBrandChange(brand)\" />\r\n                    <label :for=\"brand\">\r\n                        <p class=\"brands\">{{ brand }} <span>{{ totalProducts }}</span></p>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Фильтр по категориям -->\r\n            <h2 @click=\"toggleCategoryFilter\">\r\n                Категории\r\n                <span :class=\"{ 'open': isCategoryFilterOpen }\" class=\"arrow\"></span>\r\n            </h2>\r\n            <div v-if=\"isCategoryFilterOpen\" class=\"category-checkbox\">\r\n                <div v-for=\"category in categorys\" :key=\"category\">\r\n                    <input type=\"checkbox\" :id=\"category\" :value=\"category\" v-model=\"selectedCategorys\"\r\n                        @change=\"handleCategorysChange(category)\" />\r\n                    <label :for=\"category\">{{ category }}</label>\r\n                </div>\r\n            </div>\r\n            <!-- Раскрывающееся меню для характеристик -->\r\n            <div class=\"characteristic-filter\">\r\n                <h2>Уникальные характеристики</h2>\r\n\r\n                <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n                    <details>\r\n                        <summary>{{ characteristic }}</summary>\r\n                        <hr>\r\n                        <div v-for=\"value in values\" :key=\"value\" class=\"brand-checkbox\">\r\n                            <input type=\"checkbox\" :id=\"`${characteristic}-${value}`\" :value=\"value\"\r\n                                v-model=\"selectedCharacteristics[characteristic]\"\r\n                                @change=\"handleCharacteristicChange(characteristic, value)\" />\r\n                            <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  \r\n       \r\n    </div>\r\n    <div class=\"myall\">\r\n\r\n        <div class=\"menu_left\">\r\n            <MenuPrice @update:filter=\"updateFilter\" :initialMinValue=\"100\" :initialMaxValue=\"1000\"/>\r\n            <!-- Фильтр по брендам -->\r\n            <div class=\"brand-filter\">\r\n                <h3>Brand</h3>\r\n                <hr>\r\n                <HeaderSearch placeholder=\"Search\" :icon=\"searchIcon\" @updateResults=\"handleSearchResults\" />\r\n                <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n                    <input type=\"checkbox\" :id=\"brand\" :value=\"brand\" v-model=\"selectedBrands\"\r\n                        @change=\"handleBrandChange(brand)\" />\r\n                    <label :for=\"brand\">\r\n                        <p class=\"brands\">{{ brand }} <span>{{ totalProducts }}</span></p>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Фильтр по категориям -->\r\n            <h2 @click=\"toggleCategoryFilter\">\r\n                Категории\r\n                <span :class=\"{ 'open': isCategoryFilterOpen }\" class=\"arrow\"></span>\r\n            </h2>\r\n            <div v-if=\"isCategoryFilterOpen\" class=\"category-checkbox\">\r\n                <div v-for=\"category in categorys\" :key=\"category\">\r\n                    <input type=\"checkbox\" :id=\"category\" :value=\"category\" v-model=\"selectedCategorys\"\r\n                        @change=\"handleCategorysChange(category)\" />\r\n                    <label :for=\"category\">{{ category }}</label>\r\n                </div>\r\n            </div>\r\n            <!-- Раскрывающееся меню для характеристик -->\r\n            <div class=\"characteristic-filter\">\r\n                <h2>Уникальные характеристики</h2>\r\n\r\n                <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n                    <details>\r\n                        <summary>{{ characteristic }}</summary>\r\n                        <hr>\r\n                        <div v-for=\"value in values\" :key=\"value\" class=\"brand-checkbox\">\r\n                            <input type=\"checkbox\" :id=\"`${characteristic}-${value}`\" :value=\"value\"\r\n                                v-model=\"selectedCharacteristics[characteristic]\"\r\n                                @change=\"handleCharacteristicChange(characteristic, value)\" />\r\n                            <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n                        </div>\r\n                    </details>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <data value=\"sortedP\">\r\n            <div class=\"sorted\">\r\n                <div>\r\n                    <h3>Selected Products: <span>{{ totalProducts }}</span></h3>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <!-- <label for=\"sortBy\">Сортировать по:</label> -->\r\n                    <select id=\"sortBy\" v-model=\"sortOption\">\r\n                        <option value=\"rating\">By rating</option>\r\n                        <option value=\"price\">price</option>\r\n                        <option value=\"deliveryDate\">Дата поставки</option>\r\n                    </select>\r\n\r\n\r\n                    <!-- <button @click=\"toggleSortOrder\">Сортировать по {{ sortOrder === 'asc' ? 'возрастанию' : 'убыванию'\r\n                        }}</button> -->\r\n                </div>\r\n\r\n                <div class=\"mobile\">\r\n\r\n                    <div class=\"filter-container\">\r\n                        <img src=\"@/assets/Filters.png\" alt=\"Filter Icon\" class=\"filter-icon\" @click=\"toggleMessage\" />\r\n                        <input type=\"text\" placeholder=\"Фильтр\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"all_product\">\r\n                <ProductCart :products=\"paginatedProducts\" :apiUrl=\"apiUrl\" />\r\n                <div class=\"pagination\">\r\n                    <!-- Кнопка назад -->\r\n\r\n                    <button @click=\"prevPage\" :disabled=\"currentPage === 1\">&lt;</button>\r\n\r\n                    <!-- Первая страница -->\r\n                    <button v-if=\"currentPage >= 3\" @click=\"changePage(1)\">1</button>\r\n                    <span v-if=\"currentPage >= 3\">...</span>\r\n\r\n                    <!-- Страницы около текущей -->\r\n                    <button v-for=\"page in pagesToShow\" :key=\"page\" :class=\"{ active: currentPage === page }\"\r\n                        @click=\"changePage(page)\">\r\n                        {{ page }}\r\n                    </button>\r\n\r\n                    <!-- Троеточие, если необходимо -->\r\n                    <span v-if=\"currentPage < totalPages - 3\">...</span>\r\n\r\n                    <!-- Последняя страница -->\r\n                    <button v-if=\"currentPage < totalPages - 3\" @click=\"changePage(totalPages)\">\r\n                        {{ totalPages }}\r\n                    </button>\r\n\r\n                    <!-- Текущая страница -->\r\n                    <!-- <span>Страница {{ currentPage }} из {{ totalPages }}</span> -->\r\n\r\n                    <!-- Кнопка вперед -->\r\n                    <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">&gt;</button>\r\n                </div>\r\n            </div>\r\n        </data>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, watch } from 'vue';\r\nimport ProductCart from '../Products/ProductCart.vue';\r\nimport HeaderSearch from '../Search/HeaderSearch.vue';\r\nimport MenuPrice from './MenuPrice.vue';\r\nconst searchIcon = require('@/assets/Search.png');\r\nconst categories = ref([]);\r\nconst products = ref([]);\r\nconst brands = ref([]);\r\nconst categorys = ref([]);\r\nconst filter = ref({ min: 100, max: 1000 });\r\n// Состояние для управления видимостью фильтра\r\nconst isCategoryFilterOpen = ref(false);\r\n\r\n\r\n\r\nconst toggleCategoryFilter = () => {\r\n    isCategoryFilterOpen.value = !isCategoryFilterOpen.value;\r\n};\r\n\r\n\r\n\r\nimport { API_BASE_URL } from '@/config';\r\n\r\nconst showMessage = ref(false);\r\n\r\nconst toggleMessage = () => {\r\n    showMessage.value = !showMessage.value; // Переключение видимости блока\r\n};\r\n\r\n\r\n// сортировка\r\n\r\n\r\nconst sortOption = ref('rating');  // По умолчанию сортируем по рейтингу\r\nconst sortOrder = ref('asc');  // По умолчанию сортировка по возрастанию\r\n\r\n// Данные товаров\r\n\r\n\r\n// Функция для изменения порядка сортировки\r\nwatch(sortOption, () => {\r\n    sortedProducts.value;  // Обновляется автоматически при изменении sortOption\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Храним товары и базовый URL для API\r\n\r\nconst apiUrl = API_BASE_URL;\r\n\r\n// Переменные для управления пагинацией\r\n// Пагинация\r\nconst currentPage = ref(1);\r\nconst productsPerPage = 12; // Количество товаров на странице\r\n\r\nconst totalPages = computed(() => {\r\n    return Math.ceil(filteredProducts.value.length / productsPerPage);\r\n});\r\n\r\nconst totalProducts = computed(() => {\r\n    return filteredProducts.value.length;\r\n});\r\n\r\n\r\n\r\nconst pagesToShow = computed(() => {\r\n    const pages = [];\r\n    const range = 1; // Показать 3 страницы вокруг текущей\r\n    const start = Math.max(1, currentPage.value - range);\r\n    const end = Math.min(totalPages.value, currentPage.value + range);\r\n\r\n    // Добавляем страницы в диапазон\r\n    for (let i = start; i <= end; i++) {\r\n        pages.push(i);\r\n    }\r\n    return pages;\r\n});\r\n\r\n// конец пагинации\r\nconst filteredProducts = computed(() => {\r\n    console.log('начало работы фильтрации');\r\n\r\n    // Если не выбраны ни бренды, ни характеристики, ни категории, возвращаем все товары\r\n    if (selectedBrands.value.length === 0 && Object.keys(selectedCharacteristics.value).length === 0 && selectedCategorys.value.length === 0) {\r\n        return products.value;\r\n    }\r\n\r\n    return products.value.filter(product => {\r\n        // Фильтрация по брендам\r\n        const matchesBrand = selectedBrands.value.length === 0 || selectedBrands.value.includes(product.brand);\r\n        const matchesCategory = selectedCategorys.value.length === 0 || selectedCategorys.value.includes(product.category);\r\n\r\n        // Фильтрация по характеристикам\r\n        const matchesCharacteristics = Object.keys(selectedCharacteristics.value).every(characteristic => {\r\n            // Если характеристика не выбрана, она считается совпавшей\r\n            if (!selectedCharacteristics.value[characteristic] || selectedCharacteristics.value[characteristic].length === 0) {\r\n                return true;\r\n            }\r\n\r\n            // Преобразуем значение в массив, если это не массив\r\n            const selectedValues = Array.isArray(selectedCharacteristics.value[characteristic])\r\n                ? selectedCharacteristics.value[characteristic]\r\n                : [selectedCharacteristics.value[characteristic]];\r\n\r\n            // Получаем значения характеристики для товара\r\n            const productValues = product.characteristics\r\n                ? product.characteristics\r\n                    .filter(item => item.characteristic === characteristic)\r\n                    .map(item => item.value)\r\n                : [];\r\n\r\n            // Проверка, что хотя бы одно из выбранных значений характеристики совпадает с товарами\r\n            return selectedValues.some(value => productValues.includes(value));\r\n        });\r\n\r\n        return matchesBrand && matchesCategory && matchesCharacteristics;\r\n    });\r\n});\r\n\r\nfilteredItems() {\r\n      return this.items.filter(item => item.price >= this.minPrice && item.price <= this.maxPrice);\r\n    }\r\n\r\n\r\nconst sortedProducts = computed(() => {\r\n    return [...filteredProducts.value].sort((a, b) => {\r\n        let comparison = 0;\r\n\r\n        // Сортируем по рейтингу\r\n        if (sortOption.value === 'rating') {\r\n            comparison = a.rating - b.rating;\r\n        }\r\n        // Сортируем по цене\r\n        else if (sortOption.value === 'price') {\r\n            comparison = a.price - b.price;\r\n        }\r\n        // Сортируем по дате поставки\r\n        else if (sortOption.value === 'deliveryDate') {\r\n            comparison = new Date(a.deliveryDate) - new Date(b.deliveryDate);\r\n        }\r\n\r\n        // Если порядок сортировки 'desc', меняем знак\r\n        return sortOrder.value === 'asc' ? comparison : -comparison;\r\n    });\r\n});\r\n\r\nconst paginatedProducts = computed(() => {\r\n    const startIndex = (currentPage.value - 1) * productsPerPage;\r\n    return sortedProducts.value.slice(startIndex, startIndex + productsPerPage);\r\n});\r\n\r\n\r\n\r\n// Методы для управления страницами\r\nconst nextPage = () => {\r\n    if (currentPage.value < totalPages.value) {\r\n        currentPage.value++;\r\n    }\r\n};\r\nconst changePage = (page) => {\r\n    // Устанавливаем текущую страницу\r\n    currentPage.value = page;\r\n};\r\n\r\nconst prevPage = () => {\r\n    if (currentPage.value > 1) {\r\n        currentPage.value--;\r\n    }\r\n};\r\n\r\n\r\nconst selectedCharacteristics = ref({});  // Для хранения выбранных характеристик\r\nconst characteristics = ref({});  // Уникальные характеристики\r\n\r\nconst selectedBrands = ref([]);\r\n\r\nconst handleBrandChange = (brand) => {\r\n    // Если бренд не был добавлен в selectedBrands, добавляем его\r\n    if (!selectedBrands.value[brand]) {\r\n        selectedBrands.value[brand] = true;\r\n    } else {\r\n        selectedBrands.value[brand] = !selectedBrands.value[brand];\r\n    }\r\n\r\n    // Логируем обновленные данные для отладки\r\n    console.log('selectedBrands.value', selectedBrands.value);\r\n};\r\nconst extractBrands = (categoriesData) => {\r\n    const allBrands = new Set();\r\n\r\n    categoriesData.forEach(category => {\r\n        if (category.brand) {\r\n            allBrands.add(category.brand);\r\n        }\r\n    });\r\n\r\n    brands.value = Array.from(allBrands);\r\n};\r\n\r\n\r\n\r\nconst selectedCategorys = ref([]);\r\nconst handleCategorysChange = (category) => {\r\n\r\n    if (!Array.isArray(selectedCategorys.value[category])) {\r\n        selectedCategorys.value[category] = true;\r\n    }\r\n    // Если бренд не был добавлен в selectedBrands, добавляем его\r\n\r\n    else {\r\n        selectedCategorys.value[category] = !selectedCategorys.value[category];\r\n    }\r\n\r\n    // Логируем обновленные данные для отладки\r\n    console.log('selectedBrands.value', selectedCategorys.value);\r\n};\r\n\r\n\r\nconst extractCategorys = (categoriesData) => {\r\n    const allCategorys = new Set();\r\n\r\n    categoriesData.forEach(category => {\r\n        if (category.category) {\r\n            allCategorys.add(category.category);\r\n        }\r\n    });\r\n\r\n    categorys.value = Array.from(allCategorys);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst handleCharacteristicChange = (characteristic, value) => {\r\n    // Если характеристика еще не существует в selectedCharacteristics, создаем массив\r\n    if (!Array.isArray(selectedCharacteristics.value[characteristic])) {\r\n        selectedCharacteristics.value[characteristic] = [value];\r\n    }\r\n\r\n    // Принудительное обновление реактивности (необязательно в случае, если массив был изменен)\r\n    selectedCharacteristics.value = { ...selectedCharacteristics.value };\r\n\r\n    // Выводим обновленные данные для отладки\r\n    console.log('selectedCharacteristics.value', selectedCharacteristics.value);\r\n};\r\n\r\n\r\nonMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n});\r\n\r\n// Функция для загрузки категорий\r\nconst loadCategories = async () => {\r\n    try {\r\n        const response = await fetch(`http://localhost:1452/api/products?minPrice=${filter.value.min}&maxPrice=${filter.value.max}`);\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке категорий');\r\n        }\r\n        const data = await response.json();\r\n        categories.value = data;\r\n\r\n        extractBrands(data);\r\n        extractCategorys(data);\r\n        extractCharacteristics(data);\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n};\r\n\r\n\r\nfunction updateFilter(newFilter) {\r\n  filter.value = newFilter;\r\n  loadCategories();\r\n}\r\n// Функция для загрузки товаров\r\nconst loadProducts = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке товаров');\r\n        }\r\n        const data = await response.json();\r\n        products.value = data;\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n};\r\n\r\n// Извлекаем бренды из категорий\r\n\r\n// Извлекаем уникальные характеристики\r\nconst extractCharacteristics = (categoriesData) => {\r\n    const characteristicsData = {};\r\n\r\n    categoriesData.forEach(item => {\r\n        if (item.characteristics && Array.isArray(item.characteristics)) {\r\n            item.characteristics.forEach(characteristic => {\r\n                const charName = characteristic.characteristic;\r\n                const charValue = characteristic.value;\r\n\r\n                if (!characteristicsData[charName]) {\r\n                    characteristicsData[charName] = new Set();\r\n                }\r\n                characteristicsData[charName].add(charValue);\r\n            });\r\n        }\r\n    });\r\n\r\n    for (const charName in characteristicsData) {\r\n        characteristicsData[charName] = Array.from(characteristicsData[charName]);\r\n    }\r\n\r\n    characteristics.value = { ...characteristicsData };\r\n};\r\n\r\n// Фильтрация товаров по выбранным брендам и характеристикам\r\n\r\n\r\n\r\n\r\n// пагинация \r\n\r\n</script>\r\n\r\n<style scoped>\r\n.filter-container {\r\n    display: none;\r\n}\r\n\r\n.myall {\r\n    display: flex;\r\n    column-gap: 20px;\r\n    margin: 0 auto;\r\n\r\n}\r\n\r\n.sorted {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    h3 {\r\n        font-family: ABeeZee;\r\n        font-size: 16px;\r\n        font-style: italic;\r\n        font-weight: 400;\r\n        line-height: 16px;\r\n        letter-spacing: 0.03em;\r\n        text-align: left;\r\n        color: #6C6C6C;\r\n\r\n        span {\r\n            font-family: ABeeZee;\r\n            font-size: 20px;\r\n            font-style: normal;\r\n            font-weight: 400;\r\n            line-height: 16px;\r\n            letter-spacing: 0.03em;\r\n            text-align: center;\r\n            color: #000000;\r\n\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nh2 {\r\n    font-family: ABeeZee;\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    letter-spacing: 0.03em;\r\n    text-align: left;\r\n    color: #000;\r\n\r\n}\r\n\r\n.brand-checkbox {\r\n    display: flex;\r\n\r\n}\r\n\r\n.brands,\r\n.category-checkbox {\r\n    font-family: ABeeZee;\r\n    font-size: 15px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    text-align: left;\r\n    color: #000;\r\n\r\n    span {\r\n        font-family: Abel;\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n        line-height: 24px;\r\n        text-align: left;\r\n        color: #929292;\r\n    }\r\n\r\n\r\n}\r\n\r\nselect {\r\n    width: 256px;\r\n\r\n    padding: 8px 16px 8px 16px;\r\n    gap: 0px;\r\n    border-radius: 8px;\r\n    font-family: Abel;\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    line-height: 16px;\r\n    letter-spacing: -0.005em;\r\n    text-align: left;\r\n    color: #000;\r\n\r\n    option {\r\n        font-family: Abel;\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n        line-height: 16px;\r\n        letter-spacing: -0.005em;\r\n        text-align: left;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n.pagination button {\r\n    padding: 5px 10px;\r\n    margin: 0 5px;\r\n    border: 1px solid #ccc;\r\n    background: #F6F6F6;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n\r\n    font-family: ABeeZee;\r\n    font-size: 16px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    letter-spacing: 0.03em;\r\n    text-align: center;\r\n\r\n}\r\n\r\n.pagination button.active {\r\n    background: #000000;\r\n    color: #fff;\r\n\r\n}\r\n\r\n.pagination button:disabled {\r\n    cursor: not-allowed;\r\n    background-color: #f0f0f0;\r\n    border-color: #ddd;\r\n}\r\n\r\n.pagination span {\r\n    margin: 0 5px;\r\n}\r\n\r\n\r\n.all {\r\n    flex-wrap: wrap;\r\n    width: auto;\r\n    /* Добавляем перенос */\r\n\r\n    .container {\r\n        width: 236px !important;\r\n    }\r\n}\r\n\r\n\r\n\r\n.category-menu {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.category-menu ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.category-menu li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    background-color: #f0f0f0;\r\n    margin: 5px 0;\r\n}\r\n\r\n.category-menu li:hover {\r\n    background-color: #e0e0e0;\r\n}\r\n\r\n.brand-filter,\r\n.characteristic-filter {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.brand-checkbox,\r\n.characteristic-filter div {\r\n    margin: 5px 0;\r\n}\r\n\r\n.product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.product-list li {\r\n    margin: 10px 0;\r\n}\r\n\r\n/* Добавляем стили для раскрывающегося меню */\r\ndetails summary {\r\n    cursor: pointer;\r\n    font-family: ABeeZee;\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    letter-spacing: 0.03em;\r\n    text-align: left;\r\n    color: #000;\r\n}\r\n\r\ndetails div {\r\n    margin-left: 20px;\r\n}\r\n\r\n\r\n.arrow {\r\n    display: inline-block;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 5px solid transparent;\r\n    border-right: 5px solid transparent;\r\n    border-top: 5px solid #000;\r\n    /* Черная стрелка, направленная вниз */\r\n    transition: transform 0.3s ease-in-out;\r\n    /* Плавное изменение направления */\r\n}\r\n\r\n/* Когда фильтр открыт, стрелка разворачивается вверх */\r\n.arrow.open {\r\n    transform: rotate(180deg);\r\n    /* Поворот стрелки на 180 градусов */\r\n}\r\n\r\n@media(width<780px) {\r\n    .menu_left {\r\n        display: none;\r\n    }\r\n\r\n    #sortBy {\r\n        width: 164px;\r\n        font-family: Abel;\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n        line-height: 16px;\r\n        letter-spacing: -0.005em;\r\n        text-align: left;\r\n        text-underline-position: from-font;\r\n        -webkit-text-decoration-skip-ink: none;\r\n        text-decoration-skip-ink: none;\r\n        border: 0.5px solid #D4D4D4;\r\n        height: 56px;\r\n        padding: 16px;\r\n\r\n    }\r\n\r\n    h3 {\r\n        display: none;\r\n    }\r\n\r\n    .sorted {\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap: 20px;\r\n        justify-content: center;\r\n    }\r\n\r\n    .filter-container {\r\n        display: block;\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n    }\r\n\r\n    .filter-icon {\r\n        position: absolute;\r\n        right: 8px;\r\n        /* Иконка будет справа */\r\n        width: 16px;\r\n        height: 16px;\r\n    }\r\n\r\n    .filter-container input {\r\n        padding-right: 30px;\r\n        /* Отступ справа, чтобы не перекрывать текстом иконку */\r\n        width: 164px;\r\n        font-family: Abel;\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n        line-height: 16px;\r\n        letter-spacing: -0.005em;\r\n        text-align: left;\r\n        text-underline-position: from-font;\r\n        text-decoration-skip-ink: none;\r\n        border: 0.5px solid #D4D4D4;\r\n\r\n        height: 56px;\r\n\r\n        padding: 16px;\r\n        gap: 0px;\r\n        border-radius: 8px;\r\n\r\n        justify: space-between;\r\n        opacity: 0px;\r\n\r\n    }\r\n\r\n    /* Стили для блока с сообщением */\r\n    .message-box {\r\n        margin-top: 10px;\r\n        background-color: #ffffff;\r\n        padding: 10px;\r\n        border: 1px solid #ccc;\r\n        height: 100%;\r\n        position: relative;\r\n        z-index: 100;\r\n    }\r\n\r\n    .message-box_filter{\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap:15px;\r\n        p{\r\n            font-family: Abel;\r\nfont-size: 24px;\r\nfont-weight: 400;\r\nline-height: 32px;\r\nletter-spacing: 0.01em;\r\ntext-align: left;\r\ntext-underline-position: from-font;\r\ntext-decoration-skip-ink: none;\r\npadding-right: 10px;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}