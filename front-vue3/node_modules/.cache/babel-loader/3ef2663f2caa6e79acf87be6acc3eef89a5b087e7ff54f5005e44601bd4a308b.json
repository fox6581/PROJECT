{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"category-menu\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_4 = [\"id\", \"value\"];\nconst _hoisted_5 = [\"for\"];\nconst _hoisted_6 = {\n  class: \"product-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Категории\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: category.id,\n      onClick: $event => $setup.selectCategory(category)\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Фильтр по брендам\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedBrands = $event),\n      value: brand\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelCheckbox, $setup.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, _toDisplayString(brand), 9 /* TEXT, PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Товары\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredProducts, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, _toDisplayString(product.name) + \" - \" + _toDisplayString(product.brand), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_Fragment","_renderList","$setup","categories","category","key","id","onClick","$event","selectCategory","name","_hoisted_2","_hoisted_3","brands","brand","type","_cache","selectedBrands","value","_hoisted_4","for","_toDisplayString","_hoisted_5","_hoisted_6","filteredProducts","product"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"category-menu\">\r\n        <h3>Категории</h3>\r\n        <ul>\r\n          <li v-for=\"category in categories\" :key=\"category.id\" @click=\"selectCategory(category)\">\r\n            {{ category.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  \r\n      <div class=\"brand-filter\">\r\n        <h3>Фильтр по брендам</h3>\r\n        <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n          <input type=\"checkbox\" :id=\"brand\" v-model=\"selectedBrands\" :value=\"brand\" />\r\n          <label :for=\"brand\">{{ brand }}</label>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"product-list\">\r\n        <h3>Товары</h3>\r\n        <ul>\r\n          <li v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n            {{ product.name }} - {{ product.brand }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  \r\n  const categories = ref([]);\r\n  const products = ref([]);\r\n  const brands = ref([]);\r\n  const selectedBrands = ref([]);\r\n  \r\n  onMounted(async () => {\r\n    await loadCategories();\r\n    await loadProducts();\r\n  });\r\n  \r\n  // Функция для загрузки категорий\r\n  const loadCategories = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/category/1');\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка при загрузке категорий');\r\n      }\r\n      const data = await response.json();\r\n      categories.value = data; // Сохраняем категории\r\n      extractBrands(data);  // Извлекаем бренды\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n  };\r\n  \r\n  // Функция для загрузки товаров\r\n  const loadProducts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:1452/api/category/1');\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка при загрузке товаров');\r\n      }\r\n      const data = await response.json();\r\n      products.value = data; // Сохраняем товары\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n  };\r\n  \r\n  // Извлекаем бренды из категорий\r\n  const extractBrands = (categoriesData) => {\r\n    const allBrands = new Set();\r\n    categoriesData.forEach(category => {\r\n      // Проверка наличия products в категории\r\n      if (category.products && Array.isArray(category.products)) {\r\n        category.products.forEach(product => {\r\n          allBrands.add(product.brand);\r\n        });\r\n      }\r\n    });\r\n    brands.value = Array.from(allBrands);\r\n  };\r\n  \r\n  // Фильтрация товаров по выбранным брендам\r\n  const filteredProducts = computed(() => {\r\n    if (selectedBrands.value.length === 0) {\r\n      return products.value;\r\n    }\r\n    return products.value.filter(product =>\r\n      selectedBrands.value.includes(product.brand)\r\n    );\r\n  });\r\n  \r\n  // Функция для выбора категории\r\n  const selectCategory = (category) => {\r\n    console.log('Выбрана категория:', category);\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style scoped>\r\n  .category-menu {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .category-menu ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .category-menu li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    background-color: #f0f0f0;\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .category-menu li:hover {\r\n    background-color: #e0e0e0;\r\n  }\r\n  \r\n  .brand-filter {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .brand-checkbox {\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .product-list .product {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAEWA,KAAK,EAAC;AAAe;mBAFhC;;EAWWA,KAAK,EAAC;AAAc;mBAX/B;mBAAA;;EAmBWA,KAAK,EAAC;AAAc;;uBAlB3BC,mBAAA,CA0BM,cAzBJC,mBAAA,CAOM,OAPNC,UAOM,G,0BANJD,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKG,SAAA,QAPfC,WAAA,CAKiCC,MAAA,CAAAC,UAAU,EAAtBC,QAAQ;yBAAnBP,mBAAA,CAEK;MAF+BQ,GAAG,EAAED,QAAQ,CAACE,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,cAAc,CAACL,QAAQ;wBAChFA,QAAQ,CAACM,IAAI,wBAN5BC,UAAA;sCAWMb,mBAAA,CAMM,OANNc,UAMM,G,0BALJd,mBAAA,CAA0B,YAAtB,mBAAiB,uB,kBACrBD,mBAAA,CAGMG,SAAA,QAhBdC,WAAA,CAa6BC,MAAA,CAAAW,MAAM,EAAfC,KAAK;yBAAjBjB,mBAAA,CAGM;MAHwBQ,GAAG,EAAES,KAAK;MAAElB,KAAK,EAAC;wBAC9CE,mBAAA,CAA6E;MAAtEiB,IAAI,EAAC,UAAU;MAAET,EAAE,EAAEQ,KAAK;MAd3C,uBAAAE,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAcsDN,MAAA,CAAAe,cAAc,GAAAT,MAAA;MAAGU,KAAK,EAAEJ;4BAd9EK,UAAA,I,kBAcsDjB,MAAA,CAAAe,cAAc,E,GAC1DnB,mBAAA,CAAuC;MAA/BsB,GAAG,EAAEN;IAAK,GAAAO,gBAAA,CAAKP,KAAK,wBAftCQ,UAAA,E;oCAmBMxB,mBAAA,CAOM,OAPNyB,UAOM,G,0BANJzB,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKG,SAAA,QAxBfC,WAAA,CAsBgCC,MAAA,CAAAsB,gBAAgB,EAA3BC,OAAO;yBAAlB5B,mBAAA,CAEK;MAFoCQ,GAAG,EAAEoB,OAAO,CAACnB;wBACjDmB,OAAO,CAACf,IAAI,IAAG,KAAG,GAAAW,gBAAA,CAAGI,OAAO,CAACX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}