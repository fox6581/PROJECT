{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport ShowButton from '../Buttons/ShowButton.vue';\nimport { useStore } from 'vuex'; // Используем store\n\nexport default {\n  __name: 'ProductCart',\n  props: {\n    products: {\n      type: Object,\n      required: true\n    },\n    apiUrl: {\n      type: String,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const isLiked = product => {\n      return store.state.likedProducts.some(item => item.id === product.id);\n    };\n\n    // Переключение товара между понравившимися и обычным состоянием\n    const toggleLike = product => {\n      store.commit('toggleLike', product);\n    };\n    const store = useStore(); // Инициализация store\n\n    let isAddingToCart = false;\n    const addToCart = product => {\n      if (isAddingToCart) return; // Блокирует повторные вызовы\n      isAddingToCart = true;\n      store.commit('addToCart', product);\n\n      // Сбрасываем флаг после небольшой задержки\n      setTimeout(() => {\n        isAddingToCart = false;\n      }, 100);\n    };\n    console.log(props);\n    const __returned__ = {\n      props,\n      isLiked,\n      toggleLike,\n      store,\n      get isAddingToCart() {\n        return isAddingToCart;\n      },\n      set isAddingToCart(v) {\n        isAddingToCart = v;\n      },\n      addToCart,\n      ShowButton,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ShowButton","useStore","props","__props","isLiked","product","store","state","likedProducts","some","item","id","toggleLike","commit","isAddingToCart","addToCart","setTimeout","console","log"],"sources":["C:/shopvue/front-vue3/src/components/Products/ProductCart.vue"],"sourcesContent":["<template>\r\n    <div class=\"all\">\r\n        <div class=\"container\" v-for=\"product in products\" :key=\"product.id\">\r\n            <div class=\"header-icons_like\" @click=\"toggleLike(product)\" :class=\"{ liked: isLiked(product) }\">\r\n\r\n                <img :src=\"isLiked(product) ? require('@/assets/redLike.png') : require('@/assets/Like.png')\" width=\"32\"\r\n                    height=\"32\" alt=\"Like\">\r\n                <!-- <img src=\"@/assets/Like.png\" width=\"32\" height=\"32\" alt=\"\"> -->\r\n            </div>\r\n\r\n            <div class=\"all_block\">\r\n                <img :src=\"`${apiUrl}/${product.images[0]}`\" alt=\"\" width=\"160\" height=\"160\">\r\n                <p class=\"description\">{{ product.name }}</p>\r\n                <p class=\"price\">{{ product.price }}</p>\r\n\r\n                <ShowButton backgroundColor=\"#000\" titleColor=\"#fff\" buttonTitle=\"Buy Now\"\r\n                    @click=\"addToCart(product)\" />\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n<script setup>\r\n\r\nimport { defineProps } from 'vue';\r\nimport ShowButton from '../Buttons/ShowButton.vue';\r\nimport { useStore } from 'vuex'; // Используем store\r\n\r\n\r\n\r\nconst props = defineProps({\r\n    products: {\r\n        type: Object,\r\n        required: true\r\n    },\r\n    apiUrl: {\r\n        type: String,\r\n        required: true\r\n    }\r\n});\r\n\r\nconst isLiked = (product) => {\r\n    return store.state.likedProducts.some(item => item.id === product.id);\r\n};\r\n\r\n// Переключение товара между понравившимися и обычным состоянием\r\nconst toggleLike = (product) => {\r\n    store.commit('toggleLike', product);\r\n};\r\n\r\n\r\nconst store = useStore(); // Инициализация store\r\n\r\nlet isAddingToCart = false;\r\n\r\nconst addToCart = (product) => {\r\n    if (isAddingToCart) return; // Блокирует повторные вызовы\r\n    isAddingToCart = true;\r\n\r\n    store.commit('addToCart', product);\r\n\r\n    // Сбрасываем флаг после небольшой задержки\r\n    setTimeout(() => {\r\n        isAddingToCart = false;\r\n    }, 100);\r\n};\r\nconsole.log(props)\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.all {\r\n    width: 1120px;\r\n    display: flex;\r\n    gap: 10px;\r\n    margin: 0 auto;\r\n    padding: 20px 0;\r\n}\r\n\r\n.container {\r\n    width: 268px;\r\n    min-width: 200px;\r\n    padding: 24px 16px;\r\n    gap: 16px;\r\n    border-radius: 9px;\r\n    background: #F6F6F6;\r\n    display: block;\r\n}\r\n\r\n.header-icons_like {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding: 8px;\r\n    cursor: pointer;\r\n}\r\n\r\n.all_block {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 8px;\r\n}\r\n\r\np.description {\r\n    font-family: ABeeZee;\r\n    font-size: 16px;\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    padding: 10px 0;\r\n}\r\n\r\np.price {\r\n    font-family: Abel;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    line-height: 24px;\r\n    letter-spacing: 0.03em;\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.liked {\r\n    filter: grayscale(0) brightness(1.5);\r\n    /* Добавьте стиль для изменения цвета значка */\r\n}\r\n</style>\r\n"],"mappings":";;AA0BA,OAAOA,UAAU,MAAM,2BAA2B;AAClD,SAASC,QAAQ,QAAQ,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;IAIjC,MAAMC,KAAK,GAAGC,OASZ;IAEF,MAAMC,OAAO,GAAIC,OAAO,IAAK;MACzB,OAAOC,KAAK,CAACC,KAAK,CAACC,aAAa,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;IACzE,CAAC;;IAED;IACA,MAAMC,UAAU,GAAIP,OAAO,IAAK;MAC5BC,KAAK,CAACO,MAAM,CAAC,YAAY,EAAER,OAAO,CAAC;IACvC,CAAC;IAGD,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAE1B,IAAIa,cAAc,GAAG,KAAK;IAE1B,MAAMC,SAAS,GAAIV,OAAO,IAAK;MAC3B,IAAIS,cAAc,EAAE,OAAO,CAAC;MAC5BA,cAAc,GAAG,IAAI;MAErBR,KAAK,CAACO,MAAM,CAAC,WAAW,EAAER,OAAO,CAAC;;MAElC;MACAW,UAAU,CAAC,MAAM;QACbF,cAAc,GAAG,KAAK;MAC1B,CAAC,EAAE,GAAG,CAAC;IACX,CAAC;IACDG,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}