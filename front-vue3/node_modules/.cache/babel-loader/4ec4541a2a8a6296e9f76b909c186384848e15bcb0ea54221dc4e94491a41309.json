{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderTop = _resolveComponent(\"HeaderTop\");\n  const _component_HeaderMobile = _resolveComponent(\"HeaderMobile\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_FooterInfo = _resolveComponent(\"FooterInfo\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderTop), _withDirectives(_createVNode(_component_HeaderMobile, null, null, 512 /* NEED_PATCH */), [[_vShow, _ctx.isMobile]]), _cache[0] || (_cache[0] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _createVNode(_component_router_view), _createVNode(_component_FooterInfo)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_HeaderTop","_component_HeaderMobile","_ctx","isMobile","_createElementVNode","_component_router_view","_component_FooterInfo"],"sources":["C:\\shopvue\\front-vue3\\src\\App.vue"],"sourcesContent":["<template>\n  <HeaderTop  />\n<HeaderMobile v-show=\"isMobile\" /> \n  <hr>\n  <router-view />\n  <FooterInfo/>\n</template>\n\n<script>\n\nimport HeaderTop from './components/Header/HeaderTop.vue'\nimport FooterInfo from './components/Footer/FooterInfo.vue'\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport HeaderMobile from './components/Header/HeaderMobile.vue';\n\nconst isMobile = ref(false);\n\n\n// Функция для проверки ширины экрана\nconst checkMobileScreen = () => {\n  isMobile.value = window.innerWidth <= 768; // Например, 768px — это порог для мобильных устройств\n};\n// Запуск проверки при монтировании компонента\nonMounted(() => {\n  checkMobileScreen(); // Проверяем размер экрана сразу при монтировании компонента\n  window.addEventListener('resize', checkMobileScreen); // Подписываемся на изменение размера экрана\n});\n\n// Очистка обработчика при размонтировании компонента\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', checkMobileScreen);\n});\nexport default {\n  name: 'App',\n  components: {\n    HeaderTop,\n    FooterInfo,\n    HeaderMobile\n  }\n}\n\n\n</script>\n\n<style>\n\n/* Указываем box sizing */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Убираем внутренние отступы */\nul[class],\nol[class] {\n  padding: 0;\n}\n\n/* Убираем внешние отступы */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nul[class],\nol[class],\nli,\nfigure,\nfigcaption,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Выставляем основные настройки по-умолчанию для body */\nbody {\n  min-height: 100vh;\n  scroll-behavior: smooth;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* Удаляем стандартную стилизацию для всех ul и il, у которых есть атрибут class*/\nul[class],\nol[class] {\n  list-style: none;\n}\n\n/* Элементы a, у которых нет класса, сбрасываем до дефолтных стилей */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Упрощаем работу с изображениями */\nimg {\n  max-width: 100%;\n  display: block;\n}\n\n/* Указываем понятную периодичность в потоке данных у article*/\narticle > * + * {\n  margin-top: 1em;\n}\n\n/* Наследуем шрифты для инпутов и кнопок */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Удаляем все анимации и переходы для людей, которые предпочитай их не использовать */\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/* общие стили */\n\n@import url('https://fonts.googleapis.com/css2?family=Abel&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=ABeeZee:ital@0;1&family=Abel&display=swap');\n\nbody{\n  width: 1440px;\n  margin: 0 auto;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n\n}\nhr{\n  border-bottom: 1px solid #B5B5B5\n}\n</style>\n"],"mappings":";;;;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAcC,oBAAA,G,gBAChBD,YAAA,CAAkCE,uBAAA,sC,SAAZC,IAAA,CAAAC,QAAQ,E,6BAC5BC,mBAAA,CAAI,sCACJL,YAAA,CAAeM,sBAAA,GACfN,YAAA,CAAaO,qBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}