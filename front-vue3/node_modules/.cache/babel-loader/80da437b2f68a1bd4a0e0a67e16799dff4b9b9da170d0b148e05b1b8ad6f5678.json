{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"id\", \"value\", \"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_2 = [\"for\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"brand-filter\"\n};\nconst _hoisted_5 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_6 = [\"for\"];\nconst _hoisted_7 = {\n  class: \"product-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(characteristic), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: `${characteristic}-${value}`,\n        value: value,\n        \"onUpdate:modelValue\": $event => $setup.selectedCharacteristics[characteristic] = $event,\n        onChange: $event => $setup.handleCharacteristicChange(characteristic, value)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1), [[_vModelCheckbox, $setup.selectedCharacteristics[characteristic]]]), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_2)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category.id\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.selectCategory(category)\n    }, _toDisplayString(category.name), 9 /* TEXT, PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Фильтр по брендам\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: brand,\n      class: \"brand-checkbox\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: brand,\n      value: brand,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedBrands = $event),\n      onChange: $event => $setup.handleBrandChange(brand)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), [[_vModelCheckbox, $setup.selectedBrands]]), _createElementVNode(\"label\", {\n      for: brand\n    }, _toDisplayString(brand), 9 /* TEXT, PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_7, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Товары\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredProducts, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, _toDisplayString(product.name) + \" - \" + _toDisplayString(product.brand), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$setup","characteristics","values","characteristic","key","_createElementVNode","_toDisplayString","value","type","id","$event","selectedCharacteristics","onChange","handleCharacteristicChange","_hoisted_1","for","_hoisted_2","categories","category","onClick","selectCategory","name","_hoisted_3","_hoisted_4","brands","brand","_cache","selectedBrands","handleBrandChange","_hoisted_5","_hoisted_6","_hoisted_7","filteredProducts","product"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n            <h3>{{ characteristic }}</h3>\r\n            <div v-for=\"value in values\" :key=\"value\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    :id=\"`${characteristic}-${value}`\" \r\n                    :value=\"value\"\r\n                    v-model=\"selectedCharacteristics[characteristic]\" \r\n                    @change=\"handleCharacteristicChange(characteristic, value)\" />\r\n                <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-for=\"category in categories\" :key=\"category.id\">\r\n            <button @click=\"selectCategory(category)\">{{ category.name }}</button>\r\n        </div>\r\n\r\n        <div class=\"brand-filter\">\r\n            <h3>Фильтр по брендам</h3>\r\n            <div v-for=\"brand in brands\" :key=\"brand\" class=\"brand-checkbox\">\r\n                <input type=\"checkbox\" :id=\"brand\" :value=\"brand\" v-model=\"selectedBrands\"\r\n                    @change=\"handleBrandChange(brand)\" />\r\n                <label :for=\"brand\">{{ brand }}</label>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"product-list\">\r\n            <h3>Товары</h3>\r\n            <ul>\r\n                <li v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n                    {{ product.name }} - {{ product.brand }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\n\r\nconst categories = ref([]);\r\nconst products = ref([]);\r\nconst brands = ref([]);\r\nconst selectedBrands = ref([]); // Массив для выбранных брендов\r\nconst selectedCharacteristics = ref({});  // Для хранения выбранных характеристик\r\nconst characteristics = ref({});  // Уникальные характеристики\r\n\r\n// Обработчик изменения бренда\r\nconst handleBrandChange = (brand) => {\r\n    console.log('Изменение бренда:', brand);\r\n    if (selectedBrands.value.includes(brand)) {\r\n        selectedBrands.value = selectedBrands.value.filter(item => item !== brand);\r\n    } else {\r\n        selectedBrands.value.push(brand);\r\n    }\r\n};\r\n\r\n// Обработчик изменения характеристик\r\nconst handleCharacteristicChange = (characteristic, value) => {\r\n    if (!Array.isArray(selectedCharacteristics.value[characteristic])) {\r\n        selectedCharacteristics.value[characteristic] = []; // Инициализируем как массив, если это не массив\r\n    }\r\n\r\n    const selectedValues = selectedCharacteristics.value[characteristic];\r\n\r\n    const index = selectedValues.indexOf(value);\r\n\r\n    if (index === -1) {\r\n        // Если значения нет в массиве, добавляем его\r\n        selectedValues.push(value);\r\n    } else {\r\n        // Если значение уже есть, удаляем его\r\n        selectedValues.splice(index, 1);\r\n    }\r\n\r\n    // Обновляем реактивное состояние\r\n    selectedCharacteristics.value = { ...selectedCharacteristics.value }; \r\n};\r\n\r\n\r\nonMounted(async () => {\r\n    console.log('Компонент монтируется...');\r\n    await loadCategories();\r\n    await loadProducts();\r\n});\r\n\r\nconst loadCategories = async () => {\r\n    console.log('Загружаем категории...');\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке категорий');\r\n        }\r\n        const data = await response.json();\r\n        categories.value = data;\r\n        console.log('Категории загружены:', categories.value);\r\n\r\n        extractBrands(data);\r\n        extractCharacteristics(data);\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке категорий:', error);\r\n    }\r\n};\r\n\r\nconst loadProducts = async () => {\r\n    console.log('Загружаем товары...');\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке товаров');\r\n        }\r\n        const data = await response.json();\r\n        products.value = data;\r\n        console.log('Товары загружены:', products.value);\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n};\r\n\r\nconst extractBrands = (categoriesData) => {\r\n    console.log('Извлекаем бренды...');\r\n    const allBrands = new Set();\r\n    categoriesData.forEach(category => {\r\n        if (category.brand) {\r\n            allBrands.add(category.brand);\r\n        }\r\n    });\r\n    brands.value = Array.from(allBrands);\r\n    console.log('Бренды извлечены:', brands.value);\r\n};\r\n\r\nconst extractCharacteristics = (categoriesData) => {\r\n    console.log('Извлекаем характеристики...');\r\n    const characteristicsData = {};\r\n    categoriesData.forEach(item => {\r\n        if (item.characteristics && Array.isArray(item.characteristics)) {\r\n            item.characteristics.forEach(characteristic => {\r\n                const charName = characteristic.characteristic;\r\n                const charValue = characteristic.value;\r\n\r\n                if (!characteristicsData[charName]) {\r\n                    characteristicsData[charName] = new Set();\r\n                }\r\n                characteristicsData[charName].add(charValue);\r\n            });\r\n        }\r\n    });\r\n\r\n    for (const charName in characteristicsData) {\r\n        characteristicsData[charName] = Array.from(characteristicsData[charName]);\r\n    }\r\n\r\n    characteristics.value = { ...characteristicsData };\r\n    console.log('Характеристики извлечены:', characteristics.value);\r\n};\r\n\r\nconst filteredProducts = computed(() => {\r\n    console.log('Фильтруем товары...');\r\n    return products.value.filter(product => {\r\n        const matchesBrand = selectedBrands.value.length === 0 || selectedBrands.value.includes(product.brand);\r\n\r\n        const matchesCharacteristics = Object.keys(selectedCharacteristics.value).every(characteristic => {\r\n            const selectedValues = selectedCharacteristics.value[characteristic];\r\n            if (!Array.isArray(selectedValues)) return true;  // Если не массив, пропускаем проверку\r\n\r\n            const productValues = product.characteristics\r\n                ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value)\r\n                : [];\r\n\r\n            // Проверяем, что хотя бы одно выбранное значение есть среди характеристик товара\r\n            return selectedValues.some(value => productValues.includes(value));\r\n        });\r\n\r\n        return matchesBrand && matchesCharacteristics;\r\n    });\r\n});\r\n\r\nconst selectCategory = (category) => {\r\n    console.log('Выбрана категория:', category);\r\n};\r\n</script>\r\n"],"mappings":";mBAAA;mBAAA;mBAAA;;EAmBaA,KAAK,EAAC;AAAc;mBAnBjC;mBAAA;;EA4BaA,KAAK,EAAC;AAAc;;uBA3B7BC,mBAAA,CAmCM,e,kBAlCFA,mBAAA,CAWMC,SAAA,QAbdC,WAAA,CAEgDC,MAAA,CAAAC,eAAe,EAF/D,CAEqBC,MAAM,EAAEC,cAAc;yBAAnCN,mBAAA,CAWM;MAXoDO,GAAG,EAAED;IAAc,IACzEE,mBAAA,CAA6B,YAAAC,gBAAA,CAAtBH,cAAc,mB,kBACrBN,mBAAA,CAQMC,SAAA,QAZlBC,WAAA,CAIiCG,MAAM,EAAfK,KAAK;2BAAjBV,mBAAA,CAQM;QARwBO,GAAG,EAAEG;MAAK,I,gBACpCF,mBAAA,CAKkE;QAJ9DG,IAAI,EAAC,UAAU;QACdC,EAAE,KAAKN,cAAc,IAAII,KAAK;QAC9BA,KAAK,EAAEA,KAAK;QARjC,uBAAAG,MAAA,IAS6BV,MAAA,CAAAW,uBAAuB,CAACR,cAAc,IAAAO,MAAA;QAC9CE,QAAM,EAAAF,MAAA,IAAEV,MAAA,CAAAa,0BAA0B,CAACV,cAAc,EAAEI,KAAK;+CAV7EO,UAAA,I,kBAS6Bd,MAAA,CAAAW,uBAAuB,CAACR,cAAc,G,GAEnDE,mBAAA,CAA8D;QAAtDU,GAAG,KAAKZ,cAAc,IAAII,KAAK;0BAAOA,KAAK,wBAXnES,UAAA,E;;qDAeQnB,mBAAA,CAEMC,SAAA,QAjBdC,WAAA,CAegCC,MAAA,CAAAiB,UAAU,EAAtBC,QAAQ;yBAApBrB,mBAAA,CAEM;MAF+BO,GAAG,EAAEc,QAAQ,CAACT;QAC/CJ,mBAAA,CAAsE;MAA7Dc,OAAK,EAAAT,MAAA,IAAEV,MAAA,CAAAoB,cAAc,CAACF,QAAQ;wBAAMA,QAAQ,CAACG,IAAI,wBAhBtEC,UAAA,E;kCAmBQjB,mBAAA,CAOM,OAPNkB,UAOM,G,0BANFlB,mBAAA,CAA0B,YAAtB,mBAAiB,uB,kBACrBR,mBAAA,CAIMC,SAAA,QAzBlBC,WAAA,CAqBiCC,MAAA,CAAAwB,MAAM,EAAfC,KAAK;yBAAjB5B,mBAAA,CAIM;MAJwBO,GAAG,EAAEqB,KAAK;MAAE7B,KAAK,EAAC;wBAC5CS,mBAAA,CACyC;MADlCG,IAAI,EAAC,UAAU;MAAEC,EAAE,EAAEgB,KAAK;MAAGlB,KAAK,EAAEkB,KAAK;MAtBhE,uBAAAC,MAAA,QAAAA,MAAA,MAAAhB,MAAA,IAsB2EV,MAAA,CAAA2B,cAAc,GAAAjB,MAAA;MACpEE,QAAM,EAAAF,MAAA,IAAEV,MAAA,CAAA4B,iBAAiB,CAACH,KAAK;6CAvBpDI,UAAA,I,kBAsB2E7B,MAAA,CAAA2B,cAAc,E,GAEzEtB,mBAAA,CAAuC;MAA/BU,GAAG,EAAEU;IAAK,GAAAnB,gBAAA,CAAKmB,KAAK,wBAxB5CK,UAAA,E;oCA4BQzB,mBAAA,CAOM,OAPN0B,UAOM,G,0BANF1B,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIK,c,kBAHDR,mBAAA,CAEKC,SAAA,QAjCrBC,WAAA,CA+BsCC,MAAA,CAAAgC,gBAAgB,EAA3BC,OAAO;yBAAlBpC,mBAAA,CAEK;MAFoCO,GAAG,EAAE6B,OAAO,CAACxB;wBAC/CwB,OAAO,CAACZ,IAAI,IAAG,KAAG,GAAAf,gBAAA,CAAG2B,OAAO,CAACR,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}