{"ast":null,"code":"import { ref, onMounted, onBeforeUnmount } from 'vue';\nimport HeaderTop from './components/Header/HeaderTop.vue';\nimport FooterInfo from './components/Footer/FooterInfo.vue';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const isMobile = ref(false);\n\n    // Функция для проверки ширины экрана\n    const checkMobileScreen = () => {\n      isMobile.value = window.innerWidth <= 768; // Для мобильных устройств меньше 768px\n    };\n\n    // Запуск проверки при монтировании компонента\n    onMounted(() => {\n      checkMobileScreen(); // Проверяем размер экрана сразу при монтировании компонента\n      window.addEventListener('resize', checkMobileScreen); // Подписываемся на изменение размера экрана\n    });\n\n    // Очистка обработчика при размонтировании компонента\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', checkMobileScreen);\n    });\n    const __returned__ = {\n      isMobile,\n      checkMobileScreen,\n      ref,\n      onMounted,\n      onBeforeUnmount,\n      HeaderTop,\n      FooterInfo\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","HeaderTop","FooterInfo","isMobile","checkMobileScreen","value","window","innerWidth","addEventListener","removeEventListener"],"sources":["C:/shopvue/front-vue3/src/App.vue"],"sourcesContent":["<template>\n  <HeaderTop />\n  \n  <!-- Показываем мобильное меню только при условии, что экран меньше 768px -->\n  <HeaderMobile v-if=\"isMobile\" />\n\n  <hr />\n  <router-view />\n  <FooterInfo />\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport HeaderTop from './components/Header/HeaderTop.vue';\nimport FooterInfo from './components/Footer/FooterInfo.vue';\n\nconst isMobile = ref(false);\n\n// Функция для проверки ширины экрана\nconst checkMobileScreen = () => {\n  isMobile.value = window.innerWidth <= 768; // Для мобильных устройств меньше 768px\n};\n\n// Запуск проверки при монтировании компонента\nonMounted(() => {\n  checkMobileScreen(); // Проверяем размер экрана сразу при монтировании компонента\n  window.addEventListener('resize', checkMobileScreen); // Подписываемся на изменение размера экрана\n});\n\n// Очистка обработчика при размонтировании компонента\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', checkMobileScreen);\n});\n</script>\n\n<style>\n/* Стили для всей страницы */\nbody {\n  width: 1440px;\n  margin: 0 auto;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nhr {\n  border-bottom: 1px solid #B5B5B5;\n}\n</style>\n"],"mappings":"AAYA,SAASA,GAAG,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAK;AACrD,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,UAAU,MAAM,oCAAoC;;;;;;;IAE3D,MAAMC,QAAQ,GAAGL,GAAG,CAAC,KAAK,CAAC;;IAE3B;IACA,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;MAC9BD,QAAQ,CAACE,KAAK,GAAGC,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC,CAAC;IAC7C,CAAC;;IAED;IACAR,SAAS,CAAC,MAAM;MACdK,iBAAiB,CAAC,CAAC,CAAC,CAAC;MACrBE,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEJ,iBAAiB,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC;;IAEF;IACAJ,eAAe,CAAC,MAAM;MACpBM,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEL,iBAAiB,CAAC;IACzD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}