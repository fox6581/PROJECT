{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"characteristic-filter\"\n};\nconst _hoisted_2 = [\"id\", \"value\", \"checked\", \"onChange\"];\nconst _hoisted_3 = [\"for\"];\nconst _hoisted_4 = {\n  class: \"product-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Фильтр по характеристикам \"), _createElementVNode(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Уникальные характеристики\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.characteristics, (values, characteristic) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: characteristic\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(characteristic), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(values, value => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: value\n      }, [_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: `${characteristic}-${value}`,\n        value: value,\n        checked: $setup.isChecked(characteristic, value),\n        onChange: $event => $setup.toggleSelection(characteristic, value)\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), _createElementVNode(\"label\", {\n        for: `${characteristic}-${value}`\n      }, _toDisplayString(value), 9 /* TEXT, PROPS */, _hoisted_3)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Список товаров с фильтрацией \"), _createElementVNode(\"div\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Товары\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredProducts, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, _toDisplayString(product.name) + \" - \" + _toDisplayString(product.brand), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createCommentVNode","_createElementVNode","_hoisted_1","_Fragment","_renderList","$setup","characteristics","values","characteristic","key","_toDisplayString","value","type","id","checked","isChecked","onChange","$event","toggleSelection","_hoisted_2","for","_hoisted_3","_hoisted_4","filteredProducts","product","name","brand"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Menu\\LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- Фильтр по характеристикам -->\r\n        <div class=\"characteristic-filter\">\r\n            <h2>Уникальные характеристики</h2>\r\n            <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n                <h3>{{ characteristic }}</h3>\r\n                <div v-for=\"value in values\" :key=\"value\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        :id=\"`${characteristic}-${value}`\"\r\n                        :value=\"value\"\r\n                        :checked=\"isChecked(characteristic, value)\"\r\n                        @change=\"toggleSelection(characteristic, value)\"\r\n                    />\r\n                    <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Список товаров с фильтрацией -->\r\n        <div class=\"product-list\">\r\n            <h3>Товары</h3>\r\n            <ul>\r\n                <li v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n                    {{ product.name }} - {{ product.brand }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, on } from 'vue';\r\n\r\nconst products = ref([]);\r\nconst characteristics = ref({}); // Характеристики\r\nconst selectedCharacteristics = ref({}); // Выбранные характеристики\r\n\r\nonMounted(async () => {\r\n    await loadProducts();\r\n    await loadCharacteristics();\r\n});\r\n\r\n// Функция для загрузки товаров\r\nconst loadProducts = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке товаров');\r\n        }\r\n        const data = await response.json();\r\n        products.value = data;\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n};\r\n\r\n// Функция для загрузки характеристик\r\nconst loadCharacteristics = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/characteristics');  // Замените на URL для характеристик\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке характеристик');\r\n        }\r\n        const data = await response.json();\r\n        characteristics.value = data;\r\n\r\n        // Инициализация выбранных характеристик как пустых массивов\r\n        for (const char in characteristics.value) {\r\n            selectedCharacteristics.value[char] = [];\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке характеристик:', error);\r\n    }\r\n};\r\n\r\n// Функция для проверки, выбран ли элемент\r\nconst isChecked = (characteristic, value) => {\r\n    return selectedCharacteristics.value[characteristic]?.includes(value);\r\n};\r\n\r\n// Функция для изменения состояния выбора\r\nconst toggleSelection = (characteristic, value) => {\r\n    const selectedValues = selectedCharacteristics.value[characteristic];\r\n    const valueIndex = selectedValues.indexOf(value);\r\n\r\n    if (valueIndex > -1) {\r\n        // Удаляем значение из массива\r\n        selectedValues.splice(valueIndex, 1);\r\n    } else {\r\n        // Добавляем значение в массив\r\n        selectedValues.push(value);\r\n    }\r\n};\r\n\r\n// Фильтрация товаров по выбранным характеристикам\r\nconst filteredProducts = computed(() => {\r\n    return products.value.filter(product => {\r\n        return Object.keys(selectedCharacteristics.value).every(characteristic => {\r\n            const selectedValues = selectedCharacteristics.value[characteristic];\r\n\r\n            if (selectedValues.length === 0) {\r\n                return true; // Если не выбраны значения для этой характеристики, пропускаем\r\n            }\r\n\r\n            const productValues = product.characteristics\r\n                ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value)\r\n                : [];\r\n\r\n            return selectedValues.some(value => productValues.includes(value));\r\n        });\r\n    });\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.characteristic-filter {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.characteristic-filter div {\r\n    margin: 5px 0;\r\n}\r\n\r\n.product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.product-list li {\r\n    margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":";;EAGaA,KAAK,EAAC;AAAuB;mBAH1C;mBAAA;;EAqBaA,KAAK,EAAC;AAAc;;uBApB7BC,mBAAA,CA4BM,cA3BFC,mBAAA,+BAAkC,EAClCC,mBAAA,CAeM,OAfNC,UAeM,G,0BAdFD,mBAAA,CAAkC,YAA9B,2BAAyB,uB,kBAC7BF,mBAAA,CAYMI,SAAA,QAjBlBC,WAAA,CAKoDC,MAAA,CAAAC,eAAe,EALnE,CAKyBC,MAAM,EAAEC,cAAc;yBAAnCT,mBAAA,CAYM;MAZoDU,GAAG,EAAED;IAAc,IACzEP,mBAAA,CAA6B,YAAAS,gBAAA,CAAtBF,cAAc,mB,kBACrBT,mBAAA,CASMI,SAAA,QAhBtBC,WAAA,CAOqCG,MAAM,EAAfI,KAAK;2BAAjBZ,mBAAA,CASM;QATwBU,GAAG,EAAEE;MAAK,IACpCV,mBAAA,CAME;QALEW,IAAI,EAAC,UAAU;QACdC,EAAE,KAAKL,cAAc,IAAIG,KAAK;QAC9BA,KAAK,EAAEA,KAAK;QACZG,OAAO,EAAET,MAAA,CAAAU,SAAS,CAACP,cAAc,EAAEG,KAAK;QACxCK,QAAM,EAAAC,MAAA,IAAEZ,MAAA,CAAAa,eAAe,CAACV,cAAc,EAAEG,KAAK;+CAbtEQ,UAAA,GAeoBlB,mBAAA,CAA8D;QAAtDmB,GAAG,KAAKZ,cAAc,IAAIG,KAAK;0BAAOA,KAAK,wBAfvEU,UAAA,E;;oCAoBQrB,mBAAA,kCAAqC,EACrCC,mBAAA,CAOM,OAPNqB,UAOM,G,0BANFrB,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIK,c,kBAHDF,mBAAA,CAEKI,SAAA,QA1BrBC,WAAA,CAwBsCC,MAAA,CAAAkB,gBAAgB,EAA3BC,OAAO;yBAAlBzB,mBAAA,CAEK;MAFoCU,GAAG,EAAEe,OAAO,CAACX;wBAC/CW,OAAO,CAACC,IAAI,IAAG,KAAG,GAAAf,gBAAA,CAAGc,OAAO,CAACE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}