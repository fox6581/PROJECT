{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"category-filter\"\n};\nconst _hoisted_2 = [\"id\", \"value\", \"onChange\"];\nconst _hoisted_3 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"Фильтр по категориям\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.categories, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category,\n      class: \"category-checkbox\"\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: category,\n      value: category,\n      onChange: $event => $setup.handleCategoryChange(category)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), _createElementVNode(\"label\", {\n      for: category\n    }, _toDisplayString(category), 9 /* TEXT, PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$props","categories","category","key","type","id","value","onChange","$event","$setup","handleCategoryChange","_hoisted_2","for","_toDisplayString","_hoisted_3"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Filter\\CategoryFilter.vue"],"sourcesContent":["<template>\r\n    <div class=\"category-filter\">\r\n      <h3>Фильтр по категориям</h3>\r\n      <div v-for=\"category in categories\" :key=\"category\" class=\"category-checkbox\">\r\n        <input \r\n          type=\"checkbox\" \r\n          :id=\"category\" \r\n          :value=\"category\" \r\n          v-model=\"selectedCategories\"\r\n          @change=\"handleCategoryChange(category)\" \r\n        />\r\n        <label :for=\"category\">{{ category }}</label>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue';\r\n  \r\n  const props = defineProps({\r\n    categories: Array,\r\n    selectedCategories: Array\r\n  });\r\n  \r\n  const emit = defineEmits(['update:selectedCategories']);\r\n  \r\n  const handleCategoryChange = (category) => {\r\n    if (!props.selectedCategories.includes(category)) {\r\n      props.selectedCategories.push(category);\r\n    } else {\r\n      const index = props.selectedCategories.indexOf(category);\r\n      props.selectedCategories.splice(index, 1);\r\n    }\r\n    emit('update:selectedCategories', props.selectedCategories);\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .category-filter {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .category-checkbox {\r\n    margin: 5px 0;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAiB;mBADhC;mBAAA;;uBACIC,mBAAA,CAYM,OAZNC,UAYM,G,0BAXJC,mBAAA,CAA6B,YAAzB,sBAAoB,uB,kBACxBF,mBAAA,CASMG,SAAA,QAZZC,WAAA,CAG8BC,MAAA,CAAAC,UAAU,EAAtBC,QAAQ;yBAApBP,mBAAA,CASM;MAT+BQ,GAAG,EAAED,QAAQ;MAAER,KAAK,EAAC;QACxDG,mBAAA,CAME;MALAO,IAAI,EAAC,UAAU;MACdC,EAAE,EAAEH,QAAQ;MACZI,KAAK,EAAEJ,QAAQ;MAEfK,QAAM,EAAAC,MAAA,IAAEC,MAAA,CAAAC,oBAAoB,CAACR,QAAQ;6CAThDS,UAAA,GAWQd,mBAAA,CAA6C;MAArCe,GAAG,EAAEV;IAAQ,GAAAW,gBAAA,CAAKX,QAAQ,wBAX1CY,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}