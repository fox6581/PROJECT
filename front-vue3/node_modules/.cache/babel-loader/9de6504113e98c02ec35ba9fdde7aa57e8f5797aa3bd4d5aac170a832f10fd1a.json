{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"rating-stars\"\n};\nconst _hoisted_2 = {\n  class: \"rating-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Проходим через все 5 звезд и отображаем их в зависимости от рейтинга \"), _createElementVNode(\"div\", null, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.stars, star => {\n    return _createElementVNode(\"span\", {\n      key: star,\n      class: _normalizeClass([\"star\", {\n        filled: star <= $props.rating\n      }])\n    }, [_cache[0] || (_cache[0] = _createTextVNode(\" ★ \")), _createCommentVNode(\" HTML-символ для звездочки \")], 2 /* CLASS */);\n  }), 64 /* STABLE_FRAGMENT */))]), _cache[1] || (_cache[1] = _createElementVNode(\"div\", null, null, -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_2, _toDisplayString($props.rating) + \" (\" + _toDisplayString($props.countReview) + \" отзывов)\", 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_Fragment","_renderList","$setup","stars","star","key","_normalizeClass","filled","$props","rating","_createTextVNode","_hoisted_2","_toDisplayString","countReview"],"sources":["C:\\shopvue\\front-vue3\\src\\components\\Raitings\\RatingStars.vue"],"sourcesContent":["<template>\r\n    <div class=\"rating-stars\">\r\n      <!-- Проходим через все 5 звезд и отображаем их в зависимости от рейтинга -->\r\n       <div>\r\n            <span\r\n        v-for=\"star in stars\"\r\n        :key=\"star\"\r\n        class=\"star\"\r\n        :class=\"{ filled: star <= rating }\"\r\n      >\r\n        &#9733; <!-- HTML-символ для звездочки -->\r\n      </span>\r\n       </div>\r\n  <div>\r\n    \r\n  </div>\r\n      \r\n      <span class=\"rating-text\">{{ rating }} ({{ countReview }} отзывов)</span>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n import { defineProps } from 'vue';\r\n  // Используем defineProps для получения пропсов без объявления лишней переменной\r\n  defineProps({\r\n    rating: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    countReview: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  });\r\n  \r\n  // Создаем массив для 5 звезд\r\n  const stars = [1, 2, 3, 4, 5];\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .rating-stars {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .star {\r\n    font-size: 24px;\r\n    color: #dcdcdc; /* Цвет неактивной звезды (серый) */\r\n  }\r\n  \r\n  .star.filled {\r\n    color: #ffcc00; /* Цвет активной звезды (желтый) */\r\n  }\r\n  \r\n  .rating-text {\r\n    margin-left: 10px;\r\n    font-size: 14px;\r\n    color: #555;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAc;;EAgBjBA,KAAK,EAAC;AAAa;;uBAhB3BC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,mBAAA,0EAA6E,EAC5EC,mBAAA,CASM,e,cARDH,mBAAA,CAOCI,SAAA,QAXbC,WAAA,CAKuBC,MAAA,CAAAC,KAAK,EAAbC,IAAI;WADPL,mBAAA,CAOC;MALJM,GAAG,EAAED,IAAI;MACVT,KAAK,EAPbW,eAAA,EAOc,MAAM;QAAAC,MAAA,EACMH,IAAI,IAAII,MAAA,CAAAC;MAAM;kCARxCC,gBAAA,CASO,KACS,IAAAZ,mBAAA,+BAAkC,C;8DAGhDC,mBAAA,CAEM,uCAEFA,mBAAA,CAAyE,QAAzEY,UAAyE,EAAAC,gBAAA,CAA5CJ,MAAA,CAAAC,MAAM,IAAG,IAAE,GAAAG,gBAAA,CAAGJ,MAAA,CAAAK,WAAW,IAAG,WAAS,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}