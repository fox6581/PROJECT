{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { ref, computed } from 'vue';\nexport default {\n  __name: 'LeftMenu',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const products = ref([]);\n    const characteristics = ref({}); // Характеристики\n    const selectedCharacteristics = ref({}); // Выбранные характеристики\n\n    onMounted(async () => {\n      await loadProducts();\n      await loadCharacteristics();\n    });\n\n    // Функция для загрузки товаров\n    const loadProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:1452/api/products');\n        if (!response.ok) {\n          throw new Error('Ошибка при загрузке товаров');\n        }\n        const data = await response.json();\n        products.value = data;\n      } catch (error) {\n        console.error('Ошибка при загрузке товаров:', error);\n      }\n    };\n\n    // Функция для загрузки характеристик\n    const loadCharacteristics = async () => {\n      try {\n        const response = await fetch('http://localhost:1452/api/characteristics'); // Замените на URL для характеристик\n        if (!response.ok) {\n          throw new Error('Ошибка при загрузке характеристик');\n        }\n        const data = await response.json();\n        characteristics.value = data;\n\n        // Инициализация выбранных характеристик как пустых массивов\n        for (const char in characteristics.value) {\n          selectedCharacteristics.value[char] = [];\n        }\n      } catch (error) {\n        console.error('Ошибка при загрузке характеристик:', error);\n      }\n    };\n\n    // Функция для проверки, выбран ли элемент\n    const isChecked = (characteristic, value) => {\n      return selectedCharacteristics.value[characteristic]?.includes(value);\n    };\n\n    // Функция для изменения состояния выбора\n    const toggleSelection = (characteristic, value) => {\n      const selectedValues = selectedCharacteristics.value[characteristic];\n      const valueIndex = selectedValues.indexOf(value);\n      if (valueIndex > -1) {\n        // Удаляем значение из массива\n        selectedValues.splice(valueIndex, 1);\n      } else {\n        // Добавляем значение в массив\n        selectedValues.push(value);\n      }\n    };\n\n    // Фильтрация товаров по выбранным характеристикам\n    const filteredProducts = computed(() => {\n      return products.value.filter(product => {\n        return Object.keys(selectedCharacteristics.value).every(characteristic => {\n          const selectedValues = selectedCharacteristics.value[characteristic];\n          if (selectedValues.length === 0) {\n            return true; // Если не выбраны значения для этой характеристики, пропускаем\n          }\n          const productValues = product.characteristics ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value) : [];\n          return selectedValues.some(value => productValues.includes(value));\n        });\n      });\n    });\n    const __returned__ = {\n      products,\n      characteristics,\n      selectedCharacteristics,\n      loadProducts,\n      loadCharacteristics,\n      isChecked,\n      toggleSelection,\n      filteredProducts,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","products","characteristics","selectedCharacteristics","onMounted","loadProducts","loadCharacteristics","response","fetch","ok","Error","data","json","value","error","console","char","isChecked","characteristic","includes","toggleSelection","selectedValues","valueIndex","indexOf","splice","push","filteredProducts","filter","product","Object","keys","every","length","productValues","item","map","some"],"sources":["C:/shopvue/front-vue3/src/components/Menu/LeftMenu.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- Фильтр по характеристикам -->\r\n        <div class=\"characteristic-filter\">\r\n            <h2>Уникальные характеристики</h2>\r\n            <div v-for=\"(values, characteristic) in characteristics\" :key=\"characteristic\">\r\n                <h3>{{ characteristic }}</h3>\r\n                <div v-for=\"value in values\" :key=\"value\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        :id=\"`${characteristic}-${value}`\"\r\n                        :value=\"value\"\r\n                        :checked=\"isChecked(characteristic, value)\"\r\n                        @change=\"toggleSelection(characteristic, value)\"\r\n                    />\r\n                    <label :for=\"`${characteristic}-${value}`\">{{ value }}</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Список товаров с фильтрацией -->\r\n        <div class=\"product-list\">\r\n            <h3>Товары</h3>\r\n            <ul>\r\n                <li v-for=\"product in filteredProducts\" :key=\"product.id\">\r\n                    {{ product.name }} - {{ product.brand }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed,  } from 'vue';\r\n\r\nconst products = ref([]);\r\nconst characteristics = ref({}); // Характеристики\r\nconst selectedCharacteristics = ref({}); // Выбранные характеристики\r\n\r\nonMounted(async () => {\r\n    await loadProducts();\r\n    await loadCharacteristics();\r\n});\r\n\r\n// Функция для загрузки товаров\r\nconst loadProducts = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/products');\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке товаров');\r\n        }\r\n        const data = await response.json();\r\n        products.value = data;\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке товаров:', error);\r\n    }\r\n};\r\n\r\n// Функция для загрузки характеристик\r\nconst loadCharacteristics = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:1452/api/characteristics');  // Замените на URL для характеристик\r\n        if (!response.ok) {\r\n            throw new Error('Ошибка при загрузке характеристик');\r\n        }\r\n        const data = await response.json();\r\n        characteristics.value = data;\r\n\r\n        // Инициализация выбранных характеристик как пустых массивов\r\n        for (const char in characteristics.value) {\r\n            selectedCharacteristics.value[char] = [];\r\n        }\r\n    } catch (error) {\r\n        console.error('Ошибка при загрузке характеристик:', error);\r\n    }\r\n};\r\n\r\n// Функция для проверки, выбран ли элемент\r\nconst isChecked = (characteristic, value) => {\r\n    return selectedCharacteristics.value[characteristic]?.includes(value);\r\n};\r\n\r\n// Функция для изменения состояния выбора\r\nconst toggleSelection = (characteristic, value) => {\r\n    const selectedValues = selectedCharacteristics.value[characteristic];\r\n    const valueIndex = selectedValues.indexOf(value);\r\n\r\n    if (valueIndex > -1) {\r\n        // Удаляем значение из массива\r\n        selectedValues.splice(valueIndex, 1);\r\n    } else {\r\n        // Добавляем значение в массив\r\n        selectedValues.push(value);\r\n    }\r\n};\r\n\r\n// Фильтрация товаров по выбранным характеристикам\r\nconst filteredProducts = computed(() => {\r\n    return products.value.filter(product => {\r\n        return Object.keys(selectedCharacteristics.value).every(characteristic => {\r\n            const selectedValues = selectedCharacteristics.value[characteristic];\r\n\r\n            if (selectedValues.length === 0) {\r\n                return true; // Если не выбраны значения для этой характеристики, пропускаем\r\n            }\r\n\r\n            const productValues = product.characteristics\r\n                ? product.characteristics.filter(item => item.characteristic === characteristic).map(item => item.value)\r\n                : [];\r\n\r\n            return selectedValues.some(value => productValues.includes(value));\r\n        });\r\n    });\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.characteristic-filter {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.characteristic-filter div {\r\n    margin: 5px 0;\r\n}\r\n\r\n.product-list ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\n.product-list li {\r\n    margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;AAiCA,SAASA,GAAG,EAAEC,QAAQ,QAAU,KAAK;;;;;;;IAErC,MAAMC,QAAQ,GAAGF,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMG,eAAe,GAAGH,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,MAAMI,uBAAuB,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEzCK,SAAS,CAAC,YAAY;MAClB,MAAMC,YAAY,CAAC,CAAC;MACpB,MAAMC,mBAAmB,CAAC,CAAC;IAC/B,CAAC,CAAC;;IAEF;IACA,MAAMD,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,QAAQ,CAACY,KAAK,GAAGF,IAAI;MACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;;IAED;IACA,MAAMR,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC,CAAC,CAAE;QAC5E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;QACxD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCV,eAAe,CAACW,KAAK,GAAGF,IAAI;;QAE5B;QACA,KAAK,MAAMK,IAAI,IAAId,eAAe,CAACW,KAAK,EAAE;UACtCV,uBAAuB,CAACU,KAAK,CAACG,IAAI,CAAC,GAAG,EAAE;QAC5C;MACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC9D;IACJ,CAAC;;IAED;IACA,MAAMG,SAAS,GAAGA,CAACC,cAAc,EAAEL,KAAK,KAAK;MACzC,OAAOV,uBAAuB,CAACU,KAAK,CAACK,cAAc,CAAC,EAAEC,QAAQ,CAACN,KAAK,CAAC;IACzE,CAAC;;IAED;IACA,MAAMO,eAAe,GAAGA,CAACF,cAAc,EAAEL,KAAK,KAAK;MAC/C,MAAMQ,cAAc,GAAGlB,uBAAuB,CAACU,KAAK,CAACK,cAAc,CAAC;MACpE,MAAMI,UAAU,GAAGD,cAAc,CAACE,OAAO,CAACV,KAAK,CAAC;MAEhD,IAAIS,UAAU,GAAG,CAAC,CAAC,EAAE;QACjB;QACAD,cAAc,CAACG,MAAM,CAACF,UAAU,EAAE,CAAC,CAAC;MACxC,CAAC,MAAM;QACH;QACAD,cAAc,CAACI,IAAI,CAACZ,KAAK,CAAC;MAC9B;IACJ,CAAC;;IAED;IACA,MAAMa,gBAAgB,GAAG1B,QAAQ,CAAC,MAAM;MACpC,OAAOC,QAAQ,CAACY,KAAK,CAACc,MAAM,CAACC,OAAO,IAAI;QACpC,OAAOC,MAAM,CAACC,IAAI,CAAC3B,uBAAuB,CAACU,KAAK,CAAC,CAACkB,KAAK,CAACb,cAAc,IAAI;UACtE,MAAMG,cAAc,GAAGlB,uBAAuB,CAACU,KAAK,CAACK,cAAc,CAAC;UAEpE,IAAIG,cAAc,CAACW,MAAM,KAAK,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC,CAAC;UACjB;UAEA,MAAMC,aAAa,GAAGL,OAAO,CAAC1B,eAAe,GACvC0B,OAAO,CAAC1B,eAAe,CAACyB,MAAM,CAACO,IAAI,IAAIA,IAAI,CAAChB,cAAc,KAAKA,cAAc,CAAC,CAACiB,GAAG,CAACD,IAAI,IAAIA,IAAI,CAACrB,KAAK,CAAC,GACtG,EAAE;UAER,OAAOQ,cAAc,CAACe,IAAI,CAACvB,KAAK,IAAIoB,aAAa,CAACd,QAAQ,CAACN,KAAK,CAAC,CAAC;QACtE,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}